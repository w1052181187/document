<template>
  <div class="cloudcontent" id="add_template">
    <div class="main">
      <el-form :model="updateForm" label-width="120px">
        <el-row>
          <el-col :span="12">
            <el-form-item label="评估模板名称："  prop="name">
              <span>{{updateForm.name}}</span>
            </el-form-item>
          </el-col>
          <el-col :span="12">
            <el-form-item label="状态："  prop="name">
              <span>{{updateForm.status === 1 ? '启用' : '禁用'}}</span>
            </el-form-item>
          </el-col>
        </el-row>
      </el-form>
      <div class="top_txt">
        <span>评估项：</span>
      </div>
      <el-table
        :data="projectData"
        border
        :cell-style="handleCellStyle"
        :span-method="handleMerge"
        header-cell-class-name="tableheader">
        <el-table-column
          type="index"
          :index="handleIndex"
          label="序号"
          width="80"
          align="center">
        </el-table-column>
        <el-table-column
          prop="name"
          label="评估项分组"
          align="center"
          show-overflow-tooltip>
        </el-table-column>
        <el-table-column
          prop="item"
          label="评估项"
          align="center"
          show-overflow-tooltip>
        </el-table-column>
      </el-table>
      <!--分页-->
      <el-pagination
        background
        layout="prev, pager, next"
        :total="total"
        :page-size='pageSize'
        :current-page.sync="currentPage"
        @current-change="handleCurrentChange">
      </el-pagination>
      <!--分页-->
    </div>
  </div>
</template>

<script>
export default {
  name: '',
  data () {
    return {
      updateForm: {
        status: 1
      },
      projectData: [
        {
          name: '组1',
          item: '项1'
        },
        {
          name: '组1',
          item: '项2'
        },
        {
          name: '组1',
          item: '项3'
        },
        {
          name: '组2',
          item: '项1'
        },
        {
          name: '组2',
          item: '项2'
        },
        {
          name: '组2',
          item: '项3'
        },
        {
          name: '组2',
          item: '项4'
        }
      ],
      currentPage: 1,
      pageNo: 0,
      total: 0, // 总条数
      pageSize: 10, // 每页展示条数
      mergeArr: [], // 每行需要合并的行数
      indexArr: [] // 序号索引数组
    }
  },
  methods: {
    handleCellStyle ({row, column, rowIndex, columnIndex}) {
      if (columnIndex === 0 || columnIndex === 1) {
        return 'background-color: #f8faf7;color:#333'
      }
    },
    handleIndex (index) {
      return this.indexArr[index]
    },
    handleMerge ({ row, column, rowIndex, columnIndex }) {
      if (columnIndex === 0 || columnIndex === 1) {
        let rowCount = this.mergeArr[rowIndex]
        let colCount = rowCount > 0 ? 1 : 0
        return {
          rowspan: rowCount,
          colspan: colCount
        }
      }
    },
    handleMergeData () {
      this.mergeArr = []
      this.indexArr = []
      this.mergeArr.push(1)
      this.indexArr.push(1)
      let pos = 0
      let indexTmp = 1
      for (let i = 1; i < this.projectData.length; i++) {
        if (this.projectData[i].name === this.projectData[i - 1].name) {
          this.mergeArr[pos] += 1
          this.mergeArr.push(0)
        } else {
          this.mergeArr.push(1)
          pos = i
          indexTmp++
        }
        this.indexArr.push(indexTmp)
      }
    },
    handleCurrentChange (nowNum) {
      this.currentPage = nowNum
      this.pageNo = (nowNum - 1) * this.pageSize
      this.getTableData()
    },
    getTableData () {
      this.handleMergeData()
    }
  },
  mounted () {
    this.getTableData()
  }
}
</script>

<style lang="less">
  .top_txt{
    font-size: 14px;
    margin: 12px auto;
  }
</style>
