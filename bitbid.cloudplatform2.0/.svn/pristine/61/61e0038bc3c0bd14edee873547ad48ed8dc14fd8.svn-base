<template>
  <div class="header" id="header">
    <router-link :to="{path : '/main'}" class="returnHome" v-if="$store.getters.modules.includes(200)">
      首页
    </router-link>
    <div class="head_right">
      <p>欢迎您，<span :title="$store.getters.authUser.userName">{{$store.getters.authUser.userName}}</span></p>
      <img src="../../static/images/touxiang.png"/>
      <el-dropdown trigger="click" class="setbigbox">
        <span class="el-dropdown-link">
          <i class="el-icon-arrow-down el-icon--right" style="cursor: pointer;"></i>
        </span>
        <el-dropdown-menu slot="dropdown">
          <el-dropdown-item>
            <div @click="pwdClick">修改密码</div>
          </el-dropdown-item>
          <el-dropdown-item>
            <span  class="logoutBtn"  @click="logout">退出账号</span>
          </el-dropdown-item>
        </el-dropdown-menu>
      </el-dropdown>
    </div>
    <el-dialog title="修改密码" :visible.sync="dialogFormVisible" width="30%" center @close="handleClose">
      <el-form :model="pwdForm" label-width="100px" :rules="rules" ref="pwdForm">
        <el-form-item label="旧密码" prop="oldPass">
          <el-input type="password" v-model="pwdForm.oldPass" clearable placeholder="请输入旧密码">
            <i class="el-icon-edit el-input__icon" slot="suffix"></i>
          </el-input>
        </el-form-item>
        <el-form-item label="新密码" prop="pass">
          <el-input type="password" v-model="pwdForm.pass" clearable placeholder="请输入新密码">
            <i class="el-icon-edit el-input__icon" slot="suffix"></i>
          </el-input>
        </el-form-item>
        <el-form-item label="确认新密码" prop="checkPass">
          <el-input type="password" v-model="pwdForm.checkPass" clearable placeholder="请再次输入新密码">
            <i class="el-icon-edit el-input__icon" slot="suffix"></i>
          </el-input>
        </el-form-item>
      </el-form>
      <div slot="footer" class="dialog-footer">
        <el-button type="primary" @click="pwdOkClick">确 定</el-button>
        <el-button @click="handleClose">取 消</el-button>
      </div>
    </el-dialog>
  </div>
</template>
<script>
import { Message } from 'element-ui'
export default {
  name: 'headTop',
  data () {
    let validateOldPass = (rule, value, callback) => {
      if (value === '') {
        callback(new Error('请输入旧密码'))
      } else {
        callback()
      }
    }
    let validatePass = (rule, value, callback) => {
      if (value === '') {
        callback(new Error('请输入新密码'))
      } else {
        if (this.pwdForm.oldPass === value) {
          callback(new Error('新密码不能与旧密码一致'))
        }
        if (this.pwdForm.checkPass !== '') {
          this.$refs.pwdForm.validateField('checkPass')
        }
        callback()
      }
    }
    let validateRepeatPass = (rule, value, callback) => {
      if (value === '') {
        callback(new Error('请再次输入新密码'))
      } else if (value !== this.pwdForm.pass) {
        callback(new Error('两次输入密码不一致!'))
      } else {
        callback()
      }
    }
    return {
      dialogFormVisible: false,
      pwdForm: {},
      rules: {
        oldPass: [
          { required: true, message: '请输旧新密码', trigger: 'blur' },
          {validator: validateOldPass, trigger: 'blur', required: true},
          { min: 6, max: 20, message: '长度在 6到 20 个字符', trigger: ['blur', 'change'] }
        ],
        pass: [
          { required: true, message: '请输入新密码', trigger: 'blur' },
          {validator: validatePass, trigger: 'blur', required: true},
          { min: 6, max: 20, message: '长度在 6到 20 个字符', trigger: ['blur', 'change'] }
        ],
        checkPass: [
          { required: true, message: '请重新输入密码', trigger: 'blur' },
          {validator: validateRepeatPass, trigger: 'blur', required: true},
          { min: 6, max: 20, message: '长度在 6到 20 个字符', trigger: ['blur', 'change'] }
        ]
      }
    }
  },
  methods: {
    handleClose () {
      this.pwdForm = {}
      this.$refs['pwdForm'].resetFields()
      this.dialogFormVisible = false
    },
    logout () {
      this.$store.dispatch('Logout').then(() => {
        this.$router.push({path: '/login'})
      })
    },
    pwdClick () {
      this.dialogFormVisible = true
    },
    pwdOkClick () {
      this.$refs['pwdForm'].validate((valid) => {
        if (valid) {
          this.$store.dispatch('UpdatePwd', this.pwdForm).then((res) => {
            if (res.data.resCode === '0000') {
              this.dialogFormVisible = false
              // 重新登录
              Message({
                showClose: true,
                message: '密码修改成功，请重新登录',
                type: 'success',
                duration: 3 * 1000
              })
              let _this = this
              setTimeout(() => {
                _this.logout()
              }, 3000)
            } else {
              return false
            }
          })
        } else {
          return false
        }
      })
    }
  }
}
</script>

<style lang='less'>
  #header{
    height: 48px;
    line-height: 48px;
    width: 100%;
    position: absolute;
    left: 0px;
    top: 0px;
    background: #ffffff;
    .returnHome{
      padding-left: 20px;
      margin-left: 20px;
      text-decoration: none;
      font-size: 14px;
      color: #333333!important;
      cursor: pointer;
      background: url("../../static/images/ico_home.png") left center no-repeat;
    }
    .head_right{
      float: right;
      overflow: hidden;
      line-height:48px;
      margin-right: 20px;
    }
    .head_right p{
      float: left;
      margin: 0 20px;
      line-height: 48px;
      font-size: 12px;
    }
    .head_right img{ vertical-align: middle;}
    .logoutBtn{
      color: #108cee;
      font-size: 12px;
      cursor: pointer;
      margin-left: 5px;
    }
  }
</style>
