<template>
  <div class="cloudcontent"  id="cloud_myInitiated">
    <div class="topmain">
      <div class="seacher_box advancedsearch_box">
        <el-form :model="searchForm" ref="searchForm" label-width="85px" :validate-on-rule-change="true">
          <el-row>
            <el-col :span="24">
              <el-form-item label="提交日期：" style="float: left; margin-right: 20px;">
                <span :class="isTimeSelectAll ? 'all selectall': 'all'" @click="conditionCancel('提交日期')">不限</span>
                <el-radio-group v-model="searchForm.sendDateType"  @change="conditionSelect($event, '提交日期')">
                  <el-radio v-for="item in timeOption" :label="item.code" :key="item.code">{{item.name}}</el-radio>
                </el-radio-group>
              </el-form-item>
              <el-date-picker
                v-model="searchForm.customTime"
                v-if="searchForm.sendDateType === 6"
                @change = "filterTime"
                type="daterange"
                range-separator="至"
                start-placeholder="开始日期"
                end-placeholder="结束日期"
                :default-time="['00:00:00', '23:59:59']"
                value-format="yyyy-MM-dd HH:mm:ss">
              </el-date-picker>
            </el-col>
          </el-row>
          <el-row>
            <el-col style="width: 320px; float: left;">
              <el-form-item label="业务类型：" prop="businessType">
                <el-select v-model="searchForm.templateCode" placeholder="请选择" clearable>
                  <el-option
                    v-for="item in typeOptions"
                    :key="item.code"
                    :label="item.name"
                    :value="item.code">
                  </el-option>
                </el-select>
              </el-form-item>
            </el-col>
            <el-col style="width: 320px; float: left;">
              <el-form-item label="状态：" prop="status">
                <el-select v-model="searchForm.status" placeholder="请选择" clearable>
                  <el-option
                    v-for="item in statusOptions"
                    :key="item.value"
                    :label="item.label"
                    :value="item.value">
                  </el-option>
                </el-select>
              </el-form-item>
            </el-col>
            <el-col style="width: 320px; float: left;">
              <el-form-item label="标题：">
                <el-input class="search" v-model="searchForm.messageLike" placeholder="请输入标题"></el-input>
              </el-form-item>
            </el-col>
            <el-col style="width: 160px; float: left;">
              <el-button  type="primary" @click="search">查询</el-button>
              <el-button  @click="reset">重置</el-button>
            </el-col>
          </el-row>
        </el-form>
      </div>
    </div>
    <div class="main">
      <el-table
        :data="tableData"
        border
        style="width: 100%" header-cell-class-name="tableheader">
        <el-table-column
          type="index"
          label="序号"
          width="60"
          :index="indexMethod"
          align="center">
        </el-table-column>
        <el-table-column
          prop="title"
          label="标题"
          :formatter="simpleFormatData"
          show-overflow-tooltip>
        </el-table-column>
        <el-table-column
          prop="templateName"
          label="业务类型"
          width="160"
          :formatter="simpleFormatData"
          show-overflow-tooltip>
        </el-table-column>
        <el-table-column
          prop="status"
          label="状态"
          width="160"
          :formatter="simpleFormatData"
          show-overflow-tooltip>
          <template slot-scope="scope">
            <span v-if="scope.row.status === 0">已保存</span>
            <span v-if="scope.row.status === 1">已提交</span>
            <span v-if="scope.row.status === 2">待审批</span>
            <span v-if="scope.row.status === 3">通过</span>
            <span v-if="scope.row.status === 4">不通过</span>
            <span v-if="scope.row.status === 5">已撤回</span>
          </template>
        </el-table-column>
        <el-table-column
          prop="sendDate"
          label="提交日期"
          width="160"
          :formatter="formatDate"
          show-overflow-tooltip>
        </el-table-column>
        <el-table-column
          prop="communicationNum"
          label="沟通"
          width="120"
          :formatter="simpleFormatData"
          show-overflow-tooltip>
        </el-table-column>
        <el-table-column
          label="操作" align="center" width="220">
          <template slot-scope="scope">
            <el-button type="text" size="small" @click="handleClickEvent(scope, '查看')">查看</el-button>
            <el-button type="text" size="small" @click="handleClickEvent(scope, '编辑')" v-if="(scope.row.status === 0 || scope.row.status === 5) && $store.getters.permissions.includes('1080302')">编辑</el-button>
            <el-button type="text" size="small" @click="handleClickEvent(scope, '删除')" v-if="(scope.row.status === 0 || scope.row.status === 5) && $store.getters.permissions.includes('1080302')">删除</el-button>
          </template>
        </el-table-column>
      </el-table>
      <!--分页-->
      <el-pagination
        background
        layout="prev, pager, next"
        :total="total"
        :page-size='pageSize'
        :current-page.sync="currentPage"
        @current-change="handleCurrentChange"
        @next-click="handleCurrentNext">
      </el-pagination>
      <!--分页-->
    </div>
  </div>
</template>
<script>
import {dateFormat} from '@/assets/js/common'
import {templateInfo} from '@/api/system'
import {journalSummary} from '@/api/office'
export default {
  components: {
  },
  data () {
    return {
      searchForm: {
        sendDateType: '',
        status: '',
        businessType: ''
      },
      isTimeSelectAll: true,
      // 发送日期
      timeOption: [
        {
          name: '今天',
          code: 7
        },
        {
          name: '本周',
          code: 8
        },
        {
          name: '本月',
          code: 9
        },
        {
          name: '自定义',
          code: 6
        }
      ],
      statusOptions: [
        {
          value: null,
          label: '全部'
        },
        {
          value: 1,
          label: '已保存'
        },
        {
          value: 2,
          label: '待审批'
        },
        {
          value: 3,
          label: '通过'
        },
        {
          value: 4,
          label: '不通过'
        }, {
          value: 5,
          label: '已撤回'
        }
      ],
      typeOptions: [],
      tableData: [
      ],
      // 当前页
      currentPage: 1,
      pageNo: 0,
      total: 0, // 总条数
      pageSize: 10 // 每页展示条数
    }
  },
  created () {
    this.init()
  },
  methods: {
    init () {
      this.getTypeOptions()
      this.getTableData()
    },
    /** 获取所有业务类型 */
    getTypeOptions () {
      templateInfo.getAllBusinessType(this.$store.getters.authUser.enterpriseId).then((res) => {
        this.typeOptions = res.data.templateInfoList
      })
    },
    /** 获取列表数据 */
    getTableData () {
      let query = {
        pageNo: this.pageNo,
        pageSize: this.pageSize,
        enterpriseId: this.$store.getters.authUser.enterpriseId,
        creator: this.$store.getters.authUser.userId,
        type: 3
      }
      if (this.searchForm.sendDateType) {
        query.sendDateType = this.searchForm.sendDateType
      }
      if (this.searchForm.customTime) {
        query.sendDateLowerLimit = this.searchForm.customTime[0]
        query.sendDateUpperLimit = this.searchForm.customTime[1]
      }
      if (this.searchForm.templateCode) {
        query.relatedTemplateCode = this.searchForm.templateCode
      }
      if (this.searchForm.status) {
        query.status = this.searchForm.status
      }
      if (this.searchForm.messageLike) {
        query.messageLike = this.searchForm.messageLike
      }
      journalSummary.getList(query).then(res => {
        if (res.data.journalSummaryList) {
          this.tableData = res.data.journalSummaryList.list
          this.total = res.data.journalSummaryList.total
        }
      })
    },
    // 搜索条件 点击不限
    conditionCancel (label) {
      switch (label) {
        case '提交日期':
          this.searchForm.sendDateType = ''
          this.isTimeSelectAll = true
          break
        default:
          break
      }
    },
    // 高级搜索-搜索条件选择
    conditionSelect (value, label) {
      switch (label) {
        case '提交日期':
          this.searchForm.sendDateType = value
          this.isTimeSelectAll = false
          break
        default:
          break
      }
    },
    filterTime (value) {},
    // 查询
    search () {
      this.getTableData()
    },
    // 重置
    reset () {
      this.searchForm = {}
      this.isTimeSelectAll = true
      this.getTableData()
    },
    // 表格序号
    indexMethod (index) {
      return index + (this.currentPage - 1) * 10 + 1
    },
    // 普通格式化数据，空的时候展示"---"
    simpleFormatData (row, col, cellValue) {
      return cellValue || '---'
    },
    // 格式化时间
    formatDate (row, col, cellValue) {
      return cellValue ? dateFormat(cellValue, 'yyyy-MM-dd') : '---'
    },
    // 表格分页
    handleCurrentChange (nowNum) {
      this.currentPage = nowNum
      this.pageNo = (nowNum - 1) * this.pageSize
      this.getTableData()
    },
    handleCurrentNext (nowNum) {
      this.currentPage = nowNum
      this.pageNo = (nowNum - 1) * this.pageSize
      this.getTableData()
    },
    handleClickEvent (scope, type) {
      switch (type) {
        case '查看':
          this.$router.push({path: `/office/workApproval/detail/${scope.row.objectId}`})
          break
        case '编辑':
          this.$router.push({path: `/office/workApproval/update`, query: {objectId: scope.row.objectId, type: 3}})
          break
        case '删除':
          this.$confirm('确认删除吗?', '提示', {
            confirmButtonText: '确定',
            cancelButtonText: '取消',
            type: 'error'
          }).then(() => {
            // 删除
            journalSummary.deleteById(scope.row.objectId).then(() => {
              this.getTableData()
            })
          }).catch(() => {
            return false
          })
          break
        default:
          break
      }
    }
  },
  mounted () {}
}
</script>
<style lang="less">
  #cloud_myInitiated{
  }
</style>
