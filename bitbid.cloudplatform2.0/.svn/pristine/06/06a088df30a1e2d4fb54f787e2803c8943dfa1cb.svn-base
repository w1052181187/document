<template>
  <div class="cloudcontent">
    <div class="main">
      <el-form :model="updateForm" :rules="rules"  ref= "updateForm" label-width="200px" :validate-on-rule-change="true" :loading="formLoading">
        <el-row>
          <el-col :span="12">
            <el-form-item label="项目名称：" >
              <el-input v-model="updateForm.tenderProjectName" disabled></el-input>
            </el-form-item>
          </el-col>
          <el-col :span="12">
            <el-form-item label="项目编号：">
              <el-input v-model="updateForm.tenderProjectCode" disabled></el-input>
            </el-form-item>
          </el-col>
        </el-row>
        <!--<el-row>-->
          <!--<el-col :span="12">-->
            <!--<el-form-item label="标段名称：">-->
              <!--<el-input v-model="updateForm.bidSectionName" disabled></el-input>-->
            <!--</el-form-item>-->
          <!--</el-col>-->
          <!--<el-col :span="12">-->
            <!--<el-form-item label="标段编号：">-->
              <!--<el-input v-model="updateForm.bidSectionCode" disabled></el-input>-->
            <!--</el-form-item>-->
          <!--</el-col>-->
        <!--</el-row>-->
        <el-row>
          <el-col :span="12">
            <el-form-item label="公告名称："  prop="title">
              <el-input v-model="updateForm.title"></el-input>
            </el-form-item>
          </el-col>
          <el-col :span="12">
            <el-form-item label="递交投标文件方法："  prop="bidDocReferMethod">
              <el-input v-model="updateForm.bidDocReferMethod"></el-input>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row>
          <el-col :span="12">
            <el-form-item label="招标方式：" >
              <span>{{updateForm.tenderMode | filterTenderMode}}</span>
            </el-form-item>
          </el-col>
          <el-col :span="12">
            <el-form-item label="是否资格预审：" v-if="Number(updateForm.tenderMode) === 1">
              <span>{{updateForm.isPreBid | filterIsPreBid}}</span>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row>
          <el-col :span="12">
            <el-form-item label="公告结束时间：" prop="announcementEndTime">
              <el-date-picker
                v-model="updateForm.announcementEndTime"
                value-format="yyyy-MM-dd HH:mm:ss"
                type="datetime"
                start-placeholder="选择日期时间"
                @change="changeTime(updateForm.announcementEndTime, 1)">
              </el-date-picker>
            </el-form-item>
          </el-col>
          <el-col :span="12" v-if="updateForm.type === 1">
            <el-form-item label="开标时间：" prop="bidOpeningTime">
              <el-date-picker
                v-model="updateForm.bidOpeningTime"
                value-format="yyyy-MM-dd HH:mm:ss"
                type="datetime"
                start-placeholder="选择日期时间"
                @change="changeTime(updateForm.bidOpeningTime, 8)">
              </el-date-picker>
            </el-form-item>
          </el-col>
          <el-col :span="12" v-if="updateForm.type === 2">
            <el-form-item label="资格预审会时间：" prop="prequalificationTime">
              <el-date-picker
                v-model="updateForm.prequalificationTime"
                value-format="yyyy-MM-dd HH:mm:ss"
                type="datetime"
                start-placeholder="选择日期时间"
                @change="changeTime(updateForm.prequalificationTime, 8)">
              </el-date-picker>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row>
          <el-col :span="12" v-if="updateForm.type === 1">
            <el-form-item label="开标地点：" prop="bidOpeningAddress">
              <el-input v-model="updateForm.bidOpeningAddress"></el-input>
            </el-form-item>
          </el-col>
          <el-col :span="12" v-if="updateForm.type === 2">
            <el-form-item label="资格预审会地点：" prop="prequalificationAddress">
              <el-input v-model="updateForm.prequalificationAddress"></el-input>
            </el-form-item>
          </el-col>
          <el-col :span="12">
            <el-form-item label="是否需要报名：" prop="isSignUp">
              <el-select v-model="updateForm.isSignUp" placeholder="请选择" @change="changeIsSignUp">
                <el-option label="是" value="1"></el-option>
                <el-option label="否" value="0"></el-option>
              </el-select>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row v-if="Number(updateForm.isSignUp) !== 0">
          <el-col :span="12">
            <el-form-item label="报名开始时间：" prop="signUpBeginTime">
              <el-date-picker
                v-model="updateForm.signUpBeginTime"
                value-format="yyyy-MM-dd HH:mm:ss"
                type="datetime"
                start-placeholder="选择日期时间"
                @change="changeTime(updateForm.signUpBeginTime, 2)">
              </el-date-picker>
            </el-form-item>
          </el-col>
          <el-col :span="12">
            <el-form-item label="报名截止时间：" prop="signUpEndTime">
              <el-date-picker
                v-model="updateForm.signUpEndTime"
                value-format="yyyy-MM-dd HH:mm:ss"
                type="datetime"
                start-placeholder="选择日期时间"
                @change="changeTime(updateForm.signUpEndTime, 3)">
              </el-date-picker>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row v-if="updateForm.type === 1">
          <el-col :span="12">
            <el-form-item label="招标文件获取开始时间：" prop="biddingDocsBeginTime">
              <el-date-picker
                v-model="updateForm.biddingDocsBeginTime"
                value-format="yyyy-MM-dd HH:mm:ss"
                type="datetime"
                start-placeholder="选择日期时间"
                @change="changeTime(updateForm.biddingDocsBeginTime, 4)">
              </el-date-picker>
            </el-form-item>
          </el-col>
          <el-col :span="12">
            <el-form-item label="招标文件获取截止时间：" prop="biddingDocsEndTime">
              <el-date-picker
                v-model="updateForm.biddingDocsEndTime"
                value-format="yyyy-MM-dd HH:mm:ss"
                type="datetime"
                start-placeholder="选择日期时间"
                @change="changeTime(updateForm.biddingDocsEndTime, 5)">
              </el-date-picker>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row v-if="updateForm.type === 2">
          <el-col :span="12">
            <el-form-item label="资格预审文件获取开始时间：" prop="prequalificationDocsBeginTime">
              <el-date-picker
                v-model="updateForm.prequalificationDocsBeginTime"
                value-format="yyyy-MM-dd HH:mm:ss"
                type="datetime"
                start-placeholder="选择日期时间"
                @change="changeTime(updateForm.prequalificationDocsBeginTime, 6)">
              </el-date-picker>
            </el-form-item>
          </el-col>
          <el-col :span="12">
            <el-form-item label="资格预审文件获取截止时间：" prop="prequalificationDocsEndTime">
              <el-date-picker
                v-model="updateForm.prequalificationDocsEndTime"
                value-format="yyyy-MM-dd HH:mm:ss"
                type="datetime"
                start-placeholder="选择日期时间"
                @change="changeTime(updateForm.prequalificationDocsEndTime, 7)">
              </el-date-picker>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row>
          <el-col :span="12">
            <el-form-item label="公告链接：">
              <el-input v-model="updateForm.bulletinUrl"></el-input>
            </el-form-item>
          </el-col>
          <el-col :span="12">
            <el-form-item label="发布网站：">
              <el-input v-model="updateForm.publishUrl"></el-input>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row>
          <el-col :span="24">
            <el-form-item label="标段信息：" class="bitianicon">
              <el-table
                :data="bidSectionList"
                border
                style="width: 100%" header-cell-class-name="tableheader"
                @selection-change="handleSelectionChange">
                <el-table-column
                  type="selection"
                  width="50">
                </el-table-column>
                <el-table-column
                  prop="bidSectionCode"
                  label="标段编号"
                  show-overflow-tooltip>
                </el-table-column>
                <el-table-column
                  prop="bidSectionName"
                  label="标段名称"
                  show-overflow-tooltip>
                </el-table-column>
              </el-table>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row>
          <el-col :span="24" class="ueditor_box">
            <el-form-item label="公告内容：" class="bitianicon">
              <editor ref="ueditor" class="ueditor" :editread="editread"></editor>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row>
          <el-col :span="24">
            <el-form-item label="附件："  class="bitianicon">
              <upload-file @uploadSuccess="uploadOtherSuccess" @deleteSuccess="deleteSuccess"
                           :fileArrays="updateForm.fileInformationList"
                           fileType="9"
                           isImage="0"
                           fileMaxNum="1">
              </upload-file>
            </el-form-item>
          </el-col>
        </el-row>
        <el-button class="addbtn btn_right" @click="addNoticeBtn" v-if="false">+ 新增</el-button>
        <el-table
          :data="tableData"
          border
          style="width: 100%" header-cell-class-name="tableheader"
          v-if="false">
          <el-table-column
            type="index"
            label="序号"
            width="50">
          </el-table-column>
          <el-table-column
            prop="title"
            label="更正公告名称"
            show-overflow-tooltip>
          </el-table-column>
          <el-table-column
            prop="auditStatus"
            label="更正公告状态"
            :formatter="filterAuditStatus"
            show-overflow-tooltip>
          </el-table-column>
          <el-table-column
            prop="time"
            label="提交时间"
            width="160"
            show-overflow-tooltip>
          </el-table-column>
          <el-table-column
            label="操作" align="center">
            <template slot-scope="scope">
              <el-button type="text" size="small" @click="handleNoticeDetail(scope)">查看</el-button>
              <el-button type="text" size="small" @click="handleNoticeEdit(scope)" v-if="scope.row.auditStatus === 0">编辑</el-button>
              <el-button type="text" size="small" @click="handleNoticeDel(scope)" v-if="scope.row.auditStatus === 0">删除</el-button>
            </template>
          </el-table-column>
        </el-table>
        <!--分页-->
        <el-pagination
          background
          layout="prev, pager, next"
          :total="total"
          :page-size='pageSize'
          :current-page.sync="currentPage"
          @current-change="handleCurrentChange"
          @next-click="handleCurrentNext"
          v-if="false">
        </el-pagination>
        <!--分页-->
        <el-form-item class="submit-radio">
          <el-button type="primary" @click="handleClickEvent('updateForm','save')" :loading="loading">保存</el-button>
          <el-button type="primary" class="submitBtn" @click="handleClickEvent('updateForm','submit')" :loading="loading">提交</el-button>
          <el-button class="cancal" @click="handleClickEvent('updateForm','cancel')">取消</el-button>
        </el-form-item>
      </el-form>
      <submitApproveDialog :flowStatus="flowStatus" :tenderSystemCode="updateForm.tenderSystemCode" :showVisible="approveDialogVisable" @confirmSubmit="confirmSubmit" @handleCancel="cancelApprove"></submitApproveDialog>
    </div>
  </div>
</template>

<script>
import editor from '@/components/ueditor/ueditor.vue'
import uploadFile from '@/components/upload/publicFileUpload'
import {tenderProject, bidSection, bulletinInfo} from '@/api/project/index'
import submitApproveDialog from '@/pages/project/commonCompents/submitApproveDialog'
import {dateFormat} from '@/assets/js/common'
export default {
  components: {
    editor,
    uploadFile,
    submitApproveDialog
  },
  name: '',
  data () {
    return {
      flowStatus: 3,
      loading: false,
      formLoading: false,
      updateForm: {
        tenderProjectName: '',
        fileInformationList: [],
        prequalificationTime: '',
        approvalFlowExecutorList: [],
        noticeList: [],
        signUpBeginTime: '',
        signUpEndTime: ''
      },
      rules: {
        title: [
          { required: true, message: '公告名称不能为空', trigger: ['blur', 'change'] }
        ],
        bidDocReferMethod: [
          { required: true, message: '递交投标文件方法不能为空', trigger: ['blur', 'change'] }
        ],
        bidSectionList: [
          { required: true, message: '请选择标段', trigger: ['blur', 'change'] }
        ],
        content: [
          {required: true, message: '公告内容不能为空', trigger: ['blur', 'change']}
        ],
        bidOpeningTime: [
          {required: true, message: '开标时间不能为空', trigger: ['blur', 'change']}
        ],
        bidOpeningAddress: [
          {required: true, message: '开标地点不能为空', trigger: ['blur', 'change']}
        ],
        prequalificationTime: [
          {required: true, message: '资格预审会时间不能为空', trigger: ['blur', 'change']}
        ],
        prequalificationAddress: [
          {required: true, message: '资格预审会地点不能为空', trigger: ['blur', 'change']}
        ],
        announcementEndTime: [
          {required: true, message: '公告结束时间不能为空', trigger: ['blur', 'change']}
        ],
        isSignUp: [
          {required: true, message: '请选择是否需要报名信息', trigger: ['blur', 'change']}
        ],
        signUpBeginTime: [
          {required: true, message: '报名开始时间不能为空', trigger: ['blur', 'change']}
        ],
        signUpEndTime: [
          {required: true, message: '报名截止时间不能为空', trigger: ['blur', 'change']}
        ],
        biddingDocsBeginTime: [
          {required: true, message: '招标文件获取开始时间不能为空', trigger: ['blur', 'change']}
        ],
        biddingDocsEndTime: [
          {required: true, message: '招标文件获取截止时间不能为空', trigger: ['blur', 'change']}
        ],
        prequalificationDocsBeginTime: [
          {required: true, message: '资格预审文件获取开始时间不能为空', trigger: ['blur', 'change']}
        ],
        prequalificationDocsEndTime: [
          {required: true, message: '资格预审文件获取截止时间不能为空', trigger: ['blur', 'change']}
        ]
      },
      // 富文本
      editread: false,
      tableData: [],
      supplierList: [
        {
          name: 1,
          status: 1
        },
        {
          name: 1,
          status: 0
        }
      ],
      sectionList: [],
      // 当前页
      currentPage: 1,
      pageNo: 0,
      total: 100, // 总条数
      pageSize: 10, // 每页展示条数
      bidSectionList: [], // 页面上展示出来的可选择的标段信息
      tenderProjectInfo: {}, // 用于查询是否为资格预审的项目（公告信息、招标项目类型、招标组织形式）
      approveDialogVisable: false
    }
  },
  watch: {
    '$route': 'getTableData'
  },
  created () {
    this.getChooseBidSectionInfo()
    this.getBidSectionList()
    this.getTenderProjectInfo()
    // this.getTableData()
  },
  filters: {
    /** 招标方式 */
    filterTenderMode (value) {
      if (Number(value) === 1) {
        return '公开招标'
      } else if (Number(value) === 2) {
        return '邀请招标'
      } else if (Number(value) === 3) {
        return '竞争性谈判'
      } else if (Number(value) === 4) {
        return '单一来源采购'
      } else if (Number(value) === 5) {
        return '询价采购'
      } else if (Number(value) === 6) {
        return '竞争性磋商'
      }
    },
    /** 是否资格预审 */
    filterIsPreBid (value) {
      if (value === 0) {
        return '否'
      } else if (value === 1) {
        return '是'
      }
    }
  },
  methods: {
    /** 时间的判断 */
    changeTime (data, val) {
      // 1.公告结束时间：大于当前时间
      // 2.报名开始时间：大于等于当前时间，小于报名截止时间
      // 3.报名截止时间：报名开始时间不为空时，大于报名开始时间；报名开始时间为空时，大于当前时间
      // 4.招标文件获取开始时间: 报名开始时间不为空时，大于报名开始时间；报名开始时间为空时，大于等于当前时间
      // 5.招标文件获取截止时间: 招标文件获取开始时间不为空时，大于招标文件获取开始时间；招标文件获取开始时间为空时，大于报名开始时间（报名开始时间为空时，大于等于当前时间）
      // 6.资格预审文件获取开始时间: 报名开始时间不为空时，大于报名开始时间；报名开始时间为空时，大于等于当前时间
      // 7.资格预审文件获取截止时间: 资格预审文件获取开始时间不为空时，大于资格预审文件获取开始时间；资格预审文件获取开始时间为空时，大于报名开始时间（报名开始时间为空时，大于等于当前时间）
      // 8.开标时间：招标文件/资格预审文件获取截止时间不为空时，大于招标文件/资格预审文件获取截止时间；
      //             招标文件/资格预审文件获取截止时间为空时，大于招标文件/资格预审文件获取开始时间（招标文件/资格预审文件获取开始时间为空时，大于报名开始时间（报名开始时间为空时，大于等于当前时间））
      let inputDate = dateFormat(data, 'yyyyMMddhhmmss')
      let currentDate = dateFormat(new Date(), 'yyyyMMddhhmmss')
      let flag = true
      let msg = ''
      switch (val) {
        case 1:
          if (inputDate <= currentDate) {
            flag = false
            msg = '公告结束时间必须大于当前时间'
          }
          break
        case 2:
          let signUpEndDate = dateFormat(this.updateForm.signUpEndTime, 'yyyyMMddhhmmss')
          if (inputDate < currentDate) {
            flag = false
            msg = '报名开始时间不能小于当前时间'
          } else {
            if (signUpEndDate && (signUpEndDate !== '' || signUpEndDate !== null)) {
              if (inputDate >= signUpEndDate) {
                flag = false
                msg = '报名开始时间必须小于报名截止时间'
              }
            }
          }
          break
        case 3:
          let signUpBeginDate = dateFormat(this.updateForm.signUpBeginTime, 'yyyyMMddhhmmss')
          if (signUpBeginDate && (signUpBeginDate !== '' || signUpBeginDate !== null)) {
            if (inputDate <= signUpBeginDate) {
              flag = false
              msg = '报名截止时间必须大于报名开始时间'
            }
          } else {
            if (inputDate < currentDate) {
              flag = false
              msg = '报名截止时间不能小于当前时间'
            }
          }
          break
        case 4:
          signUpBeginDate = dateFormat(this.updateForm.signUpBeginTime, 'yyyyMMddhhmmss')
          if (signUpBeginDate && (signUpBeginDate !== '' || signUpBeginDate !== null)) {
            if (inputDate <= signUpBeginDate) {
              flag = false
              msg = '招标文件获取开始时间必须大于报名开始时间'
            }
          } else {
            if (inputDate < currentDate) {
              flag = false
              msg = '招标文件获取开始时间不能小于当前时间'
            }
          }
          break
        case 5:
          let docsBeginDate = dateFormat(this.updateForm.biddingDocsBeginTime, 'yyyyMMddhhmmss')
          if (docsBeginDate && (docsBeginDate !== '' || docsBeginDate !== null)) {
            if (inputDate <= docsBeginDate) {
              flag = false
              msg = '招标文件获取截止时间必须大于招标文件获取开始时间'
            }
          } else {
            signUpBeginDate = dateFormat(this.updateForm.signUpBeginTime, 'yyyyMMddhhmmss')
            if (signUpBeginDate && (signUpBeginDate !== '' || signUpBeginDate !== null)) {
              if (inputDate <= signUpBeginDate) {
                flag = false
                msg = '在招标文件获取开始时间不存在的时候，招标文件获取截止时间必须大于报名开始时间'
              }
            } else {
              if (inputDate < currentDate) {
                flag = false
                msg = '在招标文件获取开始时间、报名开始时间不存在的时候，招标文件获取开始时间不能小于当前时间'
              }
            }
          }
          break
        case 6:
          signUpBeginDate = dateFormat(this.updateForm.signUpBeginTime, 'yyyyMMddhhmmss')
          if (signUpBeginDate && (signUpBeginDate !== '' || signUpBeginDate !== null)) {
            if (inputDate <= signUpBeginDate) {
              flag = false
              msg = '资格预审文件获取开始时间必须大于报名开始时间'
            }
          } else {
            if (inputDate < currentDate) {
              flag = false
              msg = '资格预审文件获取开始时间不能小于当前时间'
            }
          }
          break
        case 7:
          docsBeginDate = dateFormat(this.updateForm.prequalificationDocsBeginTime, 'yyyyMMddhhmmss')
          if (docsBeginDate && (docsBeginDate !== '' || docsBeginDate !== null)) {
            if (inputDate <= docsBeginDate) {
              flag = false
              msg = '资格预审文件获取截止时间必须大于资格预审文件获取开始时间'
            }
          } else {
            signUpBeginDate = dateFormat(this.updateForm.signUpBeginTime, 'yyyyMMddhhmmss')
            if (signUpBeginDate && (signUpBeginDate !== '' || signUpBeginDate !== null)) {
              if (inputDate <= signUpBeginDate) {
                flag = false
                msg = '在资格预审文件获取开始时间不存在的时候，资格预审文件获取截止时间必须大于报名开始时间'
              }
            } else {
              if (inputDate < currentDate) {
                flag = false
                msg = '在资格预审文件获取开始时间、报名开始时间不存在的时候，资格预审文件获取开始时间不能小于当前时间'
              }
            }
          }
          break
        case 8:
          let docsEndDate = ''
          if (this.updateForm.type === 1) { // 招标文件
            docsEndDate = dateFormat(this.updateForm.biddingDocsEndTime, 'yyyyMMddhhmmss')
          } else if (this.updateForm.type === 2) { // 资格预审文件
            docsEndDate = dateFormat(this.updateForm.prequalificationDocsEndTime, 'yyyyMMddhhmmss')
          }
          if (docsEndDate && (docsEndDate !== '' || docsEndDate !== null)) {
            if (inputDate <= docsEndDate) {
              flag = false
              msg = this.updateForm.type === 1 ? '开标时间必须大于招标文件获取截止时间' : '资格预审会时间必须大于资格预审文件获取截止时间'
            }
          } else {
            if (this.updateForm.type === 1) { // 招标文件
              docsBeginDate = dateFormat(this.updateForm.biddingDocsBeginTime, 'yyyyMMddhhmmss')
            } else if (this.updateForm.type === 2) { // 资格预审文件
              docsBeginDate = dateFormat(this.updateForm.prequalificationDocsBeginTime, 'yyyyMMddhhmmss')
            }
            if (docsBeginDate && (docsBeginDate !== '' || docsBeginDate !== null)) {
              if (inputDate <= docsBeginDate) {
                flag = false
                msg = this.updateForm.type === 1 ? '在招标文件获取截止时间不存在的时候，开标时间必须大于招标文件获取开始时间' : '在资格预审文件获取截止时间不存在的时候，资格预审会时间必须大于资格预审文件获取开始时间'
              }
            } else {
              signUpBeginDate = dateFormat(this.updateForm.signUpBeginTime, 'yyyyMMddhhmmss')
              if (signUpBeginDate && (signUpBeginDate !== '' || signUpBeginDate !== null)) {
                if (inputDate <= signUpBeginDate) {
                  flag = false
                  msg = this.updateForm.type === 1 ? '在招标文件获取开始时间、招标文件获取截止时间不存在的时候，开标时间必须大于报名开始时间' : '在资格预审文件获取开始时间、资格预审文件获取截止时间不存在的时候，资格预审会时间必须大于报名开始时间'
                }
              } else {
                if (inputDate < currentDate) {
                  flag = false
                  msg = this.updateForm.type === 1 ? '在招标文件获取开始时间、招标文件获取截止时间、报名开始时间不存在的时候，开标时间不能小于当前时间' : '在资格预审文件获取开始时间、资格预审文件获取截止时间、报名开始时间不存在的时候，资格预审会时间不能小于当前时间'
                }
              }
            }
          }
          break
      }
      if (!flag) {
        this.$message({
          message: msg,
          type: 'warning'
        })
        return false
      }
    },
    /** 修改是否报名信息 */
    changeIsSignUp (val) {
      this.updateForm.signUpBeginTime = ''
      this.updateForm.signUpEndTime = ''
    },
    /** 审批状态(0.未提交；1.待审批；2.已审批；3.已驳回；4.已提交（不需要审批）  */
    filterAuditStatus (row) {
      if (row.auditStatus === 0) {
        return '已保存'
      } else if (row.auditStatus === 1) {
        return '待审批'
      } else if (row.auditStatus === 2) {
        return '已审批'
      } else if (row.auditStatus === 4) {
        return '已驳回'
      } else if (row.auditStatus === 5) {
        return '已提交'
      }
    },
    /** 获取当前选择的标段信息 */
    getChooseBidSectionInfo () {
      this.formLoading = true
      bidSection.getOne(this.$route.query.sectionSystemCode).then((res) => {
        if (res.data.bidSection) {
          // 页面展示
          this.updateForm.tenderProjectName = res.data.bidSection.tenderProjectName
          this.updateForm.tenderProjectCode = res.data.bidSection.tenderProjectCode
          this.updateForm.bidSectionName = res.data.bidSection.bidSectionName
          this.updateForm.bidSectionCode = res.data.bidSection.bidSectionCode
          // 用于保存关联关系
          this.updateForm.currentBidSectionName = res.data.bidSection.bidSectionName
          this.updateForm.currentBidSectionCode = res.data.bidSection.bidSectionCode
          this.updateForm.tenderSystemCode = res.data.bidSection.tenderSystemCode
          this.updateForm.sectionSystemCode = res.data.bidSection.code
          this.updateForm.enterpriseId = res.data.bidSection.enterpriseId
          this.updateForm.departmentId = res.data.bidSection.departmentId
          // 审批使用
          this.updateForm.tenderSystemCode = res.data.bidSection.tenderSystemCode
          // 五期需求：保存招标方式和资格预审方式
          this.updateForm.tenderMode = res.data.bidSection.tenderMode
          this.updateForm.isPreBid = res.data.bidSection.isPreBid
        }
      })
    },
    /** 获取不在任何公告中的标段信息 */
    getBidSectionList () {
      bidSection.getNotUsedBidSection(this.$route.query.tenderSystemCode).then((res) => {
        if (res.data.bidSectionList) {
          this.bidSectionList = res.data.bidSectionList
        }
      })
    },
    /** 根据标段code获取对应的招标项目信息 */
    getTenderProjectInfo () {
      tenderProject.getByBidSectionCode(this.$route.query.sectionSystemCode).then((res) => {
        if (res.data.tenderProject) {
          this.tenderProjectInfo = res.data.tenderProject
          // 公告类型
          this.updateForm.type = Number(this.tenderProjectInfo.isPreBid) === 0 ? 1 : 2
          // 招标项目类型
          this.updateForm.tenderProjectType = this.tenderProjectInfo.tenderProjectType
          // 招标组织形式
          this.updateForm.tenderOrganizeForm = this.tenderProjectInfo.tenderOrganizeForm
        }
        this.formLoading = false
      })
    },
    /** 获取列表数据 */
    getTableData () {
      bulletinInfo.getByRelaSection({
        pageNo: this.pageNo,
        pageSize: this.pageSize,
        enterpriseId: this.$store.getters.authUser.enterpriseId,
        tenderSystemCode: this.tenderSystemCode,
        sectionSystemCode: this.sectionSystemCode,
        type: 3
      }).then((res) => {
        if (res.data.bulletinInfoList && res.data.bulletinInfoList.list) {
          this.tableData = res.data.bulletinInfoList.list
          this.total = res.data.bulletinInfoList.total
        }
      })
    },
    // 表单分页
    handleCurrentChange (nowNum) {
      this.currentPage = nowNum
      this.pageNo = (nowNum - 1) * this.pageSize
      this.getTableData(parseInt(this.pageNo), parseInt(this.pageSize))
    },
    handleCurrentNext (nowNum) {
      this.currentPage = nowNum
      this.pageNo = (nowNum - 1) * this.pageSize
      this.getTableData(parseInt(this.pageNo), parseInt(this.pageSize))
    },
    handleSelectionChange (val) {
      this.sectionList = val // 选择的标段信息
    },
    /**
     * 增加邀请公告
     */
    addNoticeBtn () {
      this.$router.push({path: `/project/projectProcess/announcement/add_notice`, query: {sectionSystemCode: this.$route.query.sectionSystemCode, originalTitle: this.updateForm.title}})
    },
    handleNoticeEdit (scope) {
      this.$router.push({path: `/project/projectProcess/announcement/update_notice`, query: {objectId: scope.row.objectId}})
    },
    handleNoticeDetail (scope) {
      this.$router.push({path: `/project/projectProcess/announcement/notice_detail/${scope.row.objectId}`})
    },
    handleNoticeDel (scop) {
      this.$confirm('确认删除吗?', '提示', {
        confirmButtonText: '确定',
        cancelButtonText: '取消',
        type: 'error'
      }).then(() => {
        // **
      }).catch(() => {
        return false
      })
    },
    // 上传附件
    uploadOtherSuccess (file) {
      this.updateForm.fileInformationList.push(file)
    },
    deleteSuccess (fileId) {
      this.updateForm.fileInformationList = this.updateForm.fileInformationList.filter(item => item.relativePath !== fileId)
    },
    validLinks (str) {
      const reg = /^http(s)?:\/\/([\w-]+\.)+[\w-]+(\/[\w- ./?%&=]*)?$/
      return reg.test(str)
    },
    /* 按钮点击事件：提交、保存、取消 */
    handleClickEvent (formName, type) {
      if (Object.is(type, 'submit') || Object.is(type, 'save')) {
        // 公告链接格式的判断
        if (this.updateForm.bulletinUrl && !this.validLinks(this.updateForm.bulletinUrl)) {
          this.$message({
            type: 'warning',
            message: '公告链接格式有误！'
          })
          return false
        }
        if (this.sectionList.length === 0) {
          this.$message.warning('请选择标段！')
          return false
        } else {
          this.updateForm.bidSectionList = this.sectionList
        }
        if (this.updateForm.fileInformationList.length === 0) {
          this.$message.warning('附件不能为空！')
          return false
        }
        // 获取文本编辑器中的内容
        if (this.$refs.ueditor.getContent()) {
          this.updateForm.content = this.$refs.ueditor.getContent()
        } else {
          this.$message({
            type: 'warning',
            message: '请输入公告内容'
          })
          return false
        }
        this.$refs[formName].validate((valid) => {
          if (valid) {
            // 公告结束时间-updateForm.announcementEndTime
            // 开标时间-updateForm.bidOpeningTime
            // 资格预审会时间-updateForm.prequalificationTime
            // 报名开始时间-updateForm.signUpBeginTime
            // 报名截止时间-updateForm.signUpEndTime
            // 招标文件获取开始时间-updateForm.biddingDocsBeginTime
            // 招标文件获取截止时间-updateForm.biddingDocsEndTime
            // 资格预审文件获取开始时间-updateForm.prequalificationDocsBeginTime
            // 资格预审文件获取截止时间-updateForm.prequalificationDocsEndTime
            /**
             * 公告结束时间 > 当前时间
             * 报名截止时间 > 报名开始时间 >= 当前时间
             * 开标时间 > 招标文件获取截止时间 > 招标文件获取开始时间 > 报名开始时间
             */
            let currentDate = dateFormat(new Date(), 'yyyyMMddhhmmss')
            let announcementEndTime = dateFormat(this.updateForm.announcementEndTime, 'yyyyMMddhhmmss')
            let bidOpeningTime = dateFormat(this.updateForm.bidOpeningTime, 'yyyyMMddhhmmss')
            let prequalificationTime = dateFormat(this.updateForm.prequalificationTime, 'yyyyMMddhhmmss')
            let signUpBeginTime = dateFormat(this.updateForm.signUpBeginTime, 'yyyyMMddhhmmss')
            let signUpEndTime = dateFormat(this.updateForm.signUpEndTime, 'yyyyMMddhhmmss')
            let biddingDocsBeginTime = dateFormat(this.updateForm.biddingDocsBeginTime, 'yyyyMMddhhmmss')
            let biddingDocsEndTime = dateFormat(this.updateForm.biddingDocsEndTime, 'yyyyMMddhhmmss')
            let prequalificationDocsBeginTime = dateFormat(this.updateForm.prequalificationDocsBeginTime, 'yyyyMMddhhmmss')
            let prequalificationDocsEndTime = dateFormat(this.updateForm.prequalificationDocsEndTime, 'yyyyMMddhhmmss')
            if (announcementEndTime <= currentDate) {
              this.$message.warning('时间要求：公告结束时间 > 当前时间')
              return false
            }
            if (bidOpeningTime) { // 后审项目
              if (signUpBeginTime && signUpEndTime) { // 报名
                if (signUpEndTime > signUpBeginTime && signUpBeginTime >= currentDate) {
                } else {
                  this.$message.warning('时间要求：报名截止时间 > 报名开始时间 >= 当前时间')
                  return false
                }
                if (bidOpeningTime > biddingDocsEndTime && biddingDocsEndTime > biddingDocsBeginTime && biddingDocsBeginTime > signUpBeginTime) {
                } else {
                  this.$message.warning('时间要求：开标时间 > 招标文件获取截止时间 > 招标文件获取开始时间 > 报名开始时间')
                  return false
                }
              } else {
                if (bidOpeningTime > biddingDocsEndTime && biddingDocsEndTime > biddingDocsBeginTime) {
                } else {
                  this.$message.warning('时间要求：开标时间 > 招标文件获取截止时间 > 招标文件获取开始时间')
                  return false
                }
              }
            } else { // 预审
              if (signUpBeginTime && signUpEndTime) { // 报名
                if (signUpEndTime > signUpBeginTime && signUpBeginTime >= currentDate) {
                } else {
                  this.$message.warning('时间要求：报名截止时间 > 报名开始时间 >= 当前时间')
                  return false
                }
                if (prequalificationTime > prequalificationDocsEndTime && prequalificationDocsEndTime > prequalificationDocsBeginTime && prequalificationDocsBeginTime > signUpBeginTime) {
                } else {
                  this.$message.warning('时间要求：资格预审会时间 > 资格预审文件获取截止时间 > 资格预审文件获取开始时间 > 报名开始时间')
                  return false
                }
              } else {
                if (prequalificationTime > prequalificationDocsEndTime && prequalificationDocsEndTime > prequalificationDocsBeginTime) {
                } else {
                  this.$message.warning('时间要求：资格预审会时间 > 资格预审文件获取截止时间 > 资格预审文件获取开始时间')
                  return false
                }
              }
            }
            if (Object.is(type, 'save')) {
              this.approveDialogVisable = false
              this.submitData(type)
            } else {
              this.approveDialogVisable = true
            }
          } else {
            return false
          }
        })
      } else if (Object.is(type, 'cancel')) {
        this.close()
      }
    },
    submitData (type) {
      let msg = Object.is(type, 'submit') ? '提交后数据将锁定，不允许修改，确认要提交吗?' : '确认要保存吗?'
      this.$confirm(msg, '提示', {
        confirmButtonText: '确定',
        cancelButtonText: '取消',
        type: 'warning',
        beforeClose: (action, instance, done) => {
          done()
        }
      }).then(() => {
        this.loading = true
        // 根据type设置当前招标项目的状态
        if (Object.is(type, 'submit')) {
          this.cancelApprove()
          this.updateForm.auditStatus = 4 // 暂时不考虑审批
          this.updateForm.currentBidSectionSystemCode = this.$route.query.sectionSystemCode
        } else {
          this.updateForm.auditStatus = 0
        }
        // 路由地址的设定
        this.updateForm.routingPath = '/project/projectProcess/announcement/detail/'
        bulletinInfo.save(this.updateForm).then((res) => {
          this.loading = false
          if (res.data.resCode === '0000') {
            this.close()
          }
        })
      }).catch(() => {
        this.loading = false
        return false
      })
    },
    // 确认提交
    confirmSubmit (record) {
      this.updateForm.approvalFlowExecutorList = []
      this.updateForm.noticeList = []
      for (let i = 0; i < record.approveList.length; i++) {
        let obj = {
          usersId: record.approveList[i].objectId,
          flowLevel: i + 1
        }
        this.updateForm.approvalFlowExecutorList.push(obj)
      }
      if (record.noticeList && record.noticeList.length > 0) {
        this.updateForm.noticeList = record.noticeList
      }
      this.submitData('submit')
    },
    cancelApprove () {
      this.approveDialogVisable = false
    },
    close () {
      this.$store.commit('delete_tabs', this.$route.fullPath)
      this.$router.go(-1)
    }
  },
  mounted () {
  }
}
</script>

<style scoped>
  .addbtn{
    border: 1px solid #3f63f6;
    height: 32px;
    padding: 7px 12px;
    margin-bottom: 12px;
  }
  .btn_right{
    float: right;
  }
</style>
