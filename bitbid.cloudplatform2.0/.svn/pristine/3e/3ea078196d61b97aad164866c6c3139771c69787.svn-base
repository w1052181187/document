<template>
  <div id="application">
    <div class="file-type-name">
      <span>资格预审申请文件</span>
    </div>
    <el-table
      :data="item.refArchivesFileInformationList"
      style="width: 100%"
      border
      header-cell-class-name="tableheader-filetype">
      <el-table-column
        type="index"
        :index="1"
        label="序号"
        width="80"
        align="center">
      </el-table-column>
      <el-table-column
        prop="bidderName"
        label="投标单位"
        align="center">
      </el-table-column>
      <el-table-column
        prop="fileInformation.fileName"
        label="资格预审申请文件"
        align="center">
      </el-table-column>
      <el-table-column
        label="操作"
        width="200px"
        align="center">
        <template slot-scope="scope">
          <el-button
            @click="handleSee(scope)"
            type="text"
            size="small">
            查看
          </el-button>
          <el-button
            v-if="canEdit"
            @click="handleEdit(scope)"
            type="text"
            size="small">
            修改
          </el-button>
          <el-button
            v-if="canEdit"
            @click="deleteRow(scope)"
            type="text"
            size="small">
            删除
          </el-button>
        </template>
      </el-table-column>
    </el-table>
    <div class="file-type-add" @click="handleAdd" v-if="canEdit">
      <span>+ 添加投标单位</span>
    </div>
    <!--增加弹框-->
    <el-dialog :before-close='cancelFun' title="资格预审申请文件" :visible.sync="dialogVisible"  width="50%">
      <el-form :model="enclosure" :rules="rules" ref="enclosure" :label-width="formLabelWidth">
        <el-form-item label="投标单位：" prop="bidderName">
          <el-input v-model="enclosure.bidderName" readonly placeholder="请选择">
            <el-button slot="append" icon="el-icon-search" @click="showCustomerDialog"></el-button>
          </el-input>
        </el-form-item>
        <el-form-item label="上传文件：">
          <upload-file @uploadSuccess="uploadOtherSuccess" @deleteSuccess="deleteSuccess"
                       :fileArrays="enclosure.fileInformationList"
                       :fileType="fileType"
                       isImage="0">
          </upload-file>
        </el-form-item>
      </el-form>
      <div slot="footer" class="dialog-footer">
        <el-button class='cancle' @click="cancelFun">取消</el-button>
        <el-button type="primary" @click="handleConfirm('enclosure')" :loading="isLoading">确认</el-button>
      </div>
    </el-dialog>
    <customer-radio-dialog :showVisible="showCustomerVisible" @selected="selectedCustomer" @showDialog="showCustomerDialog"></customer-radio-dialog>
  </div>
</template>
<script>
import {downloadFile} from '@/assets/js/common'
import uploadFile from '@/components/upload/publicFileUpload'
import {archivesFile} from '@/api/archives'
import CustomerRadioDialog from '@/pages/customer/customer/dialog/radio_dialog.vue'
export default {
  components: {
    uploadFile,
    CustomerRadioDialog
  },
  data () {
    return {
      // 投标人的数据
      enclosure: {
        fileInformationList: [],
        bidderName: '',
        objectId: null
      },
      fileType: 9,
      // 判断
      rules: {
        bidderName: [
          {required: true, message: '投标单位不能为空', trigger: 'blur'},
          {min: 1, max: 200, message: '请输入1~200个字符', trigger: 'blur'}
        ]
      },
      dialogVisible: false,
      formLabelWidth: '120px',
      isLoading: false,
      // 是否展示客户
      showCustomerVisible: false,
      fileIndex: '',
      isUpdate: false
    }
  },
  props: ['item', 'canEdit'],
  watch: {
  },
  methods: {
    // 选择客户
    selectedCustomer (obj) {
      this.enclosure.bidderName = obj.name
    },
    // 客户弹框打开
    showCustomerDialog () {
      this.showCustomerVisible = !this.showCustomerVisible
    },
    // 上传附件
    uploadOtherSuccess (file) {
      this.enclosure.fileInformationList = [file]
    },
    deleteSuccess (fileId) {
      this.enclosure.fileInformationList = this.enclosure.fileInformationList.filter(item => item.relativePath !== fileId)
    },
    handleAdd () {
      this.dialogVisible = true
      this.enclosure = {
        fileInformationList: [],
        bidderName: ''
      }
      this.isUpdate = false
    },
    handleConfirm (formName) {
      this.$refs[formName].validate((valid) => {
        if (valid) {
          this.isLoading = true
          archivesFile.addOrUpdateEnclosure({
            objectId: this.enclosure.objectId,
            archivesFileId: this.item.objectId,
            fileType: this.fileType,
            bidderName: this.enclosure.bidderName,
            fileInformationList: this.enclosure.fileInformationList
          }).then((res) => {
            this.isLoading = false
            if (res.data.resCode === '0000') {
              if (!this.isUpdate) {
                res.data.refArchivesFileInformationList.map(file => {
                  this.item.refArchivesFileInformationList.push(file)
                })
              } else {
                this.$set(this.item.refArchivesFileInformationList, this.fileIndex, res.data.refArchivesFileInformationList[0])
              }
              this.dialogVisible = false
            }
          })
        } else {
          return false
        }
      })
    },
    handleEdit (scope) {
      this.enclosure = scope.row
      this.enclosure.fileInformationList = [scope.row.fileInformation]
      this.isUpdate = true
      this.dialogVisible = true
    },
    handleSee (scope) {
      if (scope.row.fileInformation.relativePath) {
        let name = scope.row.fileInformation.fileName
        let path = scope.row.fileInformation.relativePath
        downloadFile(name, path)
      } else {
        this.$message.error(' 请先上传文件')
      }
    },
    // 删除
    deleteRow (scope) {
      this.$confirm('此操作将永久删除该文件, 是否继续?', '提示', {
        confirmButtonText: '确定',
        cancelButtonText: '取消',
        type: 'warning'
      }).then(() => {
        archivesFile.deleteEnclosure(scope.row.objectId).then((res) => {
          if (res.data.resCode === '0000') {
            this.item.refArchivesFileInformationList.splice(scope.$index, 1)
          }
        })
      }).catch(() => {
        return false
      })
    },
    // 取消
    cancelFun () {
      this.dialogVisible = false
      this.$refs.enclosure.resetFields()
    }
  },
  mounted () {
  }
}
</script>
<style lang='less'>
#application{
}
</style>
