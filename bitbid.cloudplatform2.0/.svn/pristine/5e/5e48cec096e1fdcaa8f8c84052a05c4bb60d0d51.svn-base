<template>
  <div id="file-upload">
    <div class="file-type-name">
      <span>{{fileName}}附件</span>
    </div>
    <el-table
      :data="fileList.filter(file => file.fileType === fileType)"
      style="width: 100%"
      border
      header-cell-class-name="tableheader-filetype">
      <el-table-column
        type="index"
        :index="1"
        label="序号"
        align="center"
        width="80">
      </el-table-column>
      <el-table-column
        prop="fileInformation.fileName"
        align="center"
        label="附件" >
      </el-table-column>
      <el-table-column
        label="操作"
        width="200"
        align="center">
        <template slot-scope="scope">
          <el-button
            @click="handleEdit(scope.row.fileInformation.fileName,scope.row.fileInformation.relativePath)"
            type="text"
            size="small">
            查看
          </el-button>
          <el-button
            v-if="canEdit"
            @click="deleteRow(scope)"
            type="text"
            size="small">
            删除
          </el-button>
        </template>
      </el-table-column>
    </el-table>
    <div class="file-type-add" @click="addFile" v-if="canEdit">
      <span>+ 添加附件</span>
    </div>
    <!--添加弹框-->
    <el-dialog :before-close="handleCancle" :title="'上传' + fileName" :visible.sync="dialogVisible" width="50%">
      <el-form :model="enclosure" ref="enclosure" :label-width="formLabelWidth">
        <el-form-item label="附件：">
          <upload-file @uploadSuccess="uploadOtherSuccess" @deleteSuccess="deleteSuccess"
                       :fileArrays="enclosure.fileInformationList"
                       :fileType="fileType"
                       isImage="0">
          </upload-file>
        </el-form-item>
      </el-form>
      <div slot="footer" class="dialog-footer">
        <el-button class="cancal" @click="handleCancle">取消</el-button>
        <el-button type="primary" @click="handleConfirm"
                   :loading="isLoading" :disabled="enclosure.fileInformationList.length === 0">确认</el-button>
      </div>
    </el-dialog>
    <!--添加弹框-->
  </div>
</template>
<script>
import {downloadFile} from '@/assets/js/common'
import uploadFile from '@/components/upload/publicFileUpload'
import {archivesFile} from '@/api/archives'
export default {
  watch: {
  },
  components: {
    uploadFile
  },
  data () {
    return {
      enclosure: {
        fileInformationList: []
      },
      loading: false,
      dialogVisible: false,
      formLabelWidth: '120px',
      isLoading: false
    }
  },
  props: ['canEdit', 'fileList', 'fileType', 'fileName', 'objectId'],
  methods: {
    addFile () {
      this.dialogVisible = true
      this.enclosure = {
        fileInformationList: []
      }
    },
    // 上传附件
    uploadOtherSuccess (file) {
      this.enclosure.fileInformationList = [file]
    },
    deleteSuccess (fileId) {
      this.enclosure.fileInformationList = this.enclosure.fileInformationList.filter(item => item.relativePath !== fileId)
    },
    // 添加附件确认：
    handleConfirm () {
      this.isLoading = true
      archivesFile.addEnclosure({
        archivesFileId: this.objectId,
        fileType: this.fileType,
        fileInformationList: this.enclosure.fileInformationList
      }).then((res) => {
        this.isLoading = false
        if (res.data.resCode === '0000') {
          res.data.refArchivesFileInformationList.map(item => {
            this.fileList.push(item)
          })
          this.dialogVisible = false
        }
      })
    },
    handleEdit (name, path) {
      downloadFile(name, path)
    },
    // 添加附件取消
    handleCancle () {
      this.dialogVisible = false
    },
    // 删除
    deleteRow (scope) {
      this.$confirm('此操作将永久删除该文件, 是否继续?', '提示', {
        confirmButtonText: '确定',
        cancelButtonText: '取消',
        type: 'warning'
      }).then(() => {
        archivesFile.deleteEnclosure(scope.row).then((res) => {
          if (res.data.resCode === '0000') {
            this.fileList.splice(scope.$index, 1)
          }
        })
      }).catch(() => {
        return false
      })
    }
  },
  mounted () {
  }
}
</script>
<style lang='less'>
</style>
