<template>
  <div class="cloudcontent" id="cloud_processedit">
    <div class="main">
      <el-form :model="updateForm" :rules="rules" ref="updateForm" :validate-on-rule-change="true">
        <el-row>
          <el-col :span="12">
            <el-form-item label="项目编号：">
              <el-input v-model="bidSection.tenderProjectCode" disabled></el-input>
            </el-form-item>
          </el-col>
          <el-col :span="12">
            <el-form-item label="项目名称：">
              <el-input v-model="bidSection.tenderProjectName" disabled></el-input>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row>
          <el-col :span="12">
            <el-form-item label="标段编号：">
              <el-input v-model="bidSection.bidSectionCode" disabled></el-input>
            </el-form-item>
          </el-col>
          <el-col :span="12">
            <el-form-item label="标段名称：">
              <el-input v-model="bidSection.bidSectionName" disabled></el-input>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row>
          <el-col :span="12">
            <el-form-item label="开标记录名称："  prop="title">
              <el-input v-model="updateForm.title" clearable></el-input>
            </el-form-item>
          </el-col>
          <el-col :span="12">
            <el-form-item label="开标地点："  prop="bidOpeningAddress">
              <el-input v-model="updateForm.bidOpeningAddress" clearable></el-input>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row>
          <el-col :span="12">
            <el-form-item label="开标时间：" prop="bidOpeningTime">
              <el-date-picker
                v-model="updateForm.bidOpeningTime"
                type="datetime"
                value-format="yyyy-MM-dd HH:mm:ss">
              </el-date-picker>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row>
          <el-col :span="24" class="ueditor_box">
            <el-form-item label="开标记录内容：" class="bitianicon">
              <editor ref="ueditorContent" class="ueditor" :editread="editread"></editor>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row>
          <el-col :span="24">
            <el-form-item label="附件：">
              <upload-file @uploadSuccess="uploadOtherSuccess" @deleteSuccess="deleteSuccess"
                           :fileArrays="updateForm.fileInformationList"
                           fileType="9"
                           isImage="0">
              </upload-file>
            </el-form-item>
          </el-col>
        </el-row>
        <el-form-item class="submit-radio">
          <el-button type="primary" @click="submit('updateForm', 1)" :loading="isSubmiting">提交</el-button>
          <el-button type="primary" @click="submit('updateForm', 0)" :loading="isSaving">保存</el-button>
          <el-button class="cancal" @click="close">取消</el-button>
        </el-form-item>
      </el-form>
    </div>
  </div>
</template>
<script>
import editor from '@/components/ueditor/ueditor.vue'
import uploadFile from '@/components/upload/publicFileUpload'
import {documentInfo} from '@/api/project'
export default {
  components: {
    editor,
    uploadFile
  },
  data () {
    return {
      updateForm: {
        fileInformationList: []
      },
      rules: {
        title: {required: true, message: '请填写开标记录名称', trigger: 'blur'},
        bidOpeningAddress: {required: true, message: '请填写开标地点', trigger: 'blur'},
        bidOpeningTime: {required: true, message: '请选择开标时间', trigger: 'change'}
      },
      // 富文本
      editread: false,
      isSaving: false,
      isSubmiting: false,
      bidSection: {}
    }
  },
  methods: {
    // 上传附件
    uploadOtherSuccess (file) {
      this.updateForm.fileInformationList.push(file)
    },
    deleteSuccess (fileId) {
      this.updateForm.fileInformationList = this.updateForm.fileInformationList.filter(item => item.relativePath !== fileId)
    },
    // 提交/保存
    submit (form, status) {
      if (!this.$refs.ueditorContent.getContent()) {
        this.$message({
          message: '请填写开标记录内容！',
          type: 'warning'
        })
        return
      }
      this.$refs[form].validate((vaild) => {
        if (vaild) {
          let msg = Object.is(status, 1) ? '确定要提交吗?' : '确定要保存吗?'
          this.$confirm(msg, '提示', {
            confirmButtonText: '确定',
            cancelButtonText: '取消',
            type: 'warning',
            beforeClose: (action, instance, done) => {
              done()
            }
          }).then(() => {
            if (Object.is(status, 0)) {
              this.isSaving = true
            } else if (Object.is(status, 1)) {
              this.isSubmiting = true
              this.updateForm.auditStatus = 4
              this.updateForm.submitTime = new Date().getTime()
            }
            this.updateForm.content = this.$refs.ueditorContent.getContent()
            this.updateForm.fileInformationList.map(item => {
              item.objectId = null
            })
            documentInfo.update(this.updateForm).then((res) => {
              this.isSaving = false
              this.isSubmiting = false
              if (res.data.resCode === '0000') {
                this.close()
              }
            })
          }).catch(() => {
            this.isSaving = false
            this.isSubmiting = false
            return false
          })
        } else {
          return false
        }
      })
    },
    // 取消
    close () {
      this.$store.commit('delete_tabs', this.$route.fullPath)
      this.$router.go(-1)
    },
    getDocumentInfo () {
      documentInfo.getById(this.$route.query.objectId).then(res => {
        this.updateForm = res.data.documentInfo
        if (this.updateForm.bidSection) {
          this.bidSection = this.updateForm.bidSection
        }
        this.$refs.ueditorContent.setContent(this.updateForm.content)
      })
    }
  },
  watch: {
    '$route': 'getDocumentInfo'
  },
  mounted () {
    this.getDocumentInfo()
  }
}
</script>
<style lang="less">
  #cloud_processedit{
  }
</style>
