<template>
  <div class="cloudcontent">
    <div class="main">
      <el-form :model="updateForm" :rules="rules" ref="updateForm" :validate-on-rule-change="true">
        <el-form-item label="资质来源：" prop="sourceType">
          <el-radio-group v-model="updateForm.sourceType" @change="cleanSubject">
            <el-radio :label="1">自有</el-radio>
            <el-radio :label="2">借入</el-radio>
          </el-radio-group>
        </el-form-item>
        <el-form-item label="资质类别：" prop="categoryId">
          <el-select v-model="updateForm.categoryId" @change="getLevel(updateForm.categoryId)">
            <el-option
              v-for="item in typeOptions"
              :key="item.objectId"
              :label="item.name"
              :value="item.objectId">
            </el-option>
          </el-select>
        </el-form-item>
        <el-form-item label="资质等级：" prop="gradeId">
          <el-select v-model="updateForm.gradeId">
            <el-option
              v-for="item in gradeOptions"
              :key="item.objectId"
              :label="item.name"
              :value="item.objectId">
            </el-option>
          </el-select>
        </el-form-item>
        <el-row>
          <el-col :span="12">
            <el-form-item label="资质编号：">
              <el-input v-model="updateForm.number"></el-input>
            </el-form-item>
          </el-col>
        </el-row>
        <template v-if="updateForm.sourceType === 1">
          <el-form-item label="资质主体：" prop="subject">
            <el-select v-model="updateForm.subject">
              <el-option
                v-for="item in bodyOptions"
                :key="item.code"
                :label="item.name"
                :value="item.code">
              </el-option>
            </el-select>
          </el-form-item>
          <el-form-item label="资质有效期：" prop="time">
            <el-date-picker
              v-model="updateForm.time"
              type="daterange"
              range-separator="-"
              start-placeholder="开始日期"
              end-placeholder="结束日期"
              value-format="yyyy-MM-dd">
            </el-date-picker>
          </el-form-item>
        </template>
        <template v-if="updateForm.sourceType === 2">
          <el-form-item label="合作类型：">
            <el-select v-model="updateForm.cooperationType">
              <el-option
                v-for="item in cooperationOptions"
                :key="item.value"
                :label="item.label"
                :value="item.value">
              </el-option>
            </el-select>
          </el-form-item>
          <el-row>
            <el-col :span="12">
              <el-form-item label="合作方："  prop="subject">
                <el-input v-model="updateForm.subject"></el-input>
              </el-form-item>
            </el-col>
          </el-row>
          <el-form-item label="合作期间：" class="bitianicon" prop="time">
            <el-date-picker
              v-model="updateForm.time"
              type="daterange"
              range-separator="-"
              start-placeholder="开始日期"
              end-placeholder="结束日期"
              value-format="yyyy-MM-dd">
            </el-date-picker>
          </el-form-item>
          <el-row>
            <el-col :span="12">
              <el-form-item label="费用(元)：">
                <el-input v-model="updateForm.fee"></el-input>
              </el-form-item>
            </el-col>
          </el-row>
        </template>
        <el-row>
          <el-col :span="12">
            <el-form-item label="发证机关：">
              <el-input v-model="updateForm.certificationAuthority"></el-input>
            </el-form-item>
          </el-col>
        </el-row>
        <el-form-item label="备注：">
          <editor ref="ueditor" class="ueditor" :editread="editread"></editor>
        </el-form-item>
        <el-form-item class="submit-radio">
          <el-button type="primary" @click="submit('updateForm')" :loading="isSubmiting">保存</el-button>
          <el-button class="cancal" @click="close">取消</el-button>
        </el-form-item>
      </el-form>
    </div>
  </div>
</template>

<script>
import editor from '@/components/ueditor/ueditor.vue'
import { qualificationSubject, category } from '@/api/resource'
import { dataDictionary } from '@/api/system'
export default {
  name: '',
  components: {
    editor
  },
  data () {
    return {
      isSubmiting: false,
      updateForm: {
        category: {
          name: ''
        },
        gradeCategory: {
          name: ''
        }
      },
      rules: {
        sourceType: [
          { required: true, message: '请选择资质来源', trigger: ['change'] }
        ],
        categoryId: [
          { required: true, message: '请选择资质类别', trigger: ['change'] }
        ],
        gradeId: [
          { required: true, message: '请选择资质等级', trigger: ['change'] }
        ],
        subject: [
          { required: true, message: '合作方或主体不能为空', trigger: ['blur'] }
        ],
        time: [
          { required: true, message: '请选择有效时间', trigger: ['change'] }
        ]
      },
      typeOptions: [],
      gradeOptions: [],
      bodyOptions: [],
      cooperationOptions: [
        {
          label: '机构合作',
          value: 1
        },
        {
          label: '项目合作',
          value: 2
        },
        {
          label: '个人合作',
          value: 3
        }
      ],
      // 富文本
      editread: false,
      dicOpportunityStageId: 10007,
      tempForm: '',
      subjectCode: '',
      subject: ''
    }
  },
  methods: {
    // 切换来源时清空主体
    cleanSubject () {
      if (this.updateForm.sourceType === 1) {
        this.$set(this.updateForm, 'subject', this.subjectCode)
      }
      if (this.updateForm.sourceType === 2) {
        this.$set(this.updateForm, 'subject', this.subject)
      }
    },
    // 获取资质类别
    getCategory () {
      category.getCategoryList().then((res) => {
        this.typeOptions = res.data.categoryList
      })
    },
    // 获取资质等级
    getLevel (categoryId) {
      category.getCategoryLevelList(categoryId).then((res) => {
        if (res.data.resCode === '0000') {
          this.$set(this.updateForm, 'gradeId', '')
          this.gradeOptions = res.data.categoryList
          this.updateForm = this.tempForm
          this.$set(this.updateForm, 'time', [this.updateForm.startDate, this.updateForm.endDate])
        }
      })
    },
    getData () {
      qualificationSubject.getQualificationSubjectDetail(this.$route.query.objectId).then((res) => {
        this.tempForm = res.data.qualificationSubject
        this.$set(this.updateForm, 'time', [this.tempForm.startDate, this.tempForm.endDate])
        this.$refs.ueditor.setContent(this.tempForm.remarks)
        this.getLevel(this.tempForm.categoryId)
        if (this.tempForm.sourceType === 1) {
          this.subjectCode = this.tempForm.subject
        }
        if (this.tempForm.sourceType === 2) {
          this.subject = this.tempForm.subject
        }
      })
    },
    // 保存
    submit (form) {
      this.$refs[form].validate((valid) => {
        if (valid) {
          this.$confirm('确认要提交吗?', '提示', {
            confirmButtonText: '确认',
            cancelButtonText: '取消',
            type: 'warning'
          }).then(() => {
            let content = this.$refs.ueditor.getContent()
            this.isSubmiting = true
            this.updateForm.remarks = content
            this.updateForm.startDate = this.updateForm.time[0] + ' 00:00:00'
            this.updateForm.endDate = this.updateForm.time[1] + ' 00:00:00'
            qualificationSubject.saveOrUpdateQualificationSubject(this.updateForm).then((res) => {
              if (res.data.resCode === '0000') {
                this.isSubmiting = false
                this.$router.go(-1)
              }
            })
          }).catch(() => {
            this.isSubmiting = false
            return false
          })
        } else {
          return false
        }
      })
    },
    // 取消
    close () {
      this.$router.go(-1)
    },
    // 初始化字典项商机阶段
    initOpportunityStage () {
      let query = {
        enterpriseId: this.$store.getters.authUser.enterpriseId,
        dictionaryDirectoryId: this.dicOpportunityStageId
      }
      dataDictionary.getDetailList(query).then(res => {
        this.bodyOptions = res.data.dictionaryDetails
      })
    }
  },
  mounted () {
    this.initOpportunityStage()
    this.getCategory()
    this.getData()
  }
}
</script>

<style scoped>
</style>
