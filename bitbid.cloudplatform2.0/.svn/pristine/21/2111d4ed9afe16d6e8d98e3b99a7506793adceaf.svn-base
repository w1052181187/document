<template>
  <div class="cloudcontent" id="cloud_registProject">
    <div class="topmain">
      <div class="seacher_box advancedsearch_box">
        <span>项目名称：</span>
        <el-input class="search" placeholder="请输入项目名称关键字" style="vertical-align: top"  v-model="searchForm.tenderProjectNameLike"></el-input>
        <span>项目编号：</span>
        <el-input class="search" placeholder="请输入项目编号关键字" style="vertical-align: top"  v-model="searchForm.projectCodeLike"></el-input>
        <div class="handBtn" v-if="!showselect">
          <el-button  type="primary" class="search" @click="search">查询</el-button>
          <el-button  @click="reset">重置</el-button>
          <span @click="showselect = true" class="more">展开搜索条件</span>
        </div>
        <div class="advancedsearch" v-if="showselect">
          <el-form :model="searchForm" ref="searchForm" label-width="90px" :validate-on-rule-change="true">
            <el-row>
              <el-col :span="24">
                <el-form-item label="项目类型：">
                  <span :class="isTypeSelectAll ? 'all selectall': 'all'" @click="conditionCancel('项目类型')">不限</span>
                  <el-radio-group v-model="searchForm.tenderProjectType" @change="conditionSelect($event, '项目类型')">
                    <el-radio v-for="item in proTypeOption" :label="item.code" :key="item.code" :checked="projectTypeFlag">{{item.name}}</el-radio>
                  </el-radio-group>
                </el-form-item>
              </el-col>
            </el-row>
            <el-row>
              <el-col :span="24">
                <el-form-item label="招标方式：">
                  <span :class="isBidMethodSelectAll ? 'all selectall': 'all'" @click="conditionCancel('招标方式')">不限</span>
                  <el-radio-group v-model="searchForm.tenderMode" @change="conditionSelect($event, '招标方式')">
                    <el-radio v-for="item in bidMethodOption" :label="item.code" :key="item.code" :checked="bidMethodFlag">{{item.name}}</el-radio>
                  </el-radio-group>
                </el-form-item>
              </el-col>
            </el-row>
            <el-row>
              <el-col :span="24">
                <el-form-item label="资金来源：">
                  <span :class="isCapitalSourceSelectAll ? 'all selectall': 'all'" @click="conditionCancel('资金来源')">不限</span>
                  <el-radio-group v-model="searchForm.sourceOfFunds" @change="conditionSelect($event, '资金来源')">
                    <el-radio v-for="item in capitalSourceOption" :label="item.code" :key="item.code" :checked="capitalSourceFlag">{{item.name}}</el-radio>
                  </el-radio-group>
                </el-form-item>
              </el-col>
            </el-row>
            <el-row>
              <el-col :span="24">
                <el-form-item label="项目状态：">
                  <span :class="isProjectStatusSelectAll ? 'all selectall': 'all'" @click="conditionCancel('项目状态')">不限</span>
                  <el-radio-group v-model="searchForm.status" @change="conditionSelect($event, '项目状态')">
                    <el-radio v-for="item in projectStatusOption" :label="item.code" :key="item.code" :checked="projectStatusFlag">{{item.name}}</el-radio>
                  </el-radio-group>
                </el-form-item>
              </el-col>
            </el-row>
            <el-row>
              <el-col :span="24">
                <el-form-item label="项目时间：" style="float: left; margin-right: 20px;">
                  <span :class="isProjectTimeSelectAll ? 'all selectall': 'all'" @click="conditionCancel('项目时间')">不限</span>
                  <el-radio-group v-model="searchForm.projectDateInterval" @change="conditionSelect($event, '项目时间')">
                    <el-radio v-for="item in projectTimeOption" :label="item.code" :key="item.code" :checked="projectTimeFlag">{{item.name}}</el-radio>
                  </el-radio-group>
                </el-form-item>
                <el-date-picker
                  v-model="searchForm.projectCustomTime"
                  v-if="searchForm.projectDateInterval === 6"
                  @change = "filterTime"
                  type="daterange"
                  range-separator="至"
                  start-placeholder="开始日期"
                  end-placeholder="结束日期">
                </el-date-picker>
              </el-col>
            </el-row>
            <el-row>
              <el-col :span="9" class="region">
                <el-form-item label="所在地区：">
                  <el-select v-model="searchForm.provinceId"  @change="getCityNode()" placeholder="请选择">
                    <el-option
                      v-for="item in regionOptions"
                      :key="item.value"
                      :label="item.label"
                      :value="item.value">
                    </el-option>
                  </el-select>
                  <el-select v-model="searchForm.cityId" @change="getAreaNode()"  :disabled = "cityFlag" placeholder="请选择">
                    <el-option
                      v-for="item in regionTwoOptions"
                      :key="item.value"
                      :label="item.label"
                      :value="item.value">
                    </el-option>
                  </el-select>
                  <el-select v-model="searchForm.countyId" :disabled = "countyFlag" placeholder="请选择">
                    <el-option
                      v-for="item in regionThreeOptions"
                      :key="item.value"
                      :label="item.label"
                      :value="item.value">
                    </el-option>
                  </el-select>
                </el-form-item>
              </el-col>
              <el-col :span="9" class="bigWidth">
                <el-form-item label="项目经理：">
                  <el-input v-model="searchForm.firstProjectLeaderName" placeholder="请输入项目经理" readonly>
                    <el-button type="primary" slot="append" @click="showUserDialog">选择</el-button>
                  </el-input>
                </el-form-item>
              </el-col>
            </el-row>
            <el-row>
              <el-col :span="9" class="bigWidth">
                <el-form-item label="招标人：">
                  <el-input v-model="searchForm.tendererNameLike" placeholder="请输入招标人">
                  </el-input>
                </el-form-item>
              </el-col>
              <el-col :span="9" class="bigWidth">
                <el-form-item label="所属部门：">
                  <el-input class="deptInput" v-model="searchForm.departmentName" auto-complete="off" placeholder="请选择" readonly="readonly" clearable @click.native="showDepartmentTree">
                    <i slot="suffix" class="el-input__icon el-icon-arrow-down"></i>
                  </el-input>
                  <tree-options :initData="searchForm.departmentId" @selectSuccess="selectedDepatment" :isShowOptions="isShowDptTree"></tree-options>
                </el-form-item>
              </el-col>
            </el-row>
          </el-form >
          <div class="handBtn">
            <el-button  type="primary" class="search" @click="search">查询</el-button>
            <el-button  @click="reset">重置</el-button>
            <span @click="showselect = false" class="more">收起搜索条件</span>
          </div>
        </div>
      </div>
    </div>
    <div class="main">
      <el-table
        :data="registProjectData"
        @cell-click="cellClick"
        border
        style="width: 100%" header-cell-class-name="tableheader">
        <el-table-column
          type="index"
          label="序号"
          width="60"
          :index='indexMethod'
          align="center">
        </el-table-column>
        <el-table-column
          prop="projectCode"
          label="项目编号"
          class-name="pointer"
          show-overflow-tooltip>
          <template slot-scope="scope">
            <div class="tender-project-name">
              <img src="../../../assets/lishi_b.png" v-if="Number(scope.row.dataSource) === 1" title="历史项目">{{scope.row.projectCode}}
            </div>
          </template>
        </el-table-column>
        <el-table-column
          prop="tenderProjectName"
          label="项目名称"
          class-name="pointer"
          show-overflow-tooltip>
        </el-table-column>
        <el-table-column
          prop="tenderProjectType"
          label="项目类型"
          :formatter="filterTenderProjectType"
          show-overflow-tooltip>
        </el-table-column>
        <el-table-column
          prop="tenderMode"
          label="招标方式"
          :formatter="filterTenderMode"
          show-overflow-tooltip>
        </el-table-column>
        <el-table-column
          prop="status"
          label="项目状态"
          width="100"
          :formatter="filterStatus"
          show-overflow-tooltip>
        </el-table-column>
        <el-table-column
          prop="departmentName"
          label="所属部门"
          show-overflow-tooltip>
        </el-table-column>
        <el-table-column
          prop="firstProjectLeaderName"
          label="项目经理"
          show-overflow-tooltip>
        </el-table-column>
        <el-table-column
          prop="lastUpdateDate"
          label="最新更新时间"
          :formatter="formatDate"
          show-overflow-tooltip>
        </el-table-column>
        <el-table-column
          label="操作" align="center" width="200">
          <template slot-scope="scope">
            <el-button type="text" size="small" v-if="(scope.row.status === 5 || scope.row.status === 6 || scope.row.status === 9 || scope.row.status === 14) && $store.getters.permissions.includes('1010402')" @click="replenishBtn(scope)">补充详情</el-button>
            <el-button type="text" size="small" v-if="!(scope.row.status === 5 || scope.row.status === 6 || scope.row.status === 9 || scope.row.status === 14)" @click="lookBtn(scope)">查看</el-button>
            <!--<el-button type="text" size="small" v-if="(scope.row.status === 6 || scope.row.status === 9 || scope.row.status === 14) && $store.getters.permissions.includes('1010402')" @click="updateBtn(scope)">编辑</el-button>
            <el-button type="text" size="small" v-if="scope.row.status === 6 && $store.getters.permissions.includes('1010402')" @click="delBtn(scope)">删除</el-button>-->
            <!--<el-button type="text" size="small" v-if="(scope.row.status === 8 || scope.row.status === 10 || scope.row.status === 11 || scope.row.status === 12) && $store.getters.permissions.includes('1010402')" @click="projectBtn(scope)">标段管理</el-button>-->
            <el-button type="text" size="small" v-if="(scope.row.status === 8 || scope.row.status === 10 || scope.row.status === 11 || scope.row.status === 12)" @click="projectBtn(scope)">项目进度</el-button>
          </template>
        </el-table-column>
      </el-table>
      <!--分页-->
      <el-pagination
        background
        layout="prev, pager, next"
        :total="total"
        :page-size='pageSize'
        :current-page.sync="currentPage"
        @current-change="handleCurrentChange"
        @next-click="handleCurrentNext">
      </el-pagination>
      <!--分页-->
    </div>
    <select-user-dialog :showVisible="showUserVisible" @selected="selectedUser" @showDialog="showUserDialog"></select-user-dialog>
  </div>
</template>
<script>
import * as region from '@/assets/js/region'
import * as industry from '@/assets/js/industry_two'
import {tenderProject, bidSection} from '@/api/project'
import {dateFormat} from '@/assets/js/common'
import selectUserDialog from '@/pages/system/users/search_user_radio'
import TreeOptions from '@/pages/system/department/tree/tree_options'
export default {
  components: {
    selectUserDialog,
    TreeOptions
  },
  data () {
    return {
      cityFlag: true,
      countyFlag: true,
      searchForm: {
        tenderProjectNameLike: '',
        projectCodeLike: '',
        tenderProjectType: '',
        tenderMode: '',
        sourceOfFunds: '',
        status: '',
        projectDateInterval: '',
        provinceId: '',
        cityId: '',
        countyId: '',
        firstProjectLeaderName: '',
        tendererNameLike: '',
        departmentId: '',
        departmentName: '',
        projectDateLowerLimit: '',
        projectDateUpperLimit: '',
        projectCustomTime: ''
      },
      registProjectData: [],
      // 当前页
      currentPage: 1,
      pageNo: 0,
      total: 0, // 总条数
      pageSize: 10, // 每页展示条数
      dataIndex: 1,
      sectionIndex: 'currentBidSection',
      sectionFlowStatusIndex: 'currentBidSectionFlowStatus',
      queryCondition: this.$route.query.status,
      showselect: false, // 高级搜索显示隐藏
      // 项目类型
      isTypeSelectAll: true,
      proTypeOption: [
        {
          name: '工程',
          code: 1
        },
        {
          name: '货物',
          code: 2
        },
        {
          name: '服务',
          code: 3
        }
      ],
      projectTypeFlag: true,
      // 招标方式
      isBidMethodSelectAll: true,
      bidMethodOption: [
        {
          name: '公开招标',
          code: 1
        },
        {
          name: '邀请招标',
          code: 2
        },
        {
          name: '竞争性谈判',
          code: 3
        },
        {
          name: '竞争性磋商',
          code: 4
        },
        {
          name: '单一来源采购',
          code: 5
        },
        {
          name: '询价采购',
          code: 6
        }
      ],
      bidMethodFlag: true,
      // 资金来源
      isCapitalSourceSelectAll: true,
      capitalSourceOption: [
        {
          name: '自有资金',
          code: 1
        },
        {
          name: '吸收资金',
          code: 2
        },
        {
          name: '专项资金',
          code: 3
        },
        {
          name: '其他资金',
          code: 4
        }
      ],
      capitalSourceFlag: true,
      // 项目状态
      isProjectStatusSelectAll: true,
      projectStatusOption: [
        {
          name: '未开始',
          code: '5,6,7,8,9,10,14'
        },
        {
          name: '进行中',
          code: '11'
        },
        {
          name: '已完成',
          code: '12'
        }
      ],
      projectStatusFlag: true,
      // 项目时间
      isProjectTimeSelectAll: true,
      projectTimeOption: [
        {
          name: '近一周',
          code: 1
        },
        {
          name: '近一月',
          code: 2
        },
        {
          name: '近三月',
          code: 3
        },
        {
          name: '近半年',
          code: 4
        },
        {
          name: '近一年',
          code: 5
        },
        {
          name: '自定义',
          code: 6
        }
      ],
      projectTimeFlag: true,
      // 所在地区
      regionOptions: region.CityInfo,
      regionTwoOptions: [],
      regionThreeOptions: [],
      // 项目经理
      showUserVisible: false,
      // 所属部门
      // 是否展示部门树
      isShowDptTree: false
    }
  },
  watch: {
    '$route': 'getTableData'
  },
  created () {
    this.getTableData()
  },
  methods: {
    cellClick (row, column, cell, event) {
      if (column.label === '项目编号' || column.label === '项目名称') {
        if (Number(row.status) === 8 || Number(row.status) === 10 || Number(row.status) === 11 || Number(row.status) === 12) {
          this.projectBtn({row: row})
        } else {
          this.replenishBtn({row: row})
        }
      }
    },
    filterTenderProjectType (row) {
      if (Number(row.tenderProjectType) === 1) {
        return '工程'
      } else if (Number(row.tenderProjectType) === 2) {
        return '货物'
      } else if (Number(row.tenderProjectType) === 3) {
        return '服务'
      }
    },
    filterTenderMode (row) {
      if (Number(row.tenderMode) === 1) {
        return '公开招标'
      } else if (Number(row.tenderMode) === 2) {
        return '邀请招标'
      } else if (Number(row.tenderMode) === 3) {
        return '竞争性谈判'
      } else if (Number(row.tenderMode) === 4) {
        return '单一来源采购'
      } else if (Number(row.tenderMode) === 5) {
        return '询价采购'
      } else if (Number(row.tenderMode) === 6) {
        return '竞争性磋商'
      }
    },
    // 格式化时间
    formatDate (row, col, cellValue) {
      return cellValue ? dateFormat(cellValue, 'yyyy-MM-dd') : '---'
    },
    /** 项目状态的展示：0.概况未提交；1.概况待审批；2.概况已驳回；3.未提交项目负责人（概况已审批); 4.概况已提交（概况不需要审批）；5.详情未保存；6.详情未提交；7.详情待审批；8.详情已审批；9.详情已驳回；10.详情已提交（详情不需要审批）；11.项目进行中；12.项目已完成；13.概况已撤回；14.详情已撤回   */
    filterStatus (row) {
      if (row.status === 5) {
        return '待编辑'
      } else if (row.status === 6) {
        return '已保存'
      } else if (row.status === 7) {
        return '待审批'
      } else if (row.status === 8) {
        return '已审批'
      } else if (row.status === 9) {
        return '已驳回'
      } else if (row.status === 10) {
        return '已提交'
      } else if (row.status === 11) {
        return '进行中'
      } else if (row.status === 12) {
        return '已完成'
      } else if (row.status === 14) {
        return '已撤回'
      }
    },
    filterTime (value) {
      if (value) {
        this.searchForm.projectDateLowerLimit = dateFormat(value[0], 'yyyy-MM-dd')
        this.searchForm.projectDateUpperLimit = dateFormat(value[1], 'yyyy-MM-dd')
      } else {
        this.searchForm.projectDateLowerLimit = null
        this.searchForm.projectDateUpperLimit = null
      }
    },
    /** 获取列表数据 */
    getTableData () {
      if (Number(this.searchForm.projectDateInterval) === 6 && !this.searchForm.projectCustomTime) {
        this.$message({
          type: 'warning',
          message: '请输入自定义时间区间！'
        })
        return false
      }
      let query = {
        pageNo: this.pageNo,
        pageSize: this.pageSize,
        enterpriseId: this.$store.getters.authUser.enterpriseId,
        querySource: 1
      }
      if (this.searchForm.tenderProjectNameLike) {
        query.messageLike = this.searchForm.tenderProjectNameLike
      }
      if (this.searchForm.projectCodeLike) {
        query.projectCodeLike = this.searchForm.projectCodeLike
      }
      if (this.searchForm.tenderProjectType) {
        query.tenderProjectType = this.searchForm.tenderProjectType
      }
      if (this.searchForm.tenderMode) {
        query.tenderMode = this.searchForm.tenderMode
      }
      if (this.searchForm.sourceOfFunds) {
        query.sourceOfFunds = this.searchForm.sourceOfFunds
      }
      if (this.searchForm.status) {
        query.statusList = this.searchForm.status
      } else {
        if (this.queryCondition) {
          query.statusList = this.queryCondition
        } else {
          query.statusList = '5,6,7,8,9,10,11,12,14'
        }
      }
      if (this.searchForm.projectDateInterval) {
        query.projectDateInterval = this.searchForm.projectDateInterval
      }
      if (this.searchForm.provinceId) {
        query.provinceId = this.searchForm.provinceId
      }
      if (this.searchForm.cityId) {
        query.cityId = this.searchForm.cityId
      }
      if (this.searchForm.countyId) {
        query.countyId = this.searchForm.countyId
      }
      if (this.searchForm.firstProjectLeaderName) {
        query.firstProjectLeaderNameLike = this.searchForm.firstProjectLeaderName
      }
      if (this.searchForm.tendererNameLike) {
        query.tendererNameLike = this.searchForm.tendererNameLike
      }
      if (this.searchForm.departmentId) {
        query.departmentId = this.searchForm.departmentId
      }
      if (this.searchForm.projectDateLowerLimit) {
        query.projectDateLowerLimit = this.searchForm.projectDateLowerLimit
      }
      if (this.searchForm.projectDateUpperLimit) {
        query.projectDateUpperLimit = this.searchForm.projectDateUpperLimit
      }
      tenderProject.getList(query).then((res) => {
        if (res.data.tenderProjectList && res.data.tenderProjectList.list) {
          this.registProjectData = res.data.tenderProjectList.list
          this.total = res.data.tenderProjectList.total
          // 获取项目地址信息
          /* this.registProjectData.forEach(item => {
            item.tenderProjectAddress = this.getTenderExpandsInfo(item.tenderExpandsInfo, 'address')
          }) */
        }
      })
    },
    getTenderExpandsInfo (tenderExpandsInfo, type) {
      let str = ''
      if (Object.is(type, 'address')) {
        let provinceId = this.getLabelName(region.CityInfo, tenderExpandsInfo.provinceId)
        let cityId = this.getLabelName(region.CityInfo, tenderExpandsInfo.cityId)
        let countyId = this.getLabelName(region.CityInfo, tenderExpandsInfo.countyId)
        if (provinceId.node) {
          str += `${provinceId.node.label}`
          str += `/`
        }
        if (cityId.node) {
          str += `${cityId.node.label}`
          str += `/`
        }
        if (countyId.node) {
          str += `${countyId.node.label}`
        }
      } else if (Object.is(type, 'industry')) {
        let industryTypeFirst = this.getLabelName(industry.industry, tenderExpandsInfo.provinceId)
        let industryTypeSecond = this.getLabelName(industry.industry, tenderExpandsInfo.cityId)
        if (industryTypeFirst.node) {
          str += `${industryTypeFirst.node.label}`
          str += `/`
        }
        if (industryTypeSecond.node) {
          str += `${industryTypeSecond.node.label}`
        }
      }
      return str
    },
    /** treeData [原始数据集]， key 传入的key值 */
    getLabelName (treeData, key) {
      let parentNode = null
      let node = null
      function getTreeDeepArr (treeData, key) {
        for (let i = 0; i < treeData.length; i++) {
          // 1.如果没有子节点 beark
          if (node) {
            break
          }
          // 定义需要操作的数据
          let obj = treeData[i]
          // 没有节点就下一个
          if (!obj || !obj.value) {
            continue
          }
          // 2.有节点就继续找，一直递归
          if (obj.value === key) {
            node = obj
            break
          } else {
            // 3.如果有子节点就继续找
            if (obj.children) {
              // 4.递归前，记录当前节点，作为parentNode
              parentNode = obj
              // 递归
              getTreeDeepArr(obj.children, key)
            } else {
              // 跳出当前递归
              continue
            }
          }
        }
        // 如果没有找到父节点，置为null
        if (!node) {
          parentNode = null
        }
        // 返回结果
        return {
          node: node,
          parentNode: parentNode
        }
      }
      return getTreeDeepArr(treeData, key)
    },
    /** 模糊查询方法 */
    search () {
      this.pageNo = 0
      this.pageSize = 10
      this.currentPage = 1
      this.total = 0
      this.getTableData()
    },
    reset () {
      this.searchForm.projectCustomTime = ''
      this.searchForm.tenderProjectNameLike = ''
      this.searchForm.projectCodeLike = ''
      this.searchForm.tenderProjectType = ''
      this.searchForm.tenderMode = ''
      this.searchForm.sourceOfFunds = ''
      this.searchForm.status = ''
      this.searchForm.projectDateInterval = ''
      this.searchForm.provinceId = ''
      this.searchForm.cityId = ''
      this.searchForm.countyId = ''
      this.searchForm.firstProjectLeaderName = ''
      this.searchForm.tendererNameLike = ''
      this.searchForm.departmentId = ''
      this.searchForm.departmentName = ''
      this.searchForm.projectDateLowerLimit = ''
      this.searchForm.projectDateUpperLimit = ''
      this.isTypeSelectAll = true
      this.isBidMethodSelectAll = true
      this.isCapitalSourceSelectAll = true
      this.isProjectStatusSelectAll = true
      this.isProjectTimeSelectAll = true
      this.regionTwoOptions = []
      this.regionThreeOptions = []
      this.cityFlag = true
      this.countyFlag = true
      this.getTableData()
    },
    // 项目管理
    projectBtn (scope) {
      bidSection.getList({
        tenderSystemCode: scope.row.code,
        enterpriseId: this.$store.getters.authUser.enterpriseId
      }).then((res) => {
        sessionStorage.setItem('isOverview', this.$store.getters.permissions.includes('1010402')) // 根据正常流程展示操作按钮
        if (res.data.bidSectionList.list.length > 0) {
          this.$router.push({path: `/project/projectProcess/project/process/${scope.row.code}`})
          this.clearCurProjectSession(scope.row.code)
        } else {
          this.$confirm('该项目下还未创建标段，是否立即创建标段？', '提示', {
            confirmButtonText: '确定',
            cancelButtonText: '取消',
            type: 'warning'
          }).then(() => {
            this.$router.push({path: `/project/projectProcess/project/add`, query: {code: scope.row.code}})
          }).catch(() => {
            this.$message({
              type: 'info',
              message: '已取消创建标段'
            })
          })
        }
      })
    },
    clearCurProjectSession (code) {
      let progressTemp = sessionStorage.getItem(code)
      if (progressTemp) {
        let curProject = JSON.parse(progressTemp)
        if (curProject.hasOwnProperty(this.sectionIndex)) {
          delete curProject[this.sectionIndex]
        }
        if (curProject.hasOwnProperty(this.sectionFlowStatusIndex)) {
          delete curProject[this.sectionFlowStatusIndex]
        }
        sessionStorage.setItem(code, JSON.stringify(curProject))
      } else {
        sessionStorage.setItem(code, JSON.stringify({}))
      }
    },
    // 补充详情
    replenishBtn (scope) {
      let userIds = scope.row.projectLeaderIds || []
      userIds.push(scope.row.creator)
      this.$store.dispatch('JudgeScopeOfController', {departmentListIds: scope.row.departmentListIds, userIds}).then(result => {
        if (result) {
          this.$router.push({path: `/project/projectProcess/update`, query: {code: scope.row.code}})
        }
      })
    },
    // 查看
    lookBtn (scope) {
      this.$router.push({path: `/project/projectProcess/detail/${scope.row.code}`})
    },
    // 修改
    updateBtn (scope) {
      let userIds = scope.row.projectLeaderIds || []
      userIds.push(scope.row.creator)
      this.$store.dispatch('JudgeScopeOfController', {departmentListIds: scope.row.departmentListIds, userIds}).then(result => {
        if (result) {
          this.$router.push({path: `/project/projectProcess/update`, query: {code: scope.row.code, operation: 'edit'}})
        }
      })
    },
    // 删除
    delBtn (scope) {
      let userIds = scope.row.projectLeaderIds || []
      userIds.push(scope.row.creator)
      this.$store.dispatch('JudgeScopeOfController', {departmentListIds: scope.row.departmentListIds, userIds}).then(result => {
        if (result) {
          this.$confirm('确认删除吗?', '提示', {
            confirmButtonText: '确定',
            cancelButtonText: '取消',
            type: 'error'
          }).then(() => {
            tenderProject.delete(scope.row.objectId).then(() => {
              this.getTableData()
            })
          }).catch(() => {
            return false
          })
        }
      })
    },
    // 表单分页
    indexMethod (index) {
      return index + (this.currentPage - 1) * 10 + 1
    },
    handleCurrentChange (nowNum) {
      this.currentPage = nowNum
      this.pageNo = (nowNum - 1) * this.pageSize
      this.getTableData(parseInt(this.pageNo), parseInt(this.pageSize))
    },
    handleCurrentNext (nowNum) {
      this.currentPage = nowNum
      this.pageNo = (nowNum - 1) * this.pageSize
      this.getTableData(parseInt(this.pageNo), parseInt(this.pageSize))
    },
    // 高级搜索-搜索条件选择
    conditionSelect (value, label) {
      switch (label) {
        case '项目类型':
          this.searchForm.tenderProjectType = value
          this.isTypeSelectAll = false
          break
        case '招标方式':
          this.searchForm.tenderMode = value
          this.isBidMethodSelectAll = false
          break
        case '资金来源':
          this.searchForm.sourceOfFunds = value
          this.isCapitalSourceSelectAll = false
          break
        case '项目状态':
          this.searchForm.status = value
          this.isProjectStatusSelectAll = false
          break
        case '项目时间':
          this.searchForm.projectDateInterval = value
          if (Number(value) !== 6) {
            this.searchForm.projectDateLowerLimit = ''
            this.searchForm.projectDateUpperLimit = ''
            this.searchForm.projectCustomTime = ''
          }
          this.isProjectTimeSelectAll = false
          break
        default:
          break
      }
    },
    // 高级搜索-取消条件
    conditionCancel (label) {
      switch (label) {
        case '项目类型':
          this.projectTypeFlag = false
          this.searchForm.tenderProjectType = null
          this.isTypeSelectAll = true
          break
        case '招标方式':
          this.bidMethodFlag = false
          this.searchForm.tenderMode = null
          this.isBidMethodSelectAll = true
          break
        case '资金来源':
          this.capitalSourceFlag = false
          this.searchForm.sourceOfFunds = null
          this.isCapitalSourceSelectAll = true
          break
        case '项目状态':
          this.projectStatusFlag = false
          this.searchForm.status = null
          this.isProjectStatusSelectAll = true
          break
        case '项目时间':
          this.projectTimeFlag = false
          this.searchForm.projectDateInterval = null
          this.searchForm.projectDateLowerLimit = ''
          this.searchForm.projectDateUpperLimit = ''
          this.searchForm.projectCustomTime = ''
          this.isProjectTimeSelectAll = true
          break
        default:
          break
      }
    },
    // 所在地区 3级联动  获取市信息
    getCityNode () {
      this.countyFlag = true
      this.searchForm.cityId = ''
      this.searchForm.countyId = ''
      this.regionOptions.map((item) => {
        if (item.value === this.searchForm.provinceId) {
          this.regionTwoOptions = item.children
        }
      })
      if (this.regionTwoOptions && this.regionTwoOptions.length > 0) {
        this.cityFlag = false
      } else {
        this.cityFlag = true
      }
    },
    // 所在地区 3级联动  获取区信息
    getAreaNode () {
      this.searchForm.countyId = ''
      this.regionOptions.map((item) => {
        if (item.value === this.searchForm.provinceId) {
          item.children.map((ite) => {
            if (ite.value === this.searchForm.cityId) {
              this.regionThreeOptions = ite.children
            }
          })
        }
      })
      if (this.regionThreeOptions && this.regionThreeOptions.length > 0) {
        this.countyFlag = false
      } else {
        this.countyFlag = true
      }
    },
    // 项目经理 - 选择用户
    selectedUser (obj) {
      this.searchForm.firstProjectLeaderName = obj.name
      // this.addForm.tendererCode = obj.code
      // this.addForm.tendererName = obj.name
      // this.addForm.customerManagementCode = obj.code
      // this.addForm.tendererUnitAddress = this.wrapRegionText(obj)
    },
    // 选择人员弹框打开
    showUserDialog () {
      this.showUserVisible = !this.showUserVisible
    },
    // 部门树展开/关闭
    showDepartmentTree () {
      this.isShowDptTree = !this.isShowDptTree
    },
    // 选择部门
    selectedDepatment (deptTreeNode) {
      this.searchForm.departmentName = deptTreeNode.label
      this.searchForm.departmentId = deptTreeNode.id
      this.isShowDptTree = false
    }
  }
}
</script>
