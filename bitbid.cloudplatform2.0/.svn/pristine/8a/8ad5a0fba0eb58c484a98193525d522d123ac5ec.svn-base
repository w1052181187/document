<template>
  <div class="cloudcontent">
    <div class="main">
      <el-button class="addbutton" @click="handleAdd">
        <span>+ 新增目录</span>
      </el-button>
      <el-table
        :data="tableData"
        border
        header-cell-class-name="tableheader">
        <el-table-column
          type="index"
          label="序号"
          align="center"
          :index="indexMethod"
          width="80">
        </el-table-column>
        <el-table-column
          prop="name"
          align="center"
          label="目录名称"
          show-overflow-tooltip>
        </el-table-column>
        <el-table-column
          prop="type"
          align="center"
          label="目录类型"
          width="160">
          <template slot-scope="scope">
            <span  v-if="scope.row.type === 1">预设</span>
            <span  v-if="scope.row.type === 2">自定义</span>
          </template>
        </el-table-column>
        <el-table-column
          prop="type"
          label="仅保存实物（不上传电子版）"
          align="center"
          width="240"
          show-overflow-tooltip>
          <template slot-scope="scope">
            <span  v-if="scope.row.type === 0">否</span>
            <span  v-if="scope.row.type === 1">是</span>
          </template>
        </el-table-column>
        <el-table-column
          label="操作" align="center" width="200">
          <template slot-scope="scope">
            <el-button type="text" size="small" @click="handleFileBtn(scope)">文件目录</el-button>
            <template>
              <el-button type="text" size="small" @click="handleEdit(scope)">编辑</el-button>
              <el-button type="text" size="small" @click="handleDel(scope)">删除</el-button>
            </template>
          </template>
        </el-table-column>
      </el-table>
      <!--分页-->
      <el-pagination
        background
        layout="prev, pager, next"
        :total="total"
        :page-size='pageSize'
        :current-page.sync="currentPage"
        @current-change="handleCurrentChange">
      </el-pagination>
      <!--分页-->
      <el-dialog :title="dialogTitle" :visible.sync="dialogVisible" width="50%"
                 :before-close="close">
        <el-form :model="form" :rules="rules" ref="form"
                 :label-width="formLabelWidth" :validate-on-rule-change="true">
          <el-form-item label="目录名称：" prop="name">
            <el-input v-model="form.name"></el-input>
          </el-form-item>
          <el-form-item label="是否上传相关文件：" prop="isUpload">
            <el-select v-model="form.isUpload" placeholder="请选择">
              <el-option
                v-for="item in options"
                :key="item.value"
                :label="item.label"
                :value="item.value">
              </el-option>
            </el-select>
          </el-form-item>
          <el-form-item label="是否维护存放位置：" prop="position">
            <el-select v-model="form.position" placeholder="请选择">
              <el-option
                v-for="item in positionOptions"
                :key="item.value"
                :label="item.label"
                :value="item.value">
              </el-option>
            </el-select>
          </el-form-item>
          <el-form-item class="submit-radio">
            <el-button type="primary" @click="submit" :loading="isSubmiting">保存</el-button>
            <el-button class="cancal" @click="close">取消</el-button>
          </el-form-item>
        </el-form>
      </el-dialog>
    </div>
  </div>
</template>

<script>
export default {
  name: 'catalog',
  data () {
    return {
      // 当前页
      currentPage: 1,
      pageNo: 0,
      total: 0, // 总条数
      pageSize: 10, // 每页展示条数
      tableData: [
        {
          isReaded: true,
          title: '辅导费付付付多地方的纷纷的芙蓉芙蓉'
        },
        {
          isReaded: false,
          title: '辅导费付付付多地方的纷纷的芙蓉芙蓉'
        }
      ],
      dialogTitle: '',
      isSubmiting: false,
      dialogVisible: false,
      form: {},
      formLabelWidth: '140px',
      rules: {
        name: [
          { required: true, message: '目录名称不能为空', trigger: ['blur', 'change'] }
        ],
        isUpload: [
          { required: true, message: '请选择是否上传相关文件', trigger: ['blur', 'change'] }
        ],
        position: [
          { required: true, message: '请选择是否维护存放位置', trigger: ['blur', 'change'] }
        ]
      },
      options: [{
        value: 1,
        label: '是'
      }, {
        value: 0,
        label: '否'
      }],
      positionOptions: [
        {
          value: 1,
          label: '是'
        }, {
          value: 0,
          label: '否'
        }
      ],
      isAdded: true
    }
  },
  methods: {
    indexMethod (index) {
      return index + (this.currentPage - 1) * 10 + 1
    },
    getData () {
    },
    // 表单分页
    handleCurrentChange (nowNum) {
      this.currentPage = nowNum
      this.pageNo = (nowNum - 1) * this.pageSize
      this.getData(parseInt(this.pageNo), parseInt(this.pageSize))
    },
    handleDel (scope) {
      this.$confirm('确认删除吗?', '提示', {
        confirmButtonText: '确定',
        cancelButtonText: '取消',
        type: 'error'
      }).then(() => {
      }).catch(() => {
        return false
      })
    },
    handleAdd () {
      this.form = {}
      this.isAdded = true
      this.dialogVisible = true
      this.dialogTitle = '新增档案目录'
    },
    handleEdit (scope) {
      this.isAdded = false
      this.dialogVisible = true
      this.dialogTitle = '编辑档案目录'
      this.form = Object.assign({}, scope.row)
    },
    // 文件目录
    handleFileBtn (scope) {
      this.$router.push({path: `/archives/setting/file-catalog/` + scope.row.objectId})
    },
    close () {
      this.dialogVisible = false
      this.form = {}
      this.$refs['form'].resetFields()
    },
    submit () {
      this.$refs['form'].validate((valid) => {
        if (valid) {
          this.isSubmiting = true
        } else {
          return false
        }
      })
    },
    init () {
    }
  },
  watch: {
    '$route': 'init'
  },
  mounted () {
    this.init()
  }
}
</script>

<style scoped>
  .addbutton{
    margin-bottom: 12px;
    color: #fff;
    background-color: #409EFF;
    border-color: #409EFF;
    float: right;
  }
</style>
