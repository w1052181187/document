<template>
  <div class="cloudcontent" id="cloud_updatesection">
    <div class="main">
      <el-form :model="updateForm" :rules="rules" ref= "updateForm" :validate-on-rule-change="true">
        <el-row>
          <el-col :span="12">
            <el-form-item label="项目名称：">
              <span>{{updateForm.tenderProjectName}}</span>
            </el-form-item>
          </el-col>
          <el-col :span="12">
            <el-form-item label="项目编号：">
              <span>{{updateForm.tenderProjectCode}}</span>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row>
          <el-col :span="12">
            <el-form-item label="标段名称："  prop="bidSectionName">
              <el-input v-model="updateForm.bidSectionName"></el-input>
            </el-form-item>
          </el-col>
          <el-col :span="12">
            <el-form-item label="标段编号："  prop="bidSectionCode">
              <el-input v-model="updateForm.bidSectionCode"></el-input>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row>
          <el-col :span="12">
            <el-form-item label="标段类型："  prop="selectBidsTypeOptions">
              <el-cascader expand-trigger="hover"
                           :options="bidsTypeOptions"
                           v-model="updateForm.selectBidsTypeOptions"
                           @change="handleCityChange">
              </el-cascader>
            </el-form-item>
          </el-col>
          <el-col :span="12">
            <el-form-item label="标段合同估算价(元)：" prop="contractReckonPrice">
              <el-input v-model="updateForm.contractReckonPrice"></el-input>
            </el-form-item>
          </el-col>
        </el-row>
        <!--<el-row>-->
          <!--<el-col :span="12">-->
            <!--<el-form-item label="招标文件售价(元)：" prop="docGetFee">-->
              <!--<el-input v-model="updateForm.docGetFee"></el-input>-->
            <!--</el-form-item>-->
          <!--</el-col>-->
        <!--</el-row>-->
        <el-row>
          <el-col :span="12">
            <el-form-item label="招标方式：">
              <span>{{updateForm.tenderMode | filterTenderMode}}</span>
            </el-form-item>
          </el-col>
          <el-col :span="12">
            <el-form-item label="是否资格预审：" v-if="Number(updateForm.tenderMode) === 1">
              <span>{{updateForm.isPreBid | filterIsPreBid}}</span>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row>
          <el-col :span="24" class="ueditor_box" >
            <el-form-item label="标段内容：" class="bitianicon" ref="sectionContent">
              <editor ref="sectionEditor" class="ueditor" :editread="editread" :content="updateForm.sectionContent" v-model="updateForm.sectionContent"></editor>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row>
          <el-col :span="24" class="ueditor_box">
            <el-form-item label="投标人资格条件：" ref="bidderContent">
              <editor ref="bidderEditor" class="ueditor" :editread="editread" :content="bidderContent" v-model="updateForm.bidderContent"></editor>
            </el-form-item>
          </el-col>
        </el-row>
        <el-form-item class="submit-radio">
          <el-button type="primary" @click="handleClickEvent('updateForm','save')" :loading="loading">保存</el-button>
          <el-button type="primary"  class="submitBtn" @click="handleClickEvent('updateForm','submit')" :loading="loading">提交</el-button>
          <el-button class="cancal" @click="handleClickEvent('updateForm','cancel')">取消</el-button>
        </el-form-item>
      </el-form>
      <submitApproveDialog :flowStatus="flowStatus" :tenderSystemCode='updateForm.tenderSystemCode' ref="approvalDialog" :showVisible="approveDialogVisable" @confirmSubmit="confirmSubmit" @handleCancel="cancelApprove"></submitApproveDialog>
    </div>
  </div>
</template>
<script>
import editor from '@/components/ueditor/ueditor.vue'
import * as bidsType from '@/assets/js/constants'
import {bidSection} from '@/api/project'
import {validWhoInteger} from '@/assets/js/validate'
import submitApproveDialog from '@/pages/project/commonCompents/submitApproveDialog'
export default {
  components: {
    editor,
    submitApproveDialog
  },
  data () {
    return {
      flowStatus: 2,
      updateForm: {
        tenderProjectName: '',
        selectBidsTypeOptions: [],
        approvalFlowExecutorList: [],
        noticeList: []
      },
      rules: {
        bidSectionName: [
          { required: true, message: '标段名称不能为空', trigger: ['blur', 'change'] }
        ],
        bidSectionCode: [
          { required: true, message: '标段编号不能为空', trigger: ['blur', 'change'] }
        ],
        selectBidsTypeOptions: [
          { required: true, message: '请选择标段类型', trigger: ['blur', 'change'] }
        ],
        contractReckonPrice: [
          {validator: validWhoInteger, trigger: ['blur', 'change']}
        ],
        docGetFee: [
          { required: true, message: '招标文件售价不能为空', trigger: ['blur', 'change'] },
          {validator: validWhoInteger, trigger: ['blur', 'change']}
        ],
        sectionContent: [
          {required: false, message: '标段内容不能为空', trigger: ['blur', 'change']}
        ],
        bidderContent: [
          { required: true, message: '投标人资格条件不能为空', trigger: ['blur', 'change'] }
        ]
      },
      // 标段类型
      bidsTypeOptions: bidsType.bidsType,
      value: '',
      // 富文本
      editread: false,
      sectionContent: '',
      bidderContent: '',
      loading: false,
      approveMethod: 0,
      approveDialogVisable: false
    }
  },
  watch: {
    '$route': 'getChooseBidSectionInfo'
  },
  created () {
    this.getChooseBidSectionInfo()
  },
  filters: {
    /** 招标方式 */
    filterTenderMode (value) {
      if (Number(value) === 1) {
        return '公开招标'
      } else if (Number(value) === 2) {
        return '邀请招标'
      } else if (Number(value) === 3) {
        return '竞争性谈判'
      } else if (Number(value) === 4) {
        return '单一来源采购'
      } else if (Number(value) === 5) {
        return '询价采购'
      } else if (Number(value) === 6) {
        return '竞争性磋商'
      }
    },
    /** 是否资格预审 */
    filterIsPreBid (value) {
      if (value === 0) {
        return '否'
      } else if (value === 1) {
        return '是'
      }
    }
  },
  methods: {
    /** 获取当前选择的标段信息 */
    getChooseBidSectionInfo () {
      bidSection.getOne(this.$route.query.bidSectionSystemCode).then((res) => {
        if (res.data.bidSection) {
          this.updateForm = res.data.bidSection
          // 获取文本编辑器的内容
          this.$refs.sectionEditor.setContent(this.sectionContent = this.updateForm.bidSectionContent)
          this.$refs.bidderEditor.setContent(this.bidderContent = this.updateForm.bidQualification)
          // 获取标段（包）分类代码
          let list = this.getClassifyList(this.updateForm.tenderProjectClassifyCode)
          if (list.length > 0) {
            this.updateForm.selectBidsTypeOptions = [list[0], list[1], list[2], list[4]]
          }
        }
      })
    },
    /** 获取标段分类代码的集合 */
    getClassifyList (tenderProjectClassifyCode) {
      let list = tenderProjectClassifyCode.split('-')
      return list
    },
    /* 按钮点击事件：提交、保存、取消 */
    handleClickEvent (formName, type) {
      if (Object.is(type, 'submit') || Object.is(type, 'save')) {
        if (!this.$refs.sectionEditor.getContent()) {
          this.$message.warning('请输入标段内容！')
          return false
        }
        this.updateForm.sectionContent = this.$refs.sectionEditor.getContent()
        this.updateForm.bidderContent = this.$refs.bidderEditor.getContent()
        this.$refs[formName].validate((valid) => {
          if (valid) {
            if (Object.is(type, 'save')) {
              this.approveDialogVisable = false
              this.submitData(type)
            } else {
              this.approveDialogVisable = true
            }
          } else {
            this.loading = false
            return false
          }
        })
      } else if (Object.is(type, 'cancel')) {
        this.$store.commit('delete_tabs', this.$route.fullPath)
        this.$router.push({path: `/project/projectProcess/project/process/${this.$route.query.code}`})
      }
    },
    submitData (type) {
      let msg = Object.is(type, 'submit') ? '提交后数据将锁定，不允许修改，确认要提交吗?' : '确认要保存吗?'
      this.$confirm(msg, '提示', {
        confirmButtonText: '确定',
        cancelButtonText: '取消',
        type: 'warning',
        beforeClose: (action, instance, done) => {
          done()
        }
      }).then(() => {
        this.loading = true
        // 获取文本编辑器中的内容
        if (this.$refs.sectionEditor) {
          this.updateForm.bidSectionContent = this.$refs.sectionEditor.getContent()
        }
        if (this.$refs.bidderEditor) {
          this.updateForm.bidQualification = this.$refs.bidderEditor.getContent()
        }
        // 根据type设置当前招标项目的状态
        if (Object.is(type, 'submit')) {
          this.updateForm.auditStatus = 4 // 暂时不考虑审批
          this.updateForm.flowStatus = 5 // 暂时不考虑审批
        } else {
          this.updateForm.auditStatus = 0
          this.updateForm.flowStatus = 1 // 未开始
        }
        bidSection.save(this.updateForm).then((res) => {
          this.loading = false
          if (res.data.resCode === '0000') {
            this.$store.commit('delete_tabs', this.$route.fullPath)
            this.$router.push({path: `/project/projectProcess/project/process/${this.$route.query.code}`})
          }
        })
      }).catch(() => {
        this.$refs.approvalDialog.cancelLoading()
        this.loading = false
        return false
      })
    },
    // 确认提交
    confirmSubmit (record) {
      this.updateForm.approvalFlowExecutorList = []
      this.updateForm.noticeList = []
      for (let i = 0; i < record.approveList.length; i++) {
        let obj = {
          usersId: record.approveList[i].objectId,
          flowLevel: i + 1
        }
        this.updateForm.approvalFlowExecutorList.push(obj)
      }
      if (record.noticeList && record.noticeList.length > 0) {
        this.updateForm.noticeList = record.noticeList
      }
      this.submitData('submit')
    },
    cancelApprove () {
      this.approveDialogVisable = false
    },
    /** 标段类型的选择 */
    handleCityChange () {
      if (this.updateForm.selectBidsTypeOptions) {
        let str = ''
        for (let i = 0; i < this.updateForm.selectBidsTypeOptions.length; i++) {
          if (i === this.updateForm.selectBidsTypeOptions.length - 1) {
            str += this.updateForm.selectBidsTypeOptions[i]
          } else {
            str += this.updateForm.selectBidsTypeOptions[i]
            str += '-'
          }
        }
        this.updateForm.tenderProjectClassifyCode = str
      }
    }
  }
}
</script>
<style lang="less">
  #cloud_updatesection {
    .el-select{
      width: 100%;
    }
  }
</style>
