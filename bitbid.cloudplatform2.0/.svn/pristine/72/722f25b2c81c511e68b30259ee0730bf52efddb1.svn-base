<template>
  <div class="cloudcontent" id="bid-file">
    <div class="main">
      <div class="bid-info">
        <el-form :model="info">
          <el-row>
            <el-col :span="12">
              <el-form-item label="项目名称：">
                <span>{{info.projectName}}</span>
              </el-form-item>
            </el-col>
            <el-col :span="12">
              <el-form-item label="项目编号：">
                <span>{{info.projectCode}}</span>
              </el-form-item>
            </el-col>
          </el-row>
          <el-row>
            <el-col :span="12">
              <el-form-item label="标段名称：">
                <span>{{info.bidSectionName}}</span>
              </el-form-item>
            </el-col>
            <el-col :span="12">
              <el-form-item label="标段编号：">
                <span>{{info.bidSectionCode}}</span>
              </el-form-item>
            </el-col>
          </el-row>
        </el-form>
      </div>
      <div class="module">
        <div class="left">
          <div class="title">移交目录</div>
          <ul class="left-menu">
            <li :class="activeMenuIndex === index ? 'active-menu' : ''" v-for="(item, index) in leftMemu" :key="index" @click="handleMenuClick(index)">{{item}}</li>
          </ul>
        </div>
        <div class="middle"></div>
        <div class="right">
          <div class="title">{{moduleName}}</div>
          <template>
            <ul class="file-box">
<!--              <li class="file-item-border" v-for="(item, index) in info.archivesFileList" :key="index" v-if="index >= (pageSize * currentPage) - pageSize && index < currentPage * pageSize">-->
              <li class="file-item-border" v-for="(item, index) in archivesFileList"
                  :key="index" v-if="index >= (pageSize * currentPage) - pageSize && index < currentPage * pageSize"
                  @mouseover="handleMouseOver(index)"
                  @mouseout="handleMouseOut">
                <div class="file-item">
                  <span class="file-name">{{index + 1 + ' ' + item.archivesCatalog.name}}</span>
                  <span class="file-action" v-if="curHoverIndex === index" @click="delBtn(item, index)">删除</span>
                  <span class="file-action" @click="updateBtn(item)">{{item.archivesCatalog.name === activeName ? '收起' : '编辑'}}</span>
                </div>
                <fileItem v-if="item.archivesCatalog.name === activeName" :can-edit="canEdit" :item="item" :active-name="activeName"></fileItem>
              </li>
            </ul>
            <!--按钮-->
            <el-button class="add-file" @click="handleAddFileDir">
              <span> +&nbsp;&nbsp;增加文件目录</span>
            </el-button>
            <!--分页-->
            <el-pagination
              background
              layout="prev, pager, next"
              :total="archivesFileList.length"
              :current-page.sync="currentPage"
              :page-size='pageSize'
              @current-change="handleCurrentChange">
            </el-pagination>
            <!--分页-->
          </template>
        </div>
      </div>

      <el-dialog :before-close='close' title="新增文件类型" :visible.sync="dialogVisible">
        <el-form :model="dialogForm" :rules="rules" ref="dialogForm" :label-width="formLabelWidth">
          <el-form-item label="文件类型：" prop="fileType">
            <el-select v-model="dialogForm.fileType" placeholder="请选择">
              <el-option
                v-for="item in fileTypeOptions"
                :key="item.archivesCatalog.objectId"
                :label="item.archivesCatalog.name"
                :value="item.archivesCatalog.objectId">
              </el-option>
            </el-select>
          </el-form-item>
        </el-form>
        <div slot="footer" class="dialog-footer">
          <el-button class="cancal" @click="close">取 消</el-button>
          <el-button type="primary" @click="submitForm('dialogForm')">确认</el-button>
        </div>
      </el-dialog>
    </div>
  </div>
</template>

<script>
import {archivesFile, archivesInfo} from '@/api/archives'
export default {
  watch: {
  },
  components: {
    // () => import(/* webpackChunkName: 'customer' */ '@/pages/customer/business/index')
    fileItem: resolve => require(['../public/fileItem'], resolve)
  },
  name: 'file',
  props: ['info'],
  data () {
    return {
      // 当前页
      currentPage: 1,
      pageNo: 0,
      total: null, // 总条数
      pageSize: 10, // 每页展示条数
      activeName: '',
      canEdit: true,
      dialogVisible: false,
      formLabelWidth: '120px',
      dialogForm: {
      },
      rules: {
        fileType: [
          {required: true, message: '请选择文件类型', trigger: ['blur', 'change']}
        ]
      },
      fileTypeOptions: [],
      moduleName: '电子档案',
      leftMemu: [
        '电子档案',
        '汇编',
        '音视频',
        '投标文件',
        '合同文件'
      ],
      activeMenuIndex: 0,
      archivesFileList: [
        {
          archivesCatalog: {
            name: 'dd'
          }
        },
        {
          archivesCatalog: {
            name: 'dd'
          }
        },
        {
          archivesCatalog: {
            name: 'dd'
          }
        },
        {
          archivesCatalog: {
            name: 'dd'
          }
        },
        {
          archivesCatalog: {
            name: 'dd'
          }
        }
      ],
      curHoverIndex: ''
    }
  },
  methods: {
    handleMenuClick (index) {
      if (this.activeMenuIndex === index) {
        return
      }
      this.moduleName = this.leftMemu[index]
      this.activeMenuIndex = index
    },
    // 鼠标移上
    handleMouseOver (index) {
      this.curHoverIndex = index
    },
    // 鼠标移出
    handleMouseOut () {
      this.curHoverIndex = ''
    },
    // 分页
    handleCurrentChange (nowNum) {
      this.currentPage = nowNum
      this.pageNo = (nowNum - 1) * this.pageSize
    },
    dataIndex (index) {
      return index + (this.currentPage - 1) * this.pageSize + 1
    },
    updateBtn (item) {
      if (this.activeName === item.archivesCatalog.name) {
        this.activeName = ''
      } else {
        this.activeName = item.archivesCatalog.name
      }
    },
    // 删除
    delBtn (item, index) {
      this.$confirm('确认删除吗?', '提示', {
        confirmButtonText: '确定',
        cancelButtonText: '取消',
        type: 'error'
      }).then(() => {
        archivesFile.deleteArchivesFile(item.objectId).then((res) => {
          if (res.data.resCode === '0000') {
            this.info.archivesFileList.splice(index, 1)
          }
        })
      }).catch(() => {
        return false
      })
    },
    handleAddFileDir () {
      this.dialogVisible = true
      // 获取目录
      archivesInfo.getUnaddedCatalog({
        tenderSystemCode: this.info.tenderSystemCode,
        objectId: this.info.objectId,
        enterpriseId: this.info.enterpriseId
      }).then((res) => {
        if (res.data.resCode === '0000') {
          this.fileTypeOptions = res.data.archivesFileList
        }
      })
    },
    close () {
      this.dialogVisible = false
      this.$refs.dialogForm.resetFields()
    },
    // 增加文件目录
    submitForm (formName) {
      this.$refs[formName].validate((valid) => {
        if (valid) {
          this.fileTypeOptions.forEach(item => {
            if (this.dialogForm.fileType === item.archivesCatalog.objectId) {
              archivesFile.addArchivesFile(item).then((res) => {
                this.info.archivesFileList.push(res.data.archivesFile)
                this.dialogVisible = false
                this.dialogForm.fileType = ''
              })
            }
          })
        } else {
          return false
        }
      })
    }
  },
  mounted () {
  }
}
</script>

<style lang="less">
  #bid-file{
    .el-icon-arrow-right:before {
      content: "";
    }
    .bid-code {
      font-weight: 800;
    }
    .bid-info {
      border: #dcdfe6 1px solid;
      /*height: 60px;*/
      /*line-height: 60px;*/
      padding-top: 12px;
      box-sizing: border-box;
      /*font-size: 14px;*/
      /*margin-bottom: 24px;*/
    }
    .file-item {
      width: 100%;
      background-color: #eeeeee;
      font-size: 14px;
      padding-top: 20px;
      padding-bottom: 20px;
      padding-left: 32px;
      box-sizing: border-box;
    }
    .file-item-gap {
      width: 100%;
      background-color: #eeeeee;
      font-size: 14px;
      padding-top: 20px;
      padding-bottom: 20px;
      padding-left: 32px;
      box-sizing: border-box;
    }
    .file-name {
      color: #111;
    }
    .file-action {
      float: right;
      margin-right: 24px;
      cursor: pointer;
    }
    .file-box .file-item-border{
      border: #dcdfe6 1px solid;
      margin-top: 8px;
    }
    .add-file {
      margin-top: 24px;
      background: #108cee;
      border-color: #108cee;
      color: white;
    }
    .module {
      margin-top: 12px;
    }
    .module .left {
      width: 12%;
      float: left;
      border: #dee1e5 1px solid;
    }
    .module .middle {
      width: 3%;
      height: 100px;
      float: left;
    }
    .module .right {
      width: 85%;
      float: left;
    }
    .module .title {
      margin: 16px 0;
      height: 18px;
      line-height: 18px;
      display: inline-block;
      text-align: center;
      font-weight: 800;
    }
    .module .title::before {
      display: inline-block;
      content: '';
      width: 3px;
      height: 18px;
      line-height: 18px;
      margin-right: 6px;
      background-color: #498ce9;
      text-align: center;
      vertical-align: middle;
    }
    .module .active-menu {
      color: #498ce9;
    }
    .module .left-menu li {
      padding: 16px 46px;
      box-sizing: border-box;
      vertical-align: middle;
      border-top: #eeeeee 1px solid;
    }
  }
</style>
