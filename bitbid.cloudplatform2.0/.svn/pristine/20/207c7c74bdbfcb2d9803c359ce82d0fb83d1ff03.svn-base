<template>
  <div class="cloudcontent" id="cloud_processedit">
    <div class="main">
      <el-form :model="updateForm" :rules="rules" ref="updateForm" :validate-on-rule-change="true">
        <el-row>
          <el-col :span="12">
            <el-form-item label="项目编号：">
              <el-input v-model="bidSection.tenderProjectCode" disabled></el-input>
            </el-form-item>
          </el-col>
          <el-col :span="12">
            <el-form-item label="项目名称：">
              <el-input v-model="bidSection.tenderProjectName" disabled></el-input>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row>
          <el-col :span="12">
            <el-form-item label="标段编号：">
              <el-input v-model="bidSection.bidSectionCode" disabled></el-input>
            </el-form-item>
          </el-col>
          <el-col :span="12">
            <el-form-item label="标段名称：">
              <el-input v-model="bidSection.bidSectionName" disabled></el-input>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row>
          <el-col :span="12">
            <el-form-item label="中标结果通知书标题："  prop="content">
              <el-input v-model="updateForm.content"></el-input>
            </el-form-item>
          </el-col>
          <el-col :span="12">
            <el-form-item label="中标人："  prop="successfulBidders">
              <el-input v-model="updateForm.successfulBidders"></el-input>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row>
          <el-col :span="24">
            <el-form-item label="未中标人：">
              <el-button class="addbtn" @click="addSupplierBtn">+ 新增</el-button>
              <el-table
                :data="updateForm.unsuccessfulBidderList"
                border
                style="width: 100%" header-cell-class-name="tableheader">
                <el-table-column
                  prop="bidderName"
                  label="投标人名称"
                  show-overflow-tooltip>
                  <template slot-scope='scope'>
                    <el-input v-model="scope.row.bidderName"></el-input>
                  </template>
                </el-table-column>
                <el-table-column
                  label="操作" align="center" width="100">
                  <template slot-scope="scope">
                    <el-button type="text" size="small" @click="delSupplierBtn(scope.$index)">删除</el-button>
                  </template>
                </el-table-column>
              </el-table>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row>
          <el-col :span="24">
            <el-form-item label="招标结果附件：">
              <upload-file @uploadSuccess="uploadOtherSuccess" @deleteSuccess="deleteSuccess"
                           :fileArrays="updateForm.fileInformationList"
                           fileType="9"
                           isImage="0">
              </upload-file>
            </el-form-item>
          </el-col>
        </el-row>
        <el-form-item class="submit-radio">
          <el-button type="primary" @click="submit('updateForm', 1)" :loading="isSubmiting">提交</el-button>
          <el-button type="primary" @click="submit('updateForm', 0)" :loading="isSaving">保存</el-button>
          <el-button class="cancal" @click="close">取消</el-button>
        </el-form-item>
      </el-form>
    </div>
  </div>
</template>
<script>
import uploadFile from '@/components/upload/publicFileUpload'
import {resultInfo} from '@/api/project'
export default {
  components: {
    uploadFile
  },
  data () {
    return {
      isSaving: false,
      isSubmiting: false,
      updateForm: {
        fileInformationList: [],
        unsuccessfulBidderList: []
      },
      bidSection: [],
      rules: {
        successfulBidders: {required: true, message: '请填写中标人', trigger: ['blur', 'change']},
        content: {required: true, message: '请填写中标结果通知书标题', trigger: ['blur', 'change']}
      },
      tableData: []
    }
  },
  methods: {
    /**
     * 增加供应商
     */
    addEvaluateBtn () {
      this.updateForm.unsuccessfulBidderList.push({})
    },
    delEvaluateBtn (index) {
      this.updateForm.unsuccessfulBidderList.splice(index, 1)
    },
    // 上传附件
    uploadOtherSuccess (file) {
      this.updateForm.fileInformationList.push(file)
    },
    deleteSuccess (fileId) {
      this.updateForm.fileInformationList = this.updateForm.fileInformationList.filter(item => item.relativePath !== fileId)
    },
    // 提交/保存
    submit (form, status) {
      this.$refs[form].validate((vaild) => {
        if (vaild) {
          if (Object.is(status, 0)) {
            this.isSaving = true
            this.updateForm.auditStatus = 0
          } else if (Object.is(status, 1)) {
            this.isSubmiting = true
            this.updateForm.auditStatus = 4
            this.updateForm.submitTime = new Date().getTime()
          }
          this.updateForm.fileInformationList.map(item => {
            item.objectId = null
          })
          let unsuccessfulBidders = ''
          this.updateForm.unsuccessfulBidderList.map(item => {
            unsuccessfulBidders = unsuccessfulBidders + item.bidderName + ';'
          })
          this.updateForm.unsuccessfulBidders = unsuccessfulBidders.substring(0, unsuccessfulBidders.length - 1)
          resultInfo.update(this.updateForm).then((res) => {
            this.isSaving = false
            this.isSubmiting = false
            if (res.data.resCode === '0000') {
              this.close()
            }
          })
        } else {
          return false
        }
      })
    },
    // 取消
    close () {
      this.$store.commit('delete_tabs', this.$route.fullPath)
      this.$router.go(-1)
    },
    getResultInfo () {
      resultInfo.getById(this.$route.query.objectId).then(res => {
        this.updateForm = res.data.resultInfo
        if (this.updateForm.bidSection) {
          this.bidSection = this.updateForm.bidSection
        }
        let unsuccessfulBidders = this.updateForm.unsuccessfulBidders.split(';')
        this.updateForm.unsuccessfulBidderList = []
        for (let i = 0; i < unsuccessfulBidders.length; i++) {
          let result = {}
          result.bidderName = unsuccessfulBidders[i]
          this.updateForm.unsuccessfulBidderList.push(result)
        }
      })
    }
  },
  watch: {
    '$route': 'getResultInfo'
  },
  mounted () {
    this.getResultInfo()
  }
}
</script>
<style lang="less">
  #cloud_processedit{
    .addbtn{
      border: 1px solid #3f63f6;
      height: 32px;
      padding: 7px 12px;
      margin-bottom: 12px;
    }
  }
</style>
