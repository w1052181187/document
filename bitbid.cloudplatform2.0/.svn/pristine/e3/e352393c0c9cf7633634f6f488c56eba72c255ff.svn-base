<template>
  <div class="cloudcontent" id="cloud_paymentList" :loading="loading">
    <div class="tit">
      <span>{{tenderProjectName}}<i>（项目编号：{{tenderProjectCode}}）</i></span>
    </div>
    <div class="main">
      <!--搜索 & 添加按钮-->
      <div class="topmain">
        <el-row>
          <div class="seacher_box">
            <span>收支项目：</span>
            <el-input class="search left" placeholder="请输入收支项目关键字" v-model="searchForm.settlementGroupNameLike">
              <el-button  slot="append" icon="el-icon-search" type="" @click="search"></el-button>
            </el-input>
          </div>
          <!--按钮-->
          <div class="fr" v-if="Number(isToSettle) === 0">
            <el-button class="addbutton" @click="addBtn">
              <span> + 新增收支项目</span>
            </el-button>
          </div>
          <!--按钮-->
        </el-row>
      </div>
      <!--搜索 & 添加按钮-->
      <el-table
        :data="tableData"
        border
        tooltip-effect="dark"
        style="width: 100%" header-cell-class-name="tableheader">
        <el-table-column
          type="index"
          label="序号"
          width="60"
          :index='indexMethod'
          align="center">
        </el-table-column>
        <el-table-column
          prop="name"
          label="收支项目"
          show-overflow-tooltip>
        </el-table-column>
        <el-table-column
          prop="amount"
          label="金额合计"
          width="260"
          show-overflow-tooltip>
        </el-table-column>
        <el-table-column
          label="操作" align="center" width="200">
          <template slot-scope="scope">
            <el-button type="text" size="small" @click="lookBtn(scope)">查看</el-button>
            <el-button type="text" size="small" @click="delBtn(scope)" v-if="scope.row.isSystemDefault === 0 && Number(isToSettle) === 1">删除</el-button>
          </template>
        </el-table-column>
      </el-table>
      <!--分页-->
      <el-pagination
        background
        layout="prev, pager, next"
        :total="total"
        :page-size='pageSize'
        :current-page.sync="currentPage"
        @current-change="handleCurrentChange"
        @next-click="handleCurrentNext">
      </el-pagination>
      <!--分页-->
    </div>
    <el-dialog title="新增收支项目" width="600px"  :visible.sync="showVisible">
      <el-form :model="payForm" :rules="rules" ref="payForm" label-width="130px" >
        <el-form-item label="收支项目名称：" prop="name">
          <el-input v-model.trim="payForm.name" placeholder="请输入收支项目名称">
          </el-input>
        </el-form-item>
        <el-form-item label="收支类型：" prop="budgetType">
          <el-select v-model="payForm.budgetType" placeholder="请选择收支类型">
            <el-option label="收入" value="1"></el-option>
            <el-option label="支出" value="2"></el-option>
          </el-select>
        </el-form-item>
        <el-form-item label="是否需要退还：" v-if="Number(payForm.budgetType) === 1" prop="isNeedReturn" >
          <el-select v-model="payForm.isNeedReturn" placeholder="请选择收支类型">
            <el-option label="不退还" value="0"></el-option>
            <el-option label="退还" value="1"></el-option>
          </el-select>
        </el-form-item>
        <el-form-item label="收支方式：" v-if="Number(payForm.budgetType) === 1" prop="budgetMethod" >
          <el-select v-model="payForm.budgetMethod" placeholder="请选择收支类型">
            <el-option label="按费用项" value="1" v-if="Number(payForm.isNeedReturn) === 0"></el-option>
            <el-option label="按用户" value="2" ></el-option>
          </el-select>
        </el-form-item>
      </el-form>
      <div slot="footer" class="dialog-footer operationbtn">
        <el-button type="info" @click="cancel()">取 消</el-button>
        <el-button type="primary" @click="save('payForm')">确 定</el-button>
      </div>
    </el-dialog>
  </div>
</template>
<script>
import {tenderProject, settlementGroup} from '@/api/project'
export default {
  components: {
  },
  data () {
    return {
      loading: false,
      searchForm: {
        settlementGroupNameLike: ''
      },
      messageLike: '',
      tableData: [],
      // 当前页
      currentPage: 1,
      pageNo: 0,
      total: 0, // 总条数
      pageSize: 10, // 每页展示条数
      dataIndex: 1,
      // 新增收支项目弹窗
      showVisible: false,
      payForm: {},
      tenderSystemCode: this.$route.query.tenderSystemCode,
      isToSettle: this.$route.query.isToSettle,
      tenderProjectName: '',
      tenderProjectCode: '',
      rules: {
        name: [
          { required: true, message: '收支项目名称不能为空', trigger: ['blur', 'change'] }
        ],
        budgetType: [
          { required: true, message: '请选择收支类型', trigger: ['blur', 'change'] }
        ],
        isNeedReturn: [
          { required: true, message: '请选择是否需要退还', trigger: ['blur', 'change'] }
        ],
        budgetMethod: [
          { required: true, message: '请选择收支方式', trigger: ['blur', 'change'] }
        ]
      }
    }
  },
  watch: {
    '$route': 'getTableData'
  },
  created () {
    this.getTenderProjectName()
    this.getTableData()
  },
  methods: {
    /** 查询项目名称 */
    getTenderProjectName () {
      this.loading = true
      tenderProject.getOne(this.tenderSystemCode).then((res) => {
        if (res.data.tenderProject) {
          this.tenderProjectName = res.data.tenderProject.tenderProjectName
          this.tenderProjectCode = res.data.tenderProject.tenderProjectCode
        }
      })
    },
    getTableData () {
      settlementGroup.getList({
        pageNo: this.pageNo,
        pageSize: this.pageSize,
        enterpriseId: this.$store.getters.authUser.enterpriseId,
        tenderSystemCode: this.tenderSystemCode,
        messageLike: this.searchForm.settlementGroupNameLike || null
      }).then((res) => {
        if (res.data.settlementGroupList && res.data.settlementGroupList.list) {
          this.tableData = res.data.settlementGroupList.list
          this.total = res.data.settlementGroupList.total
        }
      })
      this.loading = false
    },
    search () {
      this.getTableData()
    },
    addBtn () {
      this.showVisible = true
    },
    lookBtn (scope) {
      let rowName = scope.row.name
      if (rowName === '标书费') {
        this.$router.push({path: `/project/proSettlement/paymentDetails/tenderFeeList`, query: {text: '标书费', tenderSystemCode: this.tenderSystemCode, settlementGroupCode: scope.row.code, isToSettle: this.isToSettle}})
      } else if (rowName === '保证金') {
        this.$router.push({path: `/project/proSettlement/customDetails/depositList`, query: {text: '保证金', tenderSystemCode: this.tenderSystemCode, settlementGroupCode: scope.row.code, isToSettle: this.isToSettle}})
      } else if (rowName === '服务费') {
        this.$router.push({path: `/project/proSettlement/paymentDetails/serviceList`, query: {text: '服务费', tenderSystemCode: this.tenderSystemCode, settlementGroupCode: scope.row.code, isToSettle: this.isToSettle}})
      } else if (rowName === '其他收入') {
        this.$router.push({path: `/project/proSettlement/otherIncomePay/otherIncome`, query: {text: '其他收入', tenderSystemCode: this.tenderSystemCode, settlementGroupCode: scope.row.code, isToSettle: this.isToSettle}})
      } else if (rowName === '其他收支') {
        this.$router.push({path: `/project/proSettlement/otherIncomePay/otherPay`, query: {text: '其他收支', tenderSystemCode: this.tenderSystemCode, settlementGroupCode: scope.row.code, isToSettle: this.isToSettle}})
      } else if (Number(scope.row.budgetType) === 2) {
        this.$router.push({path: `/project/proSettlement/otherIncomePay/payList`, query: {text: '支出', tenderSystemCode: this.tenderSystemCode, settlementGroupCode: scope.row.code, isToSettle: this.isToSettle}})
      } else {
        if (Number(scope.row.budgetType) === 1 && Number(scope.row.isNeedReturn) === 1) {
          this.$router.push({path: `/project/proSettlement/customDetails/customChargeList`, query: {text: '收入退还', tenderSystemCode: this.tenderSystemCode, settlementGroupCode: scope.row.code, isToSettle: this.isToSettle}})
        } else if (Number(scope.row.budgetType) === 1 && Number(scope.row.isNeedReturn) === 0 && Number(scope.row.budgetMethod) === 2) {
          this.$router.push({path: `/project/proSettlement/paymentDetails/customerList`, query: {text: '收入不退还按用户', tenderSystemCode: this.tenderSystemCode, settlementGroupCode: scope.row.code, isToSettle: this.isToSettle}})
        } else if (Number(scope.row.budgetType) === 1 && Number(scope.row.isNeedReturn) === 0 && Number(scope.row.budgetMethod) === 1) {
          this.$router.push({path: `/project/proSettlement/otherIncomePay/feesList`, query: {text: '收入不退还按收费项', tenderSystemCode: this.tenderSystemCode, settlementGroupCode: scope.row.code, isToSettle: this.isToSettle}})
        }
      }
    },
    delBtn (scope) {
      this.$confirm('确认删除吗?', '提示', {
        confirmButtonText: '确定',
        cancelButtonText: '取消',
        type: 'error'
      }).then(() => {
        settlementGroup.delete(scope.row.objectId).then(() => {
          this.getTableData()
        })
      }).catch(() => {
        return false
      })
    },
    indexMethod (index) {
      return index + (this.currentPage - 1) * 10 + 1
    },
    // 表单分页
    handleCurrentChange (nowNum) {
      this.currentPage = nowNum
      this.pageNo = (nowNum - 1) * this.pageSize
      this.getTableData(parseInt(this.pageNo), parseInt(this.pageSize))
    },
    handleCurrentNext (nowNum) {
      this.currentPage = nowNum
      this.pageNo = (nowNum - 1) * this.pageSize
      this.getTableData(parseInt(this.pageNo), parseInt(this.pageSize))
    },
    // 取消
    cancel () {
      this.showVisible = false
      this.$refs['payForm'].resetFields()
    },
    // 保存
    save (formName) {
      this.$refs[formName].validate((valid) => {
        if (valid) {
          this.$confirm('确认要保存吗?', '提示', {
            confirmButtonText: '确定',
            cancelButtonText: '取消',
            type: 'warning',
            beforeClose: (action, instance, done) => {
              done()
            }
          }).then(() => {
            this.payForm.tenderSystemCode = this.tenderSystemCode
            this.payForm.orders = 2
            this.payForm.isSystemDefault = 0
            settlementGroup.save(this.payForm).then((res) => {
              if (res.data.resCode === '0000') {
                this.getTableData()
                this.cancel()
              }
            })
          }).catch(() => {
            return false
          })
        } else {
          return false
        }
      })
    }
  }
}
</script>
<style lang="less">
  #cloud_paymentList {
    .seacher_box{
      width: 700px;
    }
    .seacher_box .search{
      width: 44%;
    }
    .fr>em{
      font-size: 14px;
      font-style: normal;
      line-height: 40px;
      margin: 0 10px;
    }
  }
</style>
