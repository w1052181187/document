<template>
  <div class="cloudcontent">
    <div class="main">
      <el-form :model="updateForm" :rules="rules" ref="updateForm" :validate-on-rule-change="true">
        <el-form-item label="审批节点：" prop="tenderProjectCode">
          <span>{{updateForm.flowStatusStr}}</span>
        </el-form-item>
        <el-form-item label="审批流程：" prop="processList">
          <div v-for="(item, index) in processList" :key="item.objectId">
            <div class="process">
              <el-row class="top">
                <el-col :span="2" class="top_col"><span class="top_index">{{index + 1}}</span> <span class="top_title">第{{handleProcess(index+1)}}级</span>
                </el-col>
                <el-col :span="22" class="top_col">
                  <el-button class="selectbtn" @click="handleSelectBtn(item,index)">选择</el-button>
                </el-col>
              </el-row>
              <el-row class="content">
                <el-col :span="2"><span>部门:</span></el-col>
                <el-col :span="22"><span v-if="item.approvalFlowExecutor !== null">{{item.approvalFlowExecutor.departmentsNameStr}}</span>
                </el-col>
              </el-row>
              <el-row class="content">
                <el-col :span="2"><span>角色：</span></el-col>
                <el-col :span="22"><span v-if="item.approvalFlowExecutor !== null">{{item.approvalFlowExecutor.rolesNameStr}}</span>
                </el-col>
              </el-row>
              <el-row class="content">
                <el-col :span="2"><span>人员：</span></el-col>
                <el-col :span="22"><span v-if="item.approvalFlowExecutor !== null">{{item.approvalFlowExecutor.usersNameStr}}</span>
                </el-col>
              </el-row>
            </div>
          </div>
        </el-form-item>
        <el-form-item>
          <el-button class="addbutton" @click="handleAddBtn">
            <span> + 增加一级</span>
          </el-button>
        </el-form-item>
        <!--分页-->
        <el-form-item class="submit-radio">
          <!--<el-button type="primary" @click="submit('updateForm', 1)" :loading="isSubmiting">提交</el-button>-->
          <el-button type="primary" @click="submit('updateForm')" :loading="isSubmiting">保存</el-button>
          <el-button class="cancal" @click="$router.history.go(-1)">取消</el-button>
        </el-form-item>
      </el-form>
    </div>
    <el-dialog :title="titileName" :visible.sync="dialogVisible" width="40%" :before-close="handleClose">
      <el-tabs v-model="activeTab">
        <el-tab-pane label="按部门" name="1">
          <TreeRadio :initData="checkedDepatmentKeys" @changeRadio="selectedDepatment"></TreeRadio>
        </el-tab-pane>
        <el-tab-pane label="按角色" name="2">
          <RoleRadio :initRole="checkedRoleId" @changeRadio="selectedRole"></RoleRadio>
        </el-tab-pane>
        <el-tab-pane label="按人员" name="3">
          <UserRadio :initUser="checkedUserId" @changeRadio="selectedUser"></UserRadio>
        </el-tab-pane>
      </el-tabs>
      <div class="submit_btn">
        <el-button type="primary" @click="submitTab()" :loading="isSubmiting">保存</el-button>
        <el-button type="cancel" @click="handleClose">取消</el-button>
      </div>
    </el-dialog>
  </div>
</template>

<script>
import { toChinesNum } from '@/assets/js/common'
import { approvalFlow } from '../../../../api/todoList/index'
import TreeRadio from '../../department/tree/tree_radio'
import RoleRadio from '../../roles/role_radio'
import UserRadio from '../../users/user_radio'

export default {
  components: {
    TreeRadio,
    RoleRadio,
    UserRadio
  },
  name: '',
  data () {
    return {
      dialogVisible: false,
      isSubmiting: false,
      titileName: '选择审批人',
      form: {},
      dialogRules: {},
      activeTab: '1', // 当前选项卡
      oldTab: '1', // 选中当前之前的选项卡
      data: [],
      updateForm: {},
      rules: {},
      processList: [],
      checkedDepatmentKeys: [],
      checkedRoleId: '',
      checkedUserId: '',
      emptyItem: {
        flowLevel: 1,
        approvalNodeCode: '',
        approvalFlowExecutor: {
          departmentsNameStr: '',
          departmentsId: '',
          rolesNameStr: '',
          rolesId: '',
          usersNameStr: '',
          usersId: ''
        }},
      itemIndex: 0, // 流程等级索引
      // 选择的部门节点
      departmentNode: {},
      roleNode: {},
      userNode: {}
    }
  },
  methods: {
    // 初始化数据
    handleApprovalFlowList () {
      approvalFlow.approvalFlowList(this.$route.params.objectId).then((res) => {
        this.updateForm = res.data.approvalNode
        if (res.data.approvalFlowList !== undefined || res.data.approvalFlowList.length > 0) {
          this.processList = res.data.approvalFlowList
        }
      })
    },
    handleSelectBtn (item, index) {
      this.itemIndex = index
      this.dialogVisible = true
      this.processList[this.itemIndex].flowLevel = index + 1
      this.processList[this.itemIndex].approvalNodeCode = this.updateForm.code
      this.setDefaultChecked()
    },
    // 关闭弹窗
    handleClose () {
      this.dialogVisible = false
    },
    handleProcess (num) {
      return toChinesNum(num)
    },
    handleAddBtn () {
      this.processList.push(JSON.parse(JSON.stringify(this.emptyItem)))
    },
    selectedDepatment (checkedNode) {
      this.departmentNode = checkedNode
    },
    selectedRole (checkedNode) {
      this.roleNode = checkedNode
    },
    selectedUser (checkedNode) {
      this.userNode = checkedNode
    },
    // 设置默认选中状态
    setDefaultChecked () {
      this.checkedDepatmentKeys.splice(0, 1, this.processList[this.itemIndex].approvalFlowExecutor.departmentsId)
      // this.$set(this.checkedRoleId, this.processList[this.itemIndex].approvalFlowExecutor.rolesId)
      this.checkedRoleId = this.processList[this.itemIndex].approvalFlowExecutor.rolesId
      // this.$set(this.checkedUserId, this.processList[this.itemIndex].approvalFlowExecutor.usersId)
      this.checkedUserId = this.processList[this.itemIndex].approvalFlowExecutor.usersId
      if (this.checkedRoleId) {
        this.activeTab = '2'
      } else if (this.checkedUserId) {
        this.activeTab = '3'
      } else {
        this.activeTab = '1'
      }
    },
    submitTab () {
      this.dialogVisible = false
      switch (this.activeTab) {
        case '1':
          if (this.departmentNode.hasOwnProperty('id')) {
            this.processList[this.itemIndex].approvalFlowExecutor.departmentsNameStr = this.departmentNode.label
            this.processList[this.itemIndex].approvalFlowExecutor.departmentsId = this.departmentNode.id
          }
          this.cleanRoles()
          this.cleanUsers()
          break
        case '2':
          if (this.roleNode.hasOwnProperty('name')) {
            this.processList[this.itemIndex].approvalFlowExecutor.rolesNameStr = this.roleNode.name
            this.processList[this.itemIndex].approvalFlowExecutor.rolesId = this.roleNode.objectId
          }
          this.cleanDepartments()
          this.cleanUsers()
          break
        case '3':
          if (this.userNode.hasOwnProperty('account')) {
            this.processList[this.itemIndex].approvalFlowExecutor.usersNameStr = this.userNode.account
            this.processList[this.itemIndex].approvalFlowExecutor.usersId = this.userNode.objectId
          }
          this.cleanDepartments()
          this.cleanRoles()
          break
      }
    },
    // 清空表单中的角色信息
    cleanRoles () {
      this.processList[this.itemIndex].approvalFlowExecutor.rolesNameStr = ''
      this.processList[this.itemIndex].approvalFlowExecutor.rolesId = ''
    },
    // 清空表单中的部门信息
    cleanDepartments () {
      this.processList[this.itemIndex].approvalFlowExecutor.departmentsNameStr = ''
      this.processList[this.itemIndex].approvalFlowExecutor.departmentsId = ''
    },
    // 清空表单中的用户信息
    cleanUsers () {
      this.processList[this.itemIndex].approvalFlowExecutor.usersNameStr = ''
      this.processList[this.itemIndex].approvalFlowExecutor.usersId = ''
    },
    // 表单提交
    submit () {
      let flag = false
      this.processList.map((item) => {
        if (!item.approvalFlowExecutor.rolesId && !item.approvalFlowExecutor.departmentsId && !item.approvalFlowExecutor.usersId) {
          flag = true
          return flag
        }
      })
      if (flag) {
        this.$message({
          type: 'warning',
          message: '请选择审批人、角色或者部门'
        })
        return
      }
      approvalFlow.approvalFlowListUpdate(this.processList)
    }
  },
  mounted () {
    this.handleApprovalFlowList()
  }
}
</script>

<style scoped>
  .process {
    /*padding: 12px;*/
    /*box-sizing: border-box;*/
    border: 1px solid #dedede;
    border-radius: 10px;
    padding-bottom: 30px;
    margin-bottom: 30px;
  }

  .process .top {
    background-color: #f6f6f6;
    border-top-right-radius: 10px;
    border-top-left-radius: 10px;
    padding: 6px 20px;
    box-sizing: border-box;
    vertical-align: middle;
  }

  .process .content {
    padding-right: 20px;
    padding-left: 20px;
  }

  .top_index {
    display: inline-block;
    width: 16px;
    height: 16px;
    line-height: 16px;
    border-radius: 50%;
    background: #acacac;
    color: white;
    text-align: center;
    vertical-align: middle;
  }

  .top_title {
    color: #acacac;
    vertical-align: middle;
  }

  .top_col {
    height: 40px;
    line-height: 40px;
  }

  .selectbtn {
    border: 1px solid #3f63f6;
    height: 32px;
    padding: 7px 16px;
    float: right;
    color: #3f63f6;
    margin-top: 4px;
    margin-right: 12px;
  }

  .addbutton {
    float: left;
    background: #6582f8;
    border-color: #6582f8;
    margin-bottom: 12px;
  }

  .addbutton span {
    color: #ffffff;
  }

  .submit_btn {
    text-align: center;
  }
</style>
