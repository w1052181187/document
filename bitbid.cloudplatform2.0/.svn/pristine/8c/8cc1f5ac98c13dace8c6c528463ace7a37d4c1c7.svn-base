<template>
  <div class="cloudcontent" id="cloud_customer">
    <div class="topmain">
      <div class="seacher_box advancedsearch_box">
        <el-form :model="queryModel" ref="queryModel" label-width="85px" :validate-on-rule-change="true">
          <el-row :gutter="20">
            <el-col style="width: 320px; float: left;">
              <el-form-item label="客户名称：" prop="messageLike">
                <el-input class="search" v-model="queryModel.messageLike" placeholder="请输入客户名称"></el-input>
              </el-form-item>
            </el-col>
            <el-col style="width: 300px; float: left;"  v-if="!showselect">
              <el-button  type="primary" @click="handlePage(1)">查询</el-button>
              <el-button  @click="reset('queryModel')">重置</el-button>
              <span @click="showselect = true" class="more">展开搜索条件</span>
            </el-col>
          </el-row>
          <div class="advancedsearch" style="padding-top: 0px;" v-if="showselect">
            <el-row>
              <el-col :span="24">
                <el-form-item label="客户价值：" prop="dicValueCodes">
                  <span :class="isValueSelectAll ? 'all selectall': 'all'" @click="conditionCancel('客户价值')">不限</span>
                  <el-checkbox-group v-model="queryModel.dicValueCodes" v-loading="dicCustomerValueLoading" @change="conditionSelect($event, '客户价值')">
                    <el-checkbox v-for="item in dicCustomerValueList" :label="item.name" :key="item.code" >{{item.name}}</el-checkbox>
                  </el-checkbox-group>
                </el-form-item>
              </el-col>
            </el-row>
            <el-row>
              <el-col :span="24">
                <el-form-item label="所属行业：" prop="dicIndustryCodes">
                  <span :class="isIndustrySelectAll ? 'all selectall': 'all'" @click="conditionCancel('所属行业')">不限</span>
                  <el-checkbox-group v-model="queryModel.dicIndustryCodes" v-loading="dicCustomerIndustryLoading"  @change="conditionSelect($event, '所属行业')">
                    <el-checkbox v-for="item in dicCustomerIndustryList" :label="item.name" :key="item.code" >{{item.name}}</el-checkbox>
                  </el-checkbox-group>
                </el-form-item>
              </el-col>
            </el-row>
            <el-row>
              <el-col :span="24">
                <el-form-item label="客户来源：">
                  <span :class="isSourceSelectAll ? 'all selectall': 'all'" @click="conditionCancel('客户来源')">不限</span>
                  <el-checkbox-group v-model="queryModel.source" @change="conditionSelect($event, '客户来源')">
                    <el-checkbox v-for="item in sourceOptions" :label="item.label" :key="item.label">{{item.name}}</el-checkbox>
                  </el-checkbox-group>
                </el-form-item>
              </el-col>
            </el-row>
            <el-row>
              <el-col :span="24">
                <el-form-item label="客户状态：" prop="includeStatus">
                  <span :class="isStatusSelectAll ? 'all selectall': 'all'" @click="conditionCancel('客户状态')">不限</span>
                  <el-checkbox-group v-model="queryModel.includeStatus" @change="conditionSelect($event, '客户状态')">
                    <el-checkbox v-for="item in opportunityStates" :label="item.label" :key="item.label">{{item.name}}</el-checkbox>
                  </el-checkbox-group>
                </el-form-item>
              </el-col>
            </el-row>
            <el-row>
              <el-col :span="24">
                <el-form-item label="创建时间：" style="float: left; margin-right: 20px;">
                  <span :class="isCreateTimeSelectAll ? 'all selectall': 'all'" @click="conditionCancel('创建时间')">不限</span>
                  <el-radio-group v-model="queryModel.createTime" @change="conditionSelect($event, '创建时间')">
                    <el-radio v-for="item in createTimeOption" :label="item.code" :key="item.code" :checked="createTimeFlag">{{item.name}}</el-radio>
                  </el-radio-group>
                </el-form-item>
                <el-date-picker
                  v-model="queryModel.CustomTime"
                  v-if="queryModel.createTime === 6"
                  type="daterange"
                  range-separator="至"
                  start-placeholder="开始日期"
                  end-placeholder="结束日期">
                </el-date-picker>
              </el-col>
            </el-row>
            <el-row>
              <el-col :span="9" class="region">
                <el-form-item label="所在地区：">
                  <el-select v-model="queryModel.region"  @change="getCityNode()" placeholder="请选择">
                    <el-option
                      v-for="item in regionOptions"
                      :key="item.value"
                      :label="item.label"
                      :value="item.value">
                    </el-option>
                  </el-select>
                  <el-select v-model="queryModel.regionTwo" @change="getAreaNode()" placeholder="请选择">
                    <el-option
                      v-for="item in regionTwoOptions"
                      :key="item.value"
                      :label="item.label"
                      :value="item.value">
                    </el-option>
                  </el-select>
                  <el-select v-model="queryModel.regionThree" placeholder="请选择">
                    <el-option
                      v-for="item in regionThreeOptions"
                      :key="item.value"
                      :label="item.label"
                      :value="item.value">
                    </el-option>
                  </el-select>
                </el-form-item>
              </el-col>
            </el-row>
            <el-row>
              <el-col :span="9" class="bigWidth">
                <el-form-item label="负责人：">
                  <el-input v-model="queryModel.userName" placeholder="请选择负责人" readonly>
                    <el-button type="primary" slot="append" @click="showUserDialog">选择</el-button>
                  </el-input>
                </el-form-item>
              </el-col>
              <el-col :span="9" class="bigWidth">
                <el-form-item label="所属部门：">
                  <el-input class="deptInput" v-model="queryModel.departmentName" auto-complete="off" placeholder="请选择" readonly="readonly" clearable @click.native="showDepartmentTree">
                    <i slot="suffix" class="el-input__icon el-icon-arrow-down"></i>
                  </el-input>
                  <tree-options :initData="queryModel.departmentId" @selectSuccess="selectedDepatment" :isShowOptions="isShowDptTree"></tree-options>
                </el-form-item>
              </el-col>
            </el-row>
            <el-row style="text-align: center;">
              <el-col>
                <el-button  type="primary" class="search" @click="handlePage(1)">查询</el-button>
                <el-button  @click="reset('queryModel')">重置</el-button>
                <span @click="showselect = false" class="more">收起搜索条件</span>
              </el-col>
            </el-row>
          </div>
        </el-form>
      </div>
    </div>
    <div class="main">
      <!--按钮-->
      <div class="btnbigbox" v-if="$store.getters.permissions.includes('1040102')">
          <el-button type="primary" class="addbutton" @click="addBtn">
            <span> + 新增</span>
          </el-button>
      </div>
      <!--按钮-->
      <el-table
        :data="tableData"
        border
        v-loading="loading"
        style="width: 100%" header-cell-class-name="tableheader">
        <el-table-column
          type="index"
          label="序号"
          width="60"
          :index="computedIndex"
          align="center">
        </el-table-column>
        <el-table-column
          prop="name"
          label="客户名称"
          width="500"
          :formatter="simpleFormatData"
          show-overflow-tooltip>
        </el-table-column>
        <el-table-column
          prop="dicIndustryCode"
          label="所属行业"
          :formatter="simpleFormatData"
          show-overflow-tooltip>
        </el-table-column>
        <el-table-column
          prop="dicValueCode"
          label="客户价值"
          :formatter="simpleFormatData"
          show-overflow-tooltip>
        </el-table-column>
        <el-table-column
          prop="departmentName"
          label="所在部门"
          :formatter="simpleFormatData"
          show-overflow-tooltip>
        </el-table-column>
        <el-table-column
          prop="chargePersonName"
          label="负责人"
          :formatter="simpleFormatData"
          show-overflow-tooltip>
        </el-table-column>
        <el-table-column
          label="操作" align="center" width="200">
          <template slot-scope="scope">
            <el-button type="text" size="small" @click="lookBtn(scope)">查看</el-button>
            <el-button type="text" size="small" @click="updateBtn(scope)" v-if="$store.getters.permissions.includes('1040102')">修改</el-button>
            <el-button type="text" size="small" @click="followUp(scope)" v-if="$store.getters.permissions.includes('1040102')">跟进</el-button>
            <el-button type="text" size="small" @click="logoff(scope.row.code)" v-if="$store.getters.permissions.includes('1040102')">删除</el-button>
          </template>
        </el-table-column>
      </el-table>
      <!--分页-->
      <el-pagination
        background
        layout="prev, pager, next"
        :total="page.total"
        :page-size='page.pageSize'
        :current-page.sync="page.currentPage"
        @current-change="handlePage"
        @next-click="handlePage">
      </el-pagination>
      <!--分页-->
    </div>
    <select-user-dialog :showVisible="showUserVisible" @selected="selectedUser" @showDialog="showUserDialog"></select-user-dialog>
  </div>
</template>
<script>
import { customer } from '@/api/customer'
import { dataDictionary } from '@/api/system'
import * as region from '@/assets/js/region'
import selectUserDialog from '@/pages/system/users/search_user_radio'
import TreeOptions from '@/pages/system/department/tree/tree_options'
export default {
  components: {
    selectUserDialog,
    TreeOptions
  },
  data () {
    return {
      loading: false,
      page: {
        pageSize: 10,
        pageNo: 0,
        total: 0, // 总条数
        currentPage: 1
      },
      queryModel: {
        enterpriseId: this.$store.getters.authUser.enterpriseId,
        isDelete: 0,
        messageLike: '',
        dicValueCodes: [],
        dicIndustryCodes: [],
        includeStatus: [],
        source: [],
        createTime: '',
        CustomTime: '', // 自定义时间
        region: '',
        regionTwo: '',
        regionThree: ''
      },
      tableData: [],
      // 客户价值字典项Id
      dicCustomerValueId: 10001,
      // 客户行业分类字典项Id
      dicCustomerIndustryId: 10002,
      // 客户价值集合
      dicCustomerValueList: [],
      // 客户行业分类集合
      dicCustomerIndustryList: [],
      dicCustomerValueLoading: true,
      dicCustomerIndustryLoading: true,
      // 高级搜索
      showselect: false,
      // 价值全选
      isValueSelectAll: true,
      // 行业全选
      isIndustrySelectAll: true,
      // 状态全选
      isStatusSelectAll: true,
      opportunityStates: [{
        label: 0,
        name: '已合作'
      }, {
        label: 1,
        name: '未合作'
      }],
      // 来源全选
      isSourceSelectAll: true,
      sourceOptions: [
        {
          label: 0,
          name: '主动咨询'
        }, {
          label: 1,
          name: '业务员开发'
        }, {
          label: 2,
          name: '网络'
        }, {
          label: 4,
          name: '其他'
        }
      ],
      // 创建时间
      isCreateTimeSelectAll: true,
      createTimeOption: [
        {
          name: '近一周',
          code: 1
        },
        {
          name: '近一月',
          code: 2
        },
        {
          name: '近三月',
          code: 3
        },
        {
          name: '近半年',
          code: 4
        },
        {
          name: '近一年',
          code: 5
        },
        {
          name: '自定义',
          code: 6
        }
      ],
      createTimeFlag: true,
      // 所在地区
      regionOptions: region.CityInfo,
      regionTwoOptions: [],
      regionThreeOptions: [],
      // 负责人
      showUserVisible: false,
      // 所属部门
      // 是否展示部门树
      isShowDptTree: false
    }
  },
  methods: {
    // 获取列表数据,稍作延迟
    getTableData () {
      this.loading = true
      this.queryModel.pageNo = this.page.pageNo
      this.queryModel.pageSize = this.page.pageSize
      customer.queryList(this.queryModel).then(res => {
        this.loading = false
        this.tableData = res.data.data.list
        this.page.total = res.data.data.total
      })
    },
    // 客户价值初始化
    initCustomerValue () {
      let query = {
        enterpriseId: this.$store.getters.authUser.enterpriseId,
        dictionaryDirectoryId: this.dicCustomerValueId
      }
      dataDictionary.getDetailList(query).then(res => {
        this.dicCustomerValueLoading = false
        this.dicCustomerValueList = res.data.dictionaryDetails
      })
    },
    // 客户行业分类集合初始化
    initCustomerIndustry () {
      let query = {
        enterpriseId: this.$store.getters.authUser.enterpriseId,
        dictionaryDirectoryId: this.dicCustomerIndustryId
      }
      dataDictionary.getDetailList(query).then(res => {
        this.dicCustomerIndustryLoading = false
        this.dicCustomerIndustryList = res.data.dictionaryDetails
      })
    },
    // 普通格式化数据，空的时候展示"---"
    simpleFormatData (row, col, cellValue) {
      return cellValue || '---'
    },
    // 添加
    addBtn () {
      this.$router.push({path: `/customerMan/customer/add`})
    },
    // 查看
    lookBtn (scope) {
      this.$router.push({path: `/customerMan/customer/detail/${scope.row.code}`})
    },
    // 修改
    updateBtn (scope) {
      this.$router.push({path: `/customerMan/customer/update/${scope.row.objectId}`})
    },
    // 跟进
    followUp (scope) {
      this.$router.push({path: `/customerMan/customer/follow/${scope.row.code}/customer`})
    },
    // 删除
    logoff (code) {
      this.$confirm('确认删除吗?', '提示', {
        confirmButtonText: '确认',
        cancelButtonText: '取消',
        type: 'error'
      }).then(() => {
        customer.logoff(code).then(res => {
          if (res.data.resCode === '0000') {
            this.getTableData()
          }
        })
      }).catch(() => {
        return false
      })
    },
    // 序号计算
    computedIndex (index) {
      return index + (this.page.currentPage - 1) * this.page.pageSize + 1
    },
    // 表单分页
    handlePage (nowNum) {
      this.page.currentPage = nowNum
      this.page.pageNo = (nowNum - 1) * this.page.pageSize
      this.getTableData()
    },
    // 重置
    reset (formName) {
      this.$refs[formName].resetFields()
      this.page.currentPage = 1
      this.page.pageNo = 0
      this.getTableData()
    },
    // 高级搜索-搜索条件选择
    conditionSelect (value, label) {
      switch (label) {
        case '客户价值':
          this.queryModel.dicValueCodes = value
          this.isValueSelectAll = false
          break
        case '所属行业':
          this.queryModel.dicIndustryCodes = value
          this.isIndustrySelectAll = false
          break
        case '客户来源':
          this.queryModel.source = value
          this.isSourceSelectAll = false
          break
        case '客户状态':
          this.queryModel.includeStatus = value
          this.isStatusSelectAll = false
          break
        case '创建时间':
          this.queryModel.createTime = value
          this.isCreateTimeSelectAll = false
          break
        default:
          break
      }
    },
    // 高级搜索-取消条件
    conditionCancel (label) {
      switch (label) {
        case '客户价值':
          this.queryModel.dicValueCodes = []
          this.isValueSelectAll = true
          break
        case '所属行业':
          this.queryModel.dicIndustryCodes = []
          this.isIndustrySelectAll = true
          break
        case '客户来源':
          this.queryModel.source = []
          this.isSourceSelectAll = true
          break
        case '客户状态':
          this.queryModel.includeStatus = []
          this.isStatusSelectAll = true
          break
        case '创建时间':
          this.createTimeFlag = false
          this.queryModel.createTime = null
          this.isCreateTimeSelectAll = true
          break
        default:
          break
      }
    },
    // 所在地区 3级联动  获取市信息
    getCityNode () {
      this.queryModel.regionTwo = ''
      this.queryModel.regionThree = ''
      this.regionOptions.map((item) => {
        if (item.value === this.queryModel.region) {
          this.regionTwoOptions = item.children
        }
      })
    },
    // 所在地区 3级联动  获取区信息
    getAreaNode () {
      this.queryModel.regionThree = ''
      this.regionOptions.map((item) => {
        if (item.value === this.queryModel.region) {
          item.children.map((ite) => {
            if (ite.value === this.queryModel.regionTwo) {
              this.regionThreeOptions = ite.children
            }
          })
        }
      })
    },
    // 负责人 - 选择用户
    selectedUser (obj) {
      this.queryModel.userName = obj.name
      // this.addForm.tendererCode = obj.code
      // this.addForm.tendererName = obj.name
      // this.addForm.customerManagementCode = obj.code
      // this.addForm.tendererUnitAddress = this.wrapRegionText(obj)
    },
    // 选择人员弹框打开
    showUserDialog () {
      this.showUserVisible = !this.showUserVisible
    },
    // 部门树展开/关闭
    showDepartmentTree () {
      this.isShowDptTree = !this.isShowDptTree
    },
    // 选择部门
    selectedDepatment (deptTreeNode) {
      this.queryModel.departmentName = deptTreeNode.label
      this.queryModel.departmentId = deptTreeNode.id
      this.isShowDptTree = false
    }
  },
  mounted () {
    // 客户价值初始化
    this.initCustomerValue()
    // 客户行业分类初始化
    this.initCustomerIndustry()
    // 列表初始化
    this.getTableData()
  }
}
</script>
<style lang="less">
  #cloud_customer {
    .tabletitles{
      background:#f7f8fa!important;
    }
    .main{
      margin: 0px;
    }
  }
</style>
