<template>
  <div class="cloudcontent"  id="cloud_myTemplate">
    <div class="topmain">
      <div class="seacher_box advancedsearch_box">
        <el-form :model="searchForm" ref="searchForm" label-width="85px" :validate-on-rule-change="true">
          <el-row :gutter="20">
            <el-col :span="24">
              <el-form-item label="模板类型：">
                <span :class="isTemTypeSelectAll ? 'all selectall' : 'all'" @click="conditionCancel('模板类型')">不限</span>
                <el-radio-group v-model="searchForm.typeList" @change="conditionSelect($event)">
                  <el-radio v-for="item in temTypeList" :label="item.value" :key="item.value" >{{item.label}}</el-radio>
                </el-radio-group>
              </el-form-item>
            </el-col>
          </el-row>
          <el-row>
            <el-col style="width: 320px; float: left;">
              <el-form-item label="模板名称：" prop="messageLike">
                <el-input class="search" v-model="searchForm.messageLike" placeholder="请输入模板名称"></el-input>
              </el-form-item>
            </el-col>
            <el-col style="width: 320px; float: left;">
              <el-form-item label="模板状态：" prop="status">
                <el-select v-model="searchForm.status" placeholder="请选择">
                  <el-option
                    v-for="item in temStatusOptions"
                    :key="item.value"
                    :label="item.label"
                    :value="item.value">
                  </el-option>
                </el-select>
              </el-form-item>
            </el-col>
            <el-col style="width: 160px; float: left;">
              <el-button  type="primary" @click="search('searchForm')">查询</el-button>
              <el-button  @click="reset('searchForm')">重置</el-button>
            </el-col>
          </el-row>
        </el-form>
      </div>
    </div>
    <div class="main">
      <!--按钮-->
      <div class="btnbigbox">
        <el-button type="primary" class="addbutton" @click="addBtn">
          <span> + 新增模板</span>
        </el-button>
      </div>
      <!--按钮-->
      <el-table
        :data="tableData"
        border
        style="width: 100%" header-cell-class-name="tableheader">
        <el-table-column
          type="index"
          label="序号"
          width="60"
          :index="indexMethod"
          align="center">
        </el-table-column>
        <el-table-column
          prop="type"
          label="模板类型"
          width="120"
          :formatter="simpleFormatData"
          show-overflow-tooltip>
          <template slot-scope="scope">
            <span v-if="scope.row.type === 1">工作审批</span>
            <span v-if="scope.row.type === 2">工作日志</span>
            <span v-if="scope.row.type === 3">计划总结</span>
          </template>
        </el-table-column>
        <el-table-column
          prop="name"
          label="模板名称"
          :formatter="simpleFormatData"
          show-overflow-tooltip>
        </el-table-column>
        <el-table-column
          prop="creatorName"
          label="创建人"
          width="120"
          :formatter="simpleFormatData"
          show-overflow-tooltip>
        </el-table-column>
        <el-table-column
          prop="createDate"
          label="创建时间"
          width="160"
          :formatter="formatDate"
          show-overflow-tooltip>
        </el-table-column>
        <el-table-column
          prop="status"
          label="模板状态"
          width="120"
          :formatter="filterStatus"
          show-overflow-tooltip>
          <template slot-scope="scope">
            <span v-if="scope.row.status === 1">待发布</span>
            <span v-if="scope.row.status === 2">已发布</span>
            <span v-if="scope.row.status === 3">取消发布</span>
          </template>
        </el-table-column>
        <el-table-column
          prop="isShare"
          label="共享"
          width="80"
          show-overflow-tooltip>
          <template slot-scope="scope">
            <el-switch
              @change="changeSwitch(scope.row)"
              v-model="scope.row.isShare"
              active-color="#3bb072"
              inactive-color="#bbbbbb"
              :active-value="1"
              :inactive-value="0"
            >
            </el-switch>
          </template>
        </el-table-column>
        <el-table-column
          label="操作" align="center" width="220">
          <template slot-scope="scope">
            <el-button type="text" size="small" @click="handleClickEvent(scope, '预览')">预览</el-button>
            <el-button type="text" size="small" @click="handleClickEvent(scope, '编辑')" v-if="scope.row.status !==2">编辑</el-button>
            <el-button type="text" size="small" @click="handleClickEvent(scope, '删除')" v-if="scope.row.status !==2">删除</el-button>
            <el-button type="text" size="small" v-if="scope.row.status === 1 || scope.row.status === 3" @click="handleClickEvent(scope, '发布')">发布</el-button>
            <el-button type="text" size="small" v-if="scope.row.status === 2" @click="handleClickEvent(scope, '取消发布')">取消发布</el-button>
          </template>
        </el-table-column>
      </el-table>
      <!--分页-->
      <el-pagination
        background
        layout="prev, pager, next"
        :total="total"
        :page-size='pageSize'
        :current-page.sync="currentPage"
        @current-change="handleCurrentChange"
        @next-click="handleCurrentNext">
      </el-pagination>
      <!--分页-->
    </div>
    <el-dialog
      title="共享"
      :visible.sync="dialogVisible"
      width="450px">
      <span>提示：共享后平台内所有企业都可选用该模板，确认共享吗？</span>
      <span style="margin-top: 20px"><el-checkbox v-model="anonymousShare">匿名分享</el-checkbox></span>
      <span slot="footer" class="dialog-footer">
        <el-button @click="anonymousShareBtn('cancel')">取 消</el-button>
        <el-button type="primary" @click="anonymousShareBtn('submit')">确 定</el-button>
      </span>
    </el-dialog>
  </div>
</template>
<script>
import {dateFormat} from '@/assets/js/common'
import {templateInfo} from '@/api/system'
export default {
  components: {
  },
  data () {
    return {
      searchForm: {
        typeList: [],
        messageLike: '',
        status: ''
      },
      temTypeList: [
        {
          value: 1,
          label: '工作审批'
        },
        {
          value: 2,
          label: '工作日志'
        },
        {
          value: 3,
          label: '计划总结'
        }
      ],
      temStatusOptions: [
        {
          value: 1,
          label: '待发布'
        },
        {
          value: 2,
          label: '已发布'
        },
        {
          value: 3,
          label: '取消发布'
        }
      ],
      tableData: [],
      // 当前页
      currentPage: 1,
      pageNo: 0,
      total: 0, // 总条数
      pageSize: 10, // 每页展示条数
      isTemTypeSelectAll: true,
      // 确认分享弹窗
      dialogVisible: false,
      anonymousShare: false,
      currentClickRow: {} // 当前操作行
    }
  },
  created () {
    this.getTableData()
  },
  methods: {
    /** 匿名共享操作 */
    anonymousShareBtn (operation) {
      if (Object.is(operation, 'submit')) {
        if (this.currentClickRow) {
          this.currentClickRow.isAnonymous = this.anonymousShare ? 0 : 1
          this.currentClickRow.enterpriseName = this.anonymousShare ? '匿名' : this.$store.getters.authUser.enterpriseName
          templateInfo.updateShareStatus(this.currentClickRow).then((res) => {
            if (res.data.resCode === '0000') {
              this.dialogVisible = false
              this.getTableData()
            }
          })
        }
      } else if (Object.is(operation, 'cancel')) {
        this.dialogVisible = false
        this.getTableData()
      }
    },
    conditionSelect (value) {
      if (value) {
        this.isTemTypeSelectAll = false
      }
    },
    filterStatus (row, column) {
      if (row.status === 1) {
        return '待发布'
      } else if (row.status === 2) {
        return '已发布'
      } else if (row.status === 3) {
        return '取消发布'
      }
    },
    /** 获取列表数据 */
    getTableData () {
      let query = {
        pageNo: this.pageNo,
        pageSize: this.pageSize,
        enterpriseId: this.$store.getters.authUser.enterpriseId
      }
      if (this.searchForm.messageLike) {
        query.messageLike = this.searchForm.messageLike
      }
      if (this.searchForm.typeList) {
        query.typeList = this.searchForm.typeList
      }
      if (this.searchForm.status) {
        query.status = this.searchForm.status
      }
      templateInfo.getList(query).then((res) => {
        if (res.data.templateInfoList && res.data.templateInfoList.list) {
          this.tableData = res.data.templateInfoList.list
          this.total = res.data.templateInfoList.total
        }
      })
    },
    // 修改共享信息
    changeSwitch (row) {
      this.currentClickRow = row
      if (row.isShare === 1) {
        this.dialogVisible = true
      } else {
        this.dialogVisible = false
        templateInfo.updateShareStatus(this.currentClickRow).then((res) => {
          if (res.data.resCode === '0000') {
            this.getTableData()
          }
        })
      }
    },
    // 查询
    search () {
      this.pageNo = 0
      this.pageSize = 10
      this.currentPage = 1
      this.total = 0
      this.getTableData()
    },
    // 重置
    reset () {
      this.$refs['searchForm'].resetFields()
      this.searchForm.typeList = []
      this.isTemTypeSelectAll = true
      this.search()
    },
    // 搜索条件 点击不限
    conditionCancel (label) {
      switch (label) {
        case '模板类型':
          this.searchForm.typeList = []
          this.isTemTypeSelectAll = true
          this.search()
          break
        default:
          break
      }
    },
    // 新增
    addBtn () {
      this.$router.push({path: `/system/template/add`})
    },
    // 表格序号
    indexMethod (index) {
      return index + (this.currentPage - 1) * 10 + 1
    },
    // 表格分页
    handleCurrentChange (nowNum) {
      this.currentPage = nowNum
      this.pageNo = (nowNum - 1) * this.pageSize
      this.getTableData(parseInt(this.pageNo), parseInt(this.pageSize))
    },
    handleCurrentNext (nowNum) {
      this.currentPage = nowNum
      this.pageNo = (nowNum - 1) * this.pageSize
      this.getTableData(parseInt(this.pageNo), parseInt(this.pageSize))
    },
    // 格式化时间
    formatDate (row, col, cellValue) {
      return cellValue ? dateFormat(cellValue, 'yyyy-MM-dd') : '---'
    },
    // 普通格式化数据，空的时候展示"---"
    simpleFormatData (row, col, cellValue) {
      return cellValue || '---'
    },
    handleClickEvent (scope, type) {
      switch (type) {
        case '预览':
          sessionStorage.setItem('detailOperation', false)
          this.$router.push({path: `/system/template/detail/${scope.row.code}`})
          break
        case '编辑':
          this.$router.push({path: `/system/template/update`, query: {code: scope.row.code}})
          break
        case '删除':
          this.delBtn(scope)
          break
        case '发布':
          this.updateTemplateStatus(scope, '发布')
          break
        case '取消发布':
          this.updateTemplateStatus(scope, '取消发布')
          break
        default:
          break
      }
    },
    /** 修改发布状态 */
    updateTemplateStatus (scope, operation) {
      if (Object.is(operation, '发布')) {
        scope.row.status = 2
      } else if (Object.is(operation, '取消发布')) {
        scope.row.status = 3
      }
      templateInfo.updateStatus(scope.row).then((res) => {
        if (res.data.resCode === '0000') {
          this.getTableData()
        }
      })
    },
    // 删除
    delBtn (scope) {
      this.$confirm('确认删除吗?', '提示', {
        confirmButtonText: '确定',
        cancelButtonText: '取消',
        type: 'error'
      }).then(() => {
        templateInfo.delete(scope.row.objectId).then((res) => {
          if (res.data.resCode === '0000') {
            this.getTableData()
          }
        })
      }).catch(() => {
        return false
      })
    }
  },
  computed: {
    /* isTemTypeSelectAll () {
      return !this.searchForm.typeList.length
    } */
  },
  mounted () {
  }
}
</script>
<style lang="less">
  #cloud_myTemplate{
  }
</style>
