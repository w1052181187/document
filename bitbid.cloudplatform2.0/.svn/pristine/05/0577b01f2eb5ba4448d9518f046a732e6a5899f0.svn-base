<template>
  <div class="cloudcontent">
    <div class="main">
      <el-form :model="updateForm" label-width="200px" :rules="rules"  ref= "updateForm" :validate-on-rule-change="true">
        <el-row>
          <el-col :span="12">
            <el-form-item label="项目名称："  prop="tenderProjectName">
              <el-input v-model="updateForm.tenderProjectName" disabled></el-input>
            </el-form-item>
          </el-col>
          <el-col :span="12">
            <el-form-item label="项目编号："  prop="tenderProjectCode">
              <el-input v-model="updateForm.tenderProjectCode" disabled></el-input>
            </el-form-item>
          </el-col>
        </el-row>
        <!--<el-row>-->
          <!--<el-col :span="12">-->
            <!--<el-form-item label="标段名称："  prop="bidSectionName">-->
              <!--<el-input v-model="updateForm.currentBidSectionName" disabled></el-input>-->
            <!--</el-form-item>-->
          <!--</el-col>-->
          <!--<el-col :span="12">-->
            <!--<el-form-item label="标段编号："  prop="bidSectionCode">-->
              <!--<el-input v-model="updateForm.currentBidSectionCode" disabled></el-input>-->
            <!--</el-form-item>-->
          <!--</el-col>-->
        <!--</el-row>-->
        <el-row>
          <el-col :span="12">
            <el-form-item label="更正公告名称："  prop="title">
              <el-input v-model="updateForm.title"></el-input>
            </el-form-item>
          </el-col>
          <el-col :span="12">
            <el-form-item label="递交投标文件方法："  prop="bidDocReferMethod">
              <el-input v-model="updateForm.bidDocReferMethod"></el-input>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row v-if="Number(updateForm.isSignUp) !== 0">
          <el-col :span="12">
            <el-form-item label="报名开始时间：" prop="signUpBeginTime">
              <el-date-picker
                v-model="updateForm.signUpBeginTime"
                value-format="yyyy-MM-dd HH:mm:ss"
                type="datetime"
                start-placeholder="选择日期时间"
                @change="changeTime(updateForm.signUpBeginTime, 2)">
              </el-date-picker>
            </el-form-item>
          </el-col>
          <el-col :span="12">
            <el-form-item label="报名截止时间：" prop="signUpEndTime">
              <el-date-picker
                v-model="updateForm.signUpEndTime"
                value-format="yyyy-MM-dd HH:mm:ss"
                type="datetime"
                start-placeholder="选择日期时间"
                @change="changeTime(updateForm.signUpEndTime, 3)">
              </el-date-picker>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row>
          <el-col :span="12">
            <el-form-item label="公告结束时间：" prop="announcementEndTime">
              <el-date-picker
                v-model="updateForm.announcementEndTime"
                value-format="yyyy-MM-dd HH:mm:ss"
                type="datetime"
                start-placeholder="选择日期时间"
                @change="changeTime(updateForm.announcementEndTime, 1)">
              </el-date-picker>
            </el-form-item>
          </el-col>
          <el-col :span="12" v-if="updateForm.bidOpeningTime">
            <el-form-item label="招标文件获取开始时间：" prop="biddingDocsBeginTime">
              <el-date-picker
                v-model="updateForm.biddingDocsBeginTime"
                value-format="yyyy-MM-dd HH:mm:ss"
                type="datetime"
                start-placeholder="选择日期时间"
                @change="changeTime(updateForm.biddingDocsBeginTime, 4)">
              </el-date-picker>
            </el-form-item>
          </el-col>
          <el-col :span="12" v-if="!updateForm.bidOpeningTime">
            <el-form-item label="资格预审文件获取开始时间：" prop="prequalificationDocsBeginTime">
              <el-date-picker
                v-model="updateForm.prequalificationDocsBeginTime"
                value-format="yyyy-MM-dd HH:mm:ss"
                type="datetime"
                start-placeholder="选择日期时间"
                @change="changeTime(updateForm.prequalificationDocsBeginTime, 6)">
              </el-date-picker>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row>
          <el-col :span="12" v-if="updateForm.bidOpeningTime">
            <el-form-item label="招标文件获取截止时间：" prop="biddingDocsEndTime">
              <el-date-picker
                v-model="updateForm.biddingDocsEndTime"
                value-format="yyyy-MM-dd HH:mm:ss"
                type="datetime"
                start-placeholder="选择日期时间"
                @change="changeTime(updateForm.biddingDocsEndTime, 5)">
              </el-date-picker>
            </el-form-item>
          </el-col>
          <el-col :span="12" v-if="!updateForm.bidOpeningTime">
            <el-form-item label="资格预审文件获取截止时间：" prop="prequalificationDocsEndTime">
              <el-date-picker
                v-model="updateForm.prequalificationDocsEndTime"
                value-format="yyyy-MM-dd HH:mm:ss"
                type="datetime"
                start-placeholder="选择日期时间"
                @change="changeTime(updateForm.prequalificationDocsEndTime, 7)">
              </el-date-picker>
            </el-form-item>
          </el-col>
          <el-col :span="12" v-if="updateForm.bidOpeningTime">
            <el-form-item label="开标时间：" prop="bidOpeningTime">
              <el-date-picker
                v-model="updateForm.bidOpeningTime"
                value-format="yyyy-MM-dd HH:mm:ss"
                type="datetime"
                start-placeholder="选择日期时间"
                @change="changeTime(updateForm.bidOpeningTime, 8)">
              </el-date-picker>
            </el-form-item>
          </el-col>
          <el-col :span="12" v-if="!updateForm.bidOpeningTime">
            <el-form-item label="资格预审会时间：" prop="prequalificationTime">
              <el-date-picker
                v-model="updateForm.prequalificationTime"
                value-format="yyyy-MM-dd HH:mm:ss"
                type="datetime"
                start-placeholder="选择日期时间"
                @change="changeTime(updateForm.prequalificationTime, 8)">
              </el-date-picker>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row>
          <el-col :span="12" v-if="updateForm.bidOpeningTime">
            <el-form-item label="开标地点：" prop="bidOpeningAddress">
              <el-input v-model="updateForm.bidOpeningAddress"></el-input>
            </el-form-item>
          </el-col>
          <el-col :span="12" v-if="!updateForm.bidOpeningTime">
            <el-form-item label="资格预审会地点：" prop="prequalificationAddress">
              <el-input v-model="updateForm.prequalificationAddress"></el-input>
            </el-form-item>
          </el-col>
          <el-col :span="12">
            <el-form-item label="公告链接：">
              <el-input v-model="updateForm.bulletinUrl"></el-input>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row>
          <el-col :span="12">
            <el-form-item label="发布网站：">
              <el-input v-model="updateForm.publishUrl"></el-input>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row>
          <el-col :span="24">
            <el-form-item label="标段信息：" class="bitianicon">
              <el-table
                ref="multipleTable"
                :data="bidSectionList"
                border
                style="width: 100%" header-cell-class-name="tableheader"
                @selection-change="handleSelectionChange"
                :row-key="getRowKeys">
                <el-table-column
                  type="selection"
                  prop="objectId"
                  :reserve-selection="true"
                  width="50">
                </el-table-column>
                <el-table-column
                  prop="bidSectionCode"
                  label="标段编号"
                  show-overflow-tooltip>
                </el-table-column>
                <el-table-column
                  prop="bidSectionName"
                  label="标段名称"
                  show-overflow-tooltip>
                </el-table-column>
              </el-table>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row>
          <el-col :span="24" class="ueditor_box">
            <el-form-item label="公告内容：" class="bitianicon">
              <editor ref="ueditor" class="ueditor" :editread="editread" :content="content"></editor>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row>
          <el-col :span="24">
            <el-form-item label="附件：">
              <upload-file @uploadSuccess="uploadOtherSuccess" @deleteSuccess="deleteSuccess"
                           :fileArrays="updateForm.fileInformationList"
                           fileType="9"
                           isImage="0"
                           fileMaxNum="1">
              </upload-file>
            </el-form-item>
          </el-col>
        </el-row>
        <el-form-item class="submit-radio">
          <el-button type="primary" @click="handleClickEvent('updateForm','save')" :loading="loading">保存</el-button>
          <el-button type="primary" class="submitBtn" @click="handleClickEvent('updateForm','submit')" :loading="loading">提交</el-button>
          <el-button class="cancal" @click="handleClickEvent('updateForm','cancel')">取消</el-button>
        </el-form-item>
      </el-form>
      <submitApproveDialog :flowStatus="flowStatus" :tenderSystemCode="updateForm.tenderSystemCode" :showVisible="approveDialogVisable" @confirmSubmit="confirmSubmit" @handleCancel="cancelApprove"></submitApproveDialog>
    </div>
  </div>
</template>

<script>
import editor from '@/components/ueditor/ueditor.vue'
import uploadFile from '@/components/upload/publicFileUpload'
import {bulletinInfo} from '@/api/project/index'
import submitApproveDialog from '@/pages/project/commonCompents/submitApproveDialog'
import {dateFormat} from '@/assets/js/common'
export default {
  components: {
    editor,
    uploadFile,
    submitApproveDialog
  },
  data () {
    return {
      flowStatus: 3,
      loading: false,
      updateForm: {
        tenderProjectName: '',
        fileInformationList: [],
        bidSectionList: [],
        bidOpeningTime: '',
        bidOpeningAddress: '',
        prequalificationTime: '',
        prequalificationAddress: '',
        approvalFlowExecutorList: [],
        noticeList: [],
        announcementEndTime: '',
        signUpBeginTime: '',
        signUpEndTime: '',
        biddingDocsBeginTime: '',
        biddingDocsEndTime: '',
        prequalificationDocsBeginTime: '',
        prequalificationDocsEndTime: ''
      },
      rules: {
        title: [
          { required: true, message: '公告名称不能为空', trigger: ['blur', 'change'] }
        ],
        bidDocReferMethod: [
          { required: true, message: '递交投标文件方法不能为空', trigger: ['blur', 'change'] }
        ],
        bidSectionList: [
          { required: true, message: '请选择标段', trigger: ['blur', 'change'] }
        ],
        content: [
          {required: true, message: '公告内容不能为空', trigger: ['blur', 'change']}
        ],
        bidOpeningTime: [
          {required: true, message: '开标时间不能为空', trigger: ['blur', 'change']}
        ],
        bidOpeningAddress: [
          {required: true, message: '开标地点不能为空', trigger: ['blur', 'change']}
        ],
        prequalificationTime: [
          {required: true, message: '资格预审会时间不能为空', trigger: ['blur', 'change']}
        ],
        prequalificationAddress: [
          {required: true, message: '资格预审会地点不能为空', trigger: ['blur', 'change']}
        ],
        announcementEndTime: [
          {required: true, message: '公告结束时间不能为空', trigger: ['blur', 'change']}
        ],
        isSignUp: [
          {required: true, message: '请选择是否需要报名信息', trigger: ['blur', 'change']}
        ],
        signUpBeginTime: [
          {required: true, message: '报名开始时间不能为空', trigger: ['blur', 'change']}
        ],
        signUpEndTime: [
          {required: true, message: '报名截止时间不能为空', trigger: ['blur', 'change']}
        ],
        biddingDocsBeginTime: [
          {required: true, message: '招标文件获取开始时间不能为空', trigger: ['blur', 'change']}
        ],
        biddingDocsEndTime: [
          {required: true, message: '招标文件获取截止时间不能为空', trigger: ['blur', 'change']}
        ],
        prequalificationDocsBeginTime: [
          {required: true, message: '资格预审文件获取开始时间不能为空', trigger: ['blur', 'change']}
        ],
        prequalificationDocsEndTime: [
          {required: true, message: '资格预审文件获取截止时间不能为空', trigger: ['blur', 'change']}
        ]
      },
      // 富文本
      editread: false,
      content: '',
      noticeList: [],
      sectionList: [],
      bidSectionList: [],
      approveDialogVisable: false
    }
  },
  watch: {
    '$route': 'getChooseBulletinInfoInfo'
  },
  created () {
    this.getChooseBulletinInfoInfo()
  },
  methods: {
    /** 时间的判断 */
    changeTime (data, val) {
      // 1.公告结束时间：大于当前时间
      // 2.报名开始时间：大于等于当前时间，小于报名截止时间
      // 3.报名截止时间：报名开始时间不为空时，大于报名开始时间；报名开始时间为空时，大于当前时间
      // 4.招标文件获取开始时间: 报名开始时间不为空时，大于报名开始时间；报名开始时间为空时，大于等于当前时间
      // 5.招标文件获取截止时间: 招标文件获取开始时间不为空时，大于招标文件获取开始时间；招标文件获取开始时间为空时，大于报名开始时间（报名开始时间为空时，大于等于当前时间）
      // 6.资格预审文件获取开始时间: 报名开始时间不为空时，大于报名开始时间；报名开始时间为空时，大于等于当前时间
      // 7.资格预审文件获取截止时间: 资格预审文件获取开始时间不为空时，大于资格预审文件获取开始时间；资格预审文件获取开始时间为空时，大于报名开始时间（报名开始时间为空时，大于等于当前时间）
      // 8.开标时间：招标文件/资格预审文件获取截止时间不为空时，大于招标文件/资格预审文件获取截止时间；
      //             招标文件/资格预审文件获取截止时间为空时，大于招标文件/资格预审文件获取开始时间（招标文件/资格预审文件获取开始时间为空时，大于报名开始时间（报名开始时间为空时，大于等于当前时间））
      let inputDate = dateFormat(data, 'yyyyMMddhhmmss')
      let currentDate = dateFormat(new Date(), 'yyyyMMddhhmmss')
      let flag = true
      let msg = ''
      switch (val) {
        case 1:
          if (inputDate <= currentDate) {
            flag = false
            msg = '公告结束时间必须大于当前时间'
          }
          break
        case 2:
          let signUpEndDate = dateFormat(this.updateForm.signUpEndTime, 'yyyyMMddhhmmss')
          if (inputDate < currentDate) {
            flag = false
            msg = '报名开始时间不能小于当前时间'
          } else {
            if (signUpEndDate && (signUpEndDate !== '' || signUpEndDate !== null)) {
              if (inputDate >= signUpEndDate) {
                flag = false
                msg = '报名开始时间必须小于报名截止时间'
              }
            }
          }
          break
        case 3:
          let signUpBeginDate = dateFormat(this.updateForm.signUpBeginTime, 'yyyyMMddhhmmss')
          if (signUpBeginDate && (signUpBeginDate !== '' || signUpBeginDate !== null)) {
            if (inputDate <= signUpBeginDate) {
              flag = false
              msg = '报名截止时间必须大于报名开始时间'
            }
          } else {
            if (inputDate < currentDate) {
              flag = false
              msg = '报名截止时间不能小于当前时间'
            }
          }
          break
        case 4:
          signUpBeginDate = dateFormat(this.updateForm.signUpBeginTime, 'yyyyMMddhhmmss')
          if (signUpBeginDate && (signUpBeginDate !== '' || signUpBeginDate !== null)) {
            if (inputDate <= signUpBeginDate) {
              flag = false
              msg = '招标文件获取开始时间必须大于报名开始时间'
            }
          } else {
            if (inputDate < currentDate) {
              flag = false
              msg = '招标文件获取开始时间不能小于当前时间'
            }
          }
          break
        case 5:
          let docsBeginDate = dateFormat(this.updateForm.biddingDocsBeginTime, 'yyyyMMddhhmmss')
          if (docsBeginDate && (docsBeginDate !== '' || docsBeginDate !== null)) {
            if (inputDate <= docsBeginDate) {
              flag = false
              msg = '招标文件获取截止时间必须大于招标文件获取开始时间'
            }
          } else {
            signUpBeginDate = dateFormat(this.updateForm.signUpBeginTime, 'yyyyMMddhhmmss')
            if (signUpBeginDate && (signUpBeginDate !== '' || signUpBeginDate !== null)) {
              if (inputDate <= signUpBeginDate) {
                flag = false
                msg = '在招标文件获取开始时间不存在的时候，招标文件获取截止时间必须大于报名开始时间'
              }
            } else {
              if (inputDate < currentDate) {
                flag = false
                msg = '在招标文件获取开始时间、报名开始时间不存在的时候，招标文件获取开始时间不能小于当前时间'
              }
            }
          }
          break
        case 6:
          signUpBeginDate = dateFormat(this.updateForm.signUpBeginTime, 'yyyyMMddhhmmss')
          if (signUpBeginDate && (signUpBeginDate !== '' || signUpBeginDate !== null)) {
            if (inputDate <= signUpBeginDate) {
              flag = false
              msg = '资格预审文件获取开始时间必须大于报名开始时间'
            }
          } else {
            if (inputDate < currentDate) {
              flag = false
              msg = '资格预审文件获取开始时间不能小于当前时间'
            }
          }
          break
        case 7:
          docsBeginDate = dateFormat(this.updateForm.prequalificationDocsBeginTime, 'yyyyMMddhhmmss')
          if (docsBeginDate && (docsBeginDate !== '' || docsBeginDate !== null)) {
            if (inputDate <= docsBeginDate) {
              flag = false
              msg = '资格预审文件获取截止时间必须大于资格预审文件获取开始时间'
            }
          } else {
            signUpBeginDate = dateFormat(this.updateForm.signUpBeginTime, 'yyyyMMddhhmmss')
            if (signUpBeginDate && (signUpBeginDate !== '' || signUpBeginDate !== null)) {
              if (inputDate <= signUpBeginDate) {
                flag = false
                msg = '在资格预审文件获取开始时间不存在的时候，资格预审文件获取截止时间必须大于报名开始时间'
              }
            } else {
              if (inputDate < currentDate) {
                flag = false
                msg = '在资格预审文件获取开始时间、报名开始时间不存在的时候，资格预审文件获取开始时间不能小于当前时间'
              }
            }
          }
          break
        case 8:
          let docsEndDate = ''
          if (this.updateForm.type === 1) { // 招标文件
            docsEndDate = dateFormat(this.updateForm.biddingDocsEndTime, 'yyyyMMddhhmmss')
          } else if (this.updateForm.type === 2) { // 资格预审文件
            docsEndDate = dateFormat(this.updateForm.prequalificationDocsEndTime, 'yyyyMMddhhmmss')
          }
          if (docsEndDate && (docsEndDate !== '' || docsEndDate !== null)) {
            if (inputDate <= docsEndDate) {
              flag = false
              msg = this.updateForm.type === 1 ? '开标时间必须大于招标文件获取截止时间' : '资格预审会时间必须大于资格预审文件获取截止时间'
            }
          } else {
            if (this.updateForm.type === 1) { // 招标文件
              docsBeginDate = dateFormat(this.updateForm.biddingDocsBeginTime, 'yyyyMMddhhmmss')
            } else if (this.updateForm.type === 2) { // 资格预审文件
              docsBeginDate = dateFormat(this.updateForm.prequalificationDocsBeginTime, 'yyyyMMddhhmmss')
            }
            if (docsBeginDate && (docsBeginDate !== '' || docsBeginDate !== null)) {
              if (inputDate <= docsBeginDate) {
                flag = false
                msg = this.updateForm.type === 1 ? '在招标文件获取截止时间不存在的时候，开标时间必须大于招标文件获取开始时间' : '在资格预审文件获取截止时间不存在的时候，资格预审会时间必须大于资格预审文件获取开始时间'
              }
            } else {
              signUpBeginDate = dateFormat(this.updateForm.signUpBeginTime, 'yyyyMMddhhmmss')
              if (signUpBeginDate && (signUpBeginDate !== '' || signUpBeginDate !== null)) {
                if (inputDate <= signUpBeginDate) {
                  flag = false
                  msg = this.updateForm.type === 1 ? '在招标文件获取开始时间、招标文件获取截止时间不存在的时候，开标时间必须大于报名开始时间' : '在资格预审文件获取开始时间、资格预审文件获取截止时间不存在的时候，资格预审会时间必须大于报名开始时间'
                }
              } else {
                if (inputDate < currentDate) {
                  flag = false
                  msg = this.updateForm.type === 1 ? '在招标文件获取开始时间、招标文件获取截止时间、报名开始时间不存在的时候，开标时间不能小于当前时间' : '在资格预审文件获取开始时间、资格预审文件获取截止时间、报名开始时间不存在的时候，资格预审会时间不能小于当前时间'
                }
              }
            }
          }
          break
      }
      if (!flag) {
        this.$message({
          message: msg,
          type: 'warning'
        })
        return false
      }
    },
    /** 获取当前公告信息 */
    getChooseBulletinInfoInfo () {
      bulletinInfo.getOneByRelatedCode(this.$route.query.code, this.$route.query.sectionSystemCode).then((res) => {
        if (res.data.bulletinInfo) {
          this.updateForm = res.data.bulletinInfo
          // 获取文本编辑器的内容
          if (this.updateForm.content) {
            this.$refs.ueditor.setContent(this.content = this.updateForm.content)
          }
          // 设置标段信息
          this.bidSectionList = res.data.chooseBidSectionList
          // 给已选择的标段设置值
          this.toggleSelection(this.bidSectionList)
          // 设置附件信息
          if (this.updateForm.fileInformationList.length > 0) {
            this.updateForm.fileInformationList.forEach(item => {
              item.objectId = null
            })
          }
        }
      })
    },
    /** 弹窗-标段的默认选择 */
    toggleSelection (rows) {
      if (rows) {
        rows.forEach(row => {
          this.$refs.multipleTable.toggleRowSelection(row, true)
        })
      } else {
        this.$refs.multipleTable.clearSelection()
      }
    },
    // 获取row的key值
    getRowKeys (row) {
      return row.objectId
    },
    // 上传附件
    uploadOtherSuccess (file) {
      this.updateForm.fileInformationList.push(file)
    },
    deleteSuccess (fileId) {
      this.updateForm.fileInformationList = this.updateForm.fileInformationList.filter(item => item.relativePath !== fileId)
    },
    validLinks (str) {
      const reg = /^http(s)?:\/\/([\w-]+\.)+[\w-]+(\/[\w- ./?%&=]*)?$/
      return reg.test(str)
    },
    /* 按钮点击事件：提交、保存、取消 */
    handleClickEvent (formName, type) {
      if (Object.is(type, 'submit') || Object.is(type, 'save')) {
        // 公告链接格式的判断
        if (this.updateForm.bulletinUrl && !this.validLinks(this.updateForm.bulletinUrl)) {
          this.$message({
            type: 'warning',
            message: '公告链接格式有误！'
          })
          return false
        }
        if (this.sectionList.length === 0) {
          this.$message.warning('请选择标段！')
          return false
        } else {
          this.updateForm.bidSectionList = this.sectionList
        }
        // 获取文本编辑器中的内容
        if (this.$refs.ueditor.getContent()) {
          this.updateForm.content = this.$refs.ueditor.getContent()
        } else {
          this.$message({
            type: 'warning',
            message: '请输入公告内容'
          })
          return false
        }
        this.$refs[formName].validate((valid) => {
          if (valid) {
            // 公告结束时间-updateForm.announcementEndTime
            // 开标时间-updateForm.bidOpeningTime
            // 资格预审会时间-updateForm.prequalificationTime
            // 报名开始时间-updateForm.signUpBeginTime
            // 报名截止时间-updateForm.signUpEndTime
            // 招标文件获取开始时间-updateForm.biddingDocsBeginTime
            // 招标文件获取截止时间-updateForm.biddingDocsEndTime
            // 资格预审文件获取开始时间-updateForm.prequalificationDocsBeginTime
            // 资格预审文件获取截止时间-updateForm.prequalificationDocsEndTime
            /**
             * 公告结束时间 > 当前时间
             * 报名截止时间 > 报名开始时间 >= 当前时间
             * 开标时间 > 招标文件获取截止时间 > 招标文件获取开始时间 > 报名开始时间
             */
            let currentDate = dateFormat(new Date(), 'yyyyMMddhhmmss')
            let announcementEndTime = dateFormat(this.updateForm.announcementEndTime, 'yyyyMMddhhmmss')
            let bidOpeningTime = dateFormat(this.updateForm.bidOpeningTime, 'yyyyMMddhhmmss')
            let prequalificationTime = dateFormat(this.updateForm.prequalificationTime, 'yyyyMMddhhmmss')
            let signUpBeginTime = dateFormat(this.updateForm.signUpBeginTime, 'yyyyMMddhhmmss')
            let signUpEndTime = dateFormat(this.updateForm.signUpEndTime, 'yyyyMMddhhmmss')
            let biddingDocsBeginTime = dateFormat(this.updateForm.biddingDocsBeginTime, 'yyyyMMddhhmmss')
            let biddingDocsEndTime = dateFormat(this.updateForm.biddingDocsEndTime, 'yyyyMMddhhmmss')
            let prequalificationDocsBeginTime = dateFormat(this.updateForm.prequalificationDocsBeginTime, 'yyyyMMddhhmmss')
            let prequalificationDocsEndTime = dateFormat(this.updateForm.prequalificationDocsEndTime, 'yyyyMMddhhmmss')
            if (announcementEndTime <= currentDate) {
              this.$message.warning('时间要求：公告结束时间 > 当前时间')
              return false
            }
            if (bidOpeningTime) { // 后审项目
              if (signUpBeginTime && signUpEndTime) { // 报名
                if (signUpEndTime > signUpBeginTime && signUpBeginTime >= currentDate) {
                } else {
                  this.$message.warning('时间要求：报名截止时间 > 报名开始时间 >= 当前时间')
                  return false
                }
                if (bidOpeningTime > biddingDocsEndTime && biddingDocsEndTime > biddingDocsBeginTime && biddingDocsBeginTime > signUpBeginTime) {
                } else {
                  this.$message.warning('时间要求：开标时间 > 招标文件获取截止时间 > 招标文件获取开始时间 > 报名开始时间')
                  return false
                }
              } else {
                if (bidOpeningTime > biddingDocsEndTime && biddingDocsEndTime > biddingDocsBeginTime) {
                } else {
                  this.$message.warning('时间要求：开标时间 > 招标文件获取截止时间 > 招标文件获取开始时间')
                  return false
                }
              }
            } else { // 预审
              if (signUpBeginTime && signUpEndTime) { // 报名
                if (signUpEndTime > signUpBeginTime && signUpBeginTime >= currentDate) {
                } else {
                  this.$message.warning('时间要求：报名截止时间 > 报名开始时间 >= 当前时间')
                  return false
                }
                if (prequalificationTime > prequalificationDocsEndTime && prequalificationDocsEndTime > prequalificationDocsBeginTime && prequalificationDocsBeginTime > signUpBeginTime) {
                } else {
                  this.$message.warning('时间要求：资格预审会时间 > 资格预审文件获取截止时间 > 资格预审文件获取开始时间 > 报名开始时间')
                  return false
                }
              } else {
                if (prequalificationTime > prequalificationDocsEndTime && prequalificationDocsEndTime > prequalificationDocsBeginTime) {
                } else {
                  this.$message.warning('时间要求：资格预审会时间 > 资格预审文件获取截止时间 > 资格预审文件获取开始时间')
                  return false
                }
              }
            }
            if (Object.is(type, 'save')) {
              this.approveDialogVisable = false
              this.submitData(type)
            } else {
              this.approveDialogVisable = true
            }
          } else {
            return false
          }
        })
      } else if (Object.is(type, 'cancel')) {
        this.close()
      }
    },
    submitData (type) {
      let msg = Object.is(type, 'submit') ? '提交后数据将锁定，不允许修改，确认要提交吗?' : '确认要保存吗?'
      this.$confirm(msg, '提示', {
        confirmButtonText: '确定',
        cancelButtonText: '取消',
        type: 'warning',
        beforeClose: (action, instance, done) => {
          done()
        }
      }).then(() => {
        this.loading = true
        // 根据type设置当前招标项目的状态
        if (Object.is(type, 'submit')) {
          this.cancelApprove()
          this.updateForm.auditStatus = 4 // 暂时不考虑审批
          this.updateForm.currentBidSectionSystemCode = this.$route.query.sectionSystemCode
        } else {
          this.updateForm.auditStatus = 0
        }
        // 公告类型为更正公告
        this.updateForm.type = 3
        this.updateForm.routingPath = '/project/projectProcess/announcement/notice_detail/'
        bulletinInfo.save(this.updateForm).then((res) => {
          this.loading = false
          if (res.data.resCode === '0000') {
            this.close()
          }
        })
      }).catch(() => {
        this.loading = false
        return false
      })
    },
    // 确认提交
    confirmSubmit (record) {
      this.updateForm.approvalFlowExecutorList = []
      this.updateForm.noticeList = []
      for (let i = 0; i < record.approveList.length; i++) {
        let obj = {
          usersId: record.approveList[i].objectId,
          flowLevel: i + 1
        }
        this.updateForm.approvalFlowExecutorList.push(obj)
      }
      if (record.noticeList && record.noticeList.length > 0) {
        this.updateForm.noticeList = record.noticeList
      }
      this.submitData('submit')
    },
    cancelApprove () {
      this.approveDialogVisable = false
    },
    handleSelectionChange (val) {
      this.sectionList = val
    },
    close () {
      this.$store.commit('delete_tabs', this.$route.fullPath)
      this.$router.go(-1)
    }
  },
  mounted () {
  }
}
</script>

<style scoped>
</style>
