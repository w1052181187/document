<template>
  <div class="cloudcontent" id="cloud_process">
    <div class="main">
      <div class="process_top">
        <p>
            <el-select v-model="selectCode" placeholder="标段切换" @change="changeBidSection">
              <el-option
                v-for="item in options"
                :key="item.code"
                :label="item.bidSectionName"
                :value="item.code">
              </el-option>
            </el-select>
        </p>
        <div class="bid">
          <table class="bidtable">
            <tr>
              <td class="tit">项目编号：</td>
              <td><span>{{updateForm.tenderProjectCode}}</span></td>
              <td class="tit">项目名称：</td>
              <td><span>{{updateForm.tenderProjectName}}</span></td>
            </tr>
            <tr>
              <td class="tit">标段编号：</td>
              <td><span>{{updateForm.bidSectionCode}}</span></td>
              <td class="tit">标段名称：</td>
              <td><span>{{updateForm.bidSectionName}}</span></td>
            </tr>
          </table>
        </div>
        <div class="process" v-if="processFlag">
          <ul>
           <li v-for="item in process" :key="item.value" :class="item.colorFlag ? 'active' :''"  v-if="Number(item.check) === 0">
            <!-- <el-button  @click="processBtn(item)" v-if="Number(item.check) === 0" :disabled="!item.clickFlag">{{item.name}}</el-button>-->
             <el-button  @click="processBtn(item, true)">{{item.name}}</el-button>
           </li>
          </ul>
        </div>
      </div>
      <div class="process_main" v-if="processFlag">
        <invitation :tenderSystemCode="tenderSystemCode" :sectionSystemCode="selectCode" :operationFlag="operationFlag" v-if="currentView === 'invitation'" @checkFlowStatusFlag="checkFlowStatusFlag" :type="type"></invitation>
        <announcement :tenderSystemCode="tenderSystemCode" :sectionSystemCode="selectCode" :operationFlag="operationFlag" v-if="currentView === 'announcement'" @checkFlowStatusFlag="checkFlowStatusFlag" :type="type"></announcement>
        <prequalificationFile :tenderSystemCode="tenderSystemCode" :sectionSystemCode="selectCode" :operationFlag="operationFlag" v-if="currentView === 'prequalificationFile'" @checkFlowStatusFlag="checkFlowStatusFlag" :type="type"></prequalificationFile>
        <prequalificationResponse :tenderSystemCode="tenderSystemCode" :sectionSystemCode="selectCode" :operationFlag="operationFlag" v-if="currentView === 'prequalificationResponse'" @checkFlowStatusFlag="checkFlowStatusFlag" :type="type"></prequalificationResponse>
        <checkResult :tenderSystemCode="tenderSystemCode" :sectionSystemCode="selectCode" :operationFlag="operationFlag" v-if="currentView === 'checkResult'" @checkFlowStatusFlag="checkFlowStatusFlag" :type="type"></checkResult>
        <bidDocument :tenderSystemCode="tenderSystemCode" :sectionSystemCode="selectCode" :operationFlag="operationFlag" v-if="currentView === 'bidDocument'" @checkFlowStatusFlag="checkFlowStatusFlag" :type="type"></bidDocument>
        <bidResponse :tenderSystemCode="tenderSystemCode" :sectionSystemCode="selectCode" :operationFlag="operationFlag" v-if="currentView === 'bidResponse'" @checkFlowStatusFlag="checkFlowStatusFlag" :type="type"></bidResponse>
        <bidOpening :tenderSystemCode="tenderSystemCode" :sectionSystemCode="selectCode" :operationFlag="operationFlag" v-if="currentView === 'bidOpening'" @checkFlowStatusFlag="checkFlowStatusFlag" :type="type"></bidOpening>
        <wasteBidResult :tenderSystemCode="tenderSystemCode" :sectionSystemCode="selectCode" :operationFlag="operationFlag" v-if="currentView === 'wasteBidResult'" @checkFlowStatusFlag="checkFlowStatusFlag" :type="type"></wasteBidResult>
        <calibrationResult :tenderSystemCode="tenderSystemCode" :sectionSystemCode="selectCode" :operationFlag="operationFlag" v-if="currentView === 'calibrationResult'" @checkFlowStatusFlag="checkFlowStatusFlag" :type="type"></calibrationResult>
      </div>
    </div>
  </div>
</template>
<script>
import {tenderProject, bidSection} from '@/api/project'
import {projectFlow} from '@/api/system'
export default {
  components: {
    // 邀请招标
    invitation: resolve => require(['./invite/index.vue'], resolve),
    // 招标公告/资格预审公告
    announcement: resolve => require(['./announcement/index.vue'], resolve),
    // 资格预审文件
    prequalificationFile: resolve => require(['./prequalificationFile/index.vue'], resolve),
    // 响应资格预审
    prequalificationResponse: resolve => require(['./prequalificationResponse/index.vue'], resolve),
    // 资格审查结果
    checkResult: resolve => require(['./checkResult/index.vue'], resolve),
    // 招标文件
    bidDocument: resolve => require(['./bidDocument/index.vue'], resolve),
    // 响应招标
    bidResponse: resolve => require(['./bidResponse/index.vue'], resolve),
    // 开标评标
    bidOpening: resolve => require(['./bidOpening/index.vue'], resolve),
    // 废标结果
    wasteBidResult: resolve => require(['./wasteBidResult/index.vue'], resolve),
    // 定标结果
    calibrationResult: resolve => require(['./calibrationResult/index.vue'], resolve)
  },
  data () {
    return {
      tenderSystemCode: this.$route.query.code,
      sectionSystemCode: this.$route.params.code, // 用于流程切换
      selectCode: '', // 用于流程切换
      //  标段切换
      options: [],
      value: '',
      defaultProcess: [
        {
          name: '', // 招标公告/资格预审公告/投标邀请书
          enName: '',
          type: '',
          check: '',
          colorFlag: '', // 颜色高亮条件（false.否 true.是）
          clickFlag: '', // 是否可点击（false.否 true.是）
          operationFlag: '' // 该主件下的操作按钮是否展示（false.否 true.是）
        }, {
          name: '资格预审文件',
          enName: 'prequalificationFile',
          type: '9',
          check: '',
          colorFlag: '',
          clickFlag: '',
          operationFlag: ''
        }, {
          name: '响应资格预审',
          enName: 'prequalificationResponse',
          type: '10',
          check: '',
          colorFlag: '',
          clickFlag: '',
          operationFlag: ''
        }, {
          name: '资格审查结果',
          enName: 'checkResult',
          type: '11',
          check: '',
          colorFlag: '',
          clickFlag: '',
          operationFlag: ''
        }, {
          name: '招标文件',
          enName: 'bidDocument',
          type: '12',
          check: '',
          colorFlag: '',
          clickFlag: '',
          operationFlag: ''
        }, {
          name: '响应招标',
          enName: 'bidResponse',
          type: '13',
          check: '',
          colorFlag: '',
          clickFlag: '',
          operationFlag: ''
        }, {
          name: '开标评标',
          enName: 'bidOpening',
          type: '14',
          check: '',
          colorFlag: '',
          clickFlag: '',
          operationFlag: ''
        }, {
          name: '废标结果公告',
          enName: 'wasteBidResult',
          type: '15',
          check: '',
          colorFlag: '',
          clickFlag: '',
          operationFlag: ''
        }, {
          name: '定标结果',
          enName: 'calibrationResult',
          type: '16',
          check: '',
          colorFlag: '',
          clickFlag: '',
          operationFlag: ''
        }, {
          name: '完结',
          type: '17',
          check: '',
          colorFlag: '',
          clickFlag: '',
          operationFlag: ''
        }
      ],
      process: [],
      chooseTenderProjectInfo: {}, // 当前招标项目信息
      chooseBidSectionInfo: {}, // 当前标段信息
      currentView: '', // 按钮点击选择的视图
      processFlag: false, // 流转信息是否展示，默认不展示
      updateForm: {},
      operationFlag: '', // 控制页面操作按钮展示的字段（0.不展示 1.展示）
      curProject: {}, // 当前流程节点，用于刷新后维持原来节点不变
      checkRoutePath: false, // 不是项目进度中进入的，操作按钮要全部隐藏
      type: '' // 流程节点type
    }
  },
  watch: {
    '$route': 'init'
  },
  mounted () {
    this.init()
  },
  methods: {
    checkFlowStatusFlag (flowStatusFlag) {
      if (this.process.length > 0) {
        for (let i = 0; i < this.process.length; i++) {
          if (Number(flowStatusFlag) === Number(this.process[i].type)) {
            this.currentView = this.process[i].enName
            this.updateProcessNodeInfo()
            break
          }
        }
      }
    },
    init () {
      this.checkRoutePath = sessionStorage.getItem('isOverview') === 'true'
      this.process = []
      this.process = this.process.concat(this.defaultProcess)
      this.tenderSystemCode = this.$route.query.code
      this.sectionSystemCode = this.$route.params.code
      this.selectCode = this.sectionSystemCode
      let progressTemp = sessionStorage.getItem(this.tenderSystemCode)
      if (progressTemp) {
        this.curProject = JSON.parse(progressTemp)
        if (this.curProject.hasOwnProperty(this.sectionSystemCode)) {
          // 当前选择的标段
          this.selectCode = this.curProject[this.sectionSystemCode].code
        }
      }
      this.getChooseTenderProjectInfo(this.selectCode)
      this.getChooseBidSectionInfo(this.selectCode)
      this.getBidSectionList()
    },
    /** 获取指定标段的信息 */
    getChooseBidSectionInfo (sectionSystemCode) {
      bidSection.getOne(sectionSystemCode).then((res) => {
        this.updateForm = res.data.bidSection
      })
    },
    /** 获取该招标项目下的所有标段信息 */
    getBidSectionList () {
      bidSection.getList({
        tenderSystemCode: this.tenderSystemCode,
        auditStatusList: '2,4'
      }).then((res) => {
        this.options = res.data.bidSectionList.list
      })
    },
    /** 获取指定标段的信息 */
    changeBidSection () {
      this.process = []
      this.process = this.process.concat(this.defaultProcess)
      this.processFlag = false
      this.getChooseBidSectionInfo(this.selectCode)
      this.getChooseTenderProjectInfo(this.selectCode)
    },
    // 保存当前项目，当前标段及当前标段当前操作的流程
    saveProjectBySession (process) {
      if (process && process.type === '17') {
        return
      }
      this.curProject[this.sectionSystemCode] = {}
      Object.assign(this.curProject[this.sectionSystemCode], {code: this.selectCode}, process)
      sessionStorage.setItem(this.tenderSystemCode, JSON.stringify(this.curProject))
    },
    /** 获取当前招标项目信息 */
    getChooseTenderProjectInfo (sectionSystemCode) {
      tenderProject.getOne(this.tenderSystemCode).then((res) => {
        if (res.data.tenderProject) {
          this.chooseTenderProjectInfo = res.data.tenderProject
          this.getProjectFlow(sectionSystemCode, true)
        }
      })
    },
    /** 获取项目流程以及节点高亮的状态 */
    getProjectFlow (sectionSystemCode, flag) {
      this.currentView = ''
      projectFlow.getList({
        tenderSystemCode: this.tenderSystemCode,
        sectionSystemCode: sectionSystemCode,
        enterpriseId: this.$store.getters.authUser.enterpriseId
      }).then((res) => {
        if (flag) {
          // 判断项目类型，资格预审的项目是10个节点，其他项目是7个（第一个为招标公告或者是邀请招标）
          if (Number(this.chooseTenderProjectInfo.tenderMode) === 1) { // 1.公开招标
            if (Number(this.chooseTenderProjectInfo.isPreBid) === 0) {
              // 2.资格后审
              this.process[0].name = '招标公告'
              this.process[0].enName = 'announcement'
              this.process[0].type = '6'
              this.process.splice(1, 3)
              this.currentView = 'announcement'
              this.type = 6
            } else {
              // 1.资格预审
              this.process[0].name = '资格预审公告'
              this.process[0].enName = 'announcement'
              this.process[0].type = '7'
              this.currentView = 'announcement'
              this.type = 7
            }
          } else if (Number(this.chooseTenderProjectInfo.tenderMode) === 2) { // 2.邀请招标
            // 3.邀请招标
            this.process[0].name = '投标邀请书'
            this.process[0].enName = 'invitation'
            this.process[0].type = '8'
            this.process.splice(1, 3)
            this.currentView = 'invitation'
            this.type = 8
          } else if (Number(this.chooseTenderProjectInfo.tenderMode) === 3) { // 3.竞争性谈判
            // 5.竞争性谈判
            this.process[0].name = '招标公告'
            this.process[0].enName = 'announcement'
            this.process[0].type = '6'
            this.process.splice(1, 3)
            this.currentView = 'announcement'
            this.type = 6
          } else if (Number(this.chooseTenderProjectInfo.tenderMode) === 4) { // 4.单一来源采购
            // 4.单一来源
            this.process[0].name = '投标邀请书'
            this.process[0].enName = 'invitation'
            this.process[0].type = '8'
            this.process.splice(1, 3)
            this.currentView = 'invitation'
            this.type = 8
          } else if (Number(this.chooseTenderProjectInfo.tenderMode) === 5) { // 5.询价采购
            // 7.询价
            this.process[0].name = '招标公告'
            this.process[0].enName = 'announcement'
            this.process[0].type = '6'
            this.process.splice(1, 3)
            this.currentView = 'announcement'
            this.type = 6
          } else if (Number(this.chooseTenderProjectInfo.tenderMode) === 6) { //  6.竞争性磋商
            // 6.竞争性磋商
            this.process[0].name = '招标公告'
            this.process[0].enName = 'announcement'
            this.process[0].type = '6'
            this.process.splice(1, 3)
            this.currentView = 'announcement'
            this.type = 6
          } else { // 9.其他
          }
        } else {
          // 判断项目类型，资格预审的项目是10个节点，其他项目是7个（第一个为招标公告或者是邀请招标）
          if (Number(this.chooseTenderProjectInfo.tenderMode) === 1) { // 1.公开招标
            if (Number(this.chooseTenderProjectInfo.isPreBid) === 0) {
              // 2.资格后审
              this.currentView = 'announcement'
            } else {
              // 1.资格预审
              this.currentView = 'announcement'
            }
          } else if (Number(this.chooseTenderProjectInfo.tenderMode) === 2) { // 2.邀请招标
            // 3.邀请招标
            this.currentView = 'invitation'
          } else if (Number(this.chooseTenderProjectInfo.tenderMode) === 3) { // 3.竞争性谈判
            // 5.竞争性谈判
            this.currentView = 'announcement'
          } else if (Number(this.chooseTenderProjectInfo.tenderMode) === 4) { // 4.单一来源采购
            // 4.单一来源
            this.currentView = 'invitation'
          } else if (Number(this.chooseTenderProjectInfo.tenderMode) === 5) { // 5.询价采购
            // 7.询价
            this.currentView = 'announcement'
          } else if (Number(this.chooseTenderProjectInfo.tenderMode) === 6) { //  6.竞争性磋商
            // 6.竞争性磋商
            this.currentView = 'announcement'
          } else { // 9.其他
          }
        }
        // 1.判断该标段目前走到哪个节点了，该节点前只可查看,隐藏操作按钮
        // 2.判断该节点下是否存在审批中的信息，若存在则后续节点不可点击，若不存在则后续节点可点击
        // 3.判断该标段目前走到哪个节点了，该节点前无颜色，该节点及其后续节点是蓝色
        // 判断该标段的流转状态
        if (res.data.bidSection) {
          this.chooseBidSectionInfo = res.data.bidSection
        }
        this.setProcessNodes(res.data.projectFlowList, res.data.bidSection)
        this.processFlag = true
      })
    },
    /** 对流程节点的使用状态进行设定(启用、禁用) */
    setProcessNodes (projectFlowList, bidSectionInfo) {
      if (projectFlowList.length > 0 && projectFlowList.length === this.process.length) { // 去掉后台给的“完结”状态
        for (let i = 0; i < projectFlowList.length; i++) {
          this.process[i].check = projectFlowList[i]
        }
        // this.setProcessNodeInfo(bidSectionInfo)
      }
    },
    /** 设定流程节点操作按钮、高亮的展示 */
    setProcessNodeInfo (chooseBidSectionInfo) {
      if (Number(chooseBidSectionInfo.flowStatus) < 6) {
        this.process.forEach(item => { // 标段刚提交，未进行任何录入
          if (Number(item.check) === 0) {
            item.colorFlag = true
            item.clickFlag = true
            item.operationFlag = this.checkRoutePath
          }
        })
      } else if (Number(chooseBidSectionInfo.flowStatus) >= 6 && Number(chooseBidSectionInfo.flowStatus) < 17) {
        this.process.forEach(item => {
          if (Number(item.check) === 0) {
            if (Number(item.type) < Number(chooseBidSectionInfo.flowStatus)) { // 当前节点之前的信息（无颜色，可点击，可查看）
              item.colorFlag = false
              item.clickFlag = true
              item.operationFlag = false
            } else { // 当前节点之后的信息要根据审批进度进行判断
              if (chooseBidSectionInfo.processCodes !== null) { // 存在未提交/待审批的信息，则该节点（高亮，可点击，可操作）；后续节点（高亮，不可点击，不可操作）
                if (Number(item.type) === Number(chooseBidSectionInfo.flowStatus)) {
                  item.colorFlag = true
                  item.clickFlag = true
                  item.operationFlag = this.checkRoutePath
                } else {
                  item.colorFlag = false
                  item.clickFlag = false
                  item.operationFlag = false
                }
              } else { // 不存在未提交/待审批的信息，则该节点（高亮，可点击，可操作）；后续节点（高亮，可点击，可操作）
                item.colorFlag = true
                item.clickFlag = true
                item.operationFlag = this.checkRoutePath
              }
            }
          }
        })
      } else {
        this.process.forEach(item => { // 该标段的流程已结束
          if (Number(item.check) === 0) {
            item.colorFlag = false
            item.clickFlag = true
            item.operationFlag = false
          }
        })
      }
      let curProcess
      if (this.curProject.hasOwnProperty(this.sectionSystemCode)) {
        curProcess = this.curProject[this.sectionSystemCode]
      }
      if (curProcess) {
        this.process.map((item) => {
          if (curProcess.type === item.type && Number(curProcess.type) !== 17) {
            this.operationFlag = item.operationFlag // 设置流程默认页的操作状态
            this.processBtn(item, false)
          } else if (curProcess.type === item.type && Number(curProcess.type) === 17) {
            this.$store.commit('delete_tabs', this.$route.fullPath)
          }
        })
      } else {
        // 将第一个节点的操作状态进行传递
        this.operationFlag = this.process[0].operationFlag
      }
    },
    /** 更新流程节点操作按钮、高亮的展示 */
    updateProcessNodeInfo () {
      bidSection.getOne(this.selectCode).then((res) => {
        if (res.data.bidSection) {
          this.setProcessNodeInfo(res.data.bidSection)
        }
      })
    },
    /**
     * 流程切换
     * @param type
     */
    processBtn (item, flag) {
      if (flag) {
        this.updateProcessNodeInfo()
      }
      if (item.clickFlag === true) {
        this.saveProjectBySession(item)
        this.operationFlag = item.operationFlag
        this.type = item.type
        switch (item.type) {
          case '6':
            this.currentView = 'announcement'
            break
          case '7':
            this.currentView = 'announcement'
            break
          case '8':
            this.currentView = 'invitation'
            break
          case '9':
            this.currentView = 'prequalificationFile'
            break
          case '10':
            this.currentView = 'prequalificationResponse'
            break
          case '11':
            this.currentView = 'checkResult'
            break
          case '12':
            this.currentView = 'bidDocument'
            break
          case '13':
            this.currentView = 'bidResponse'
            break
          case '14':
            this.currentView = 'bidOpening'
            break
          case '15':
            this.currentView = 'wasteBidResult'
            break
          case '16':
            this.currentView = 'calibrationResult'
            break
          case '17':
            if (Number(this.chooseBidSectionInfo.flowStatus) < 17) {
              this.isEnd(item)
            } else {
              this.$message.warning('该标段所属流程已完结，不可重复进行完结操作！')
              return false
            }
            break
          default:
        }
      } else {
        this.$message.warning('请先完成上一个信息的提交或审批！')
        return false
      }
    },
    /** 是否完结的操作 */
    isEnd (item) {
      this.$confirm('确认完结吗?', '提示', {
        confirmButtonText: '确定',
        cancelButtonText: '取消',
        type: 'error'
      }).then(() => {
        bidSection.updateFlowStatusByCode(this.selectCode, Number(item.type)).then((res) => {
          if (res.data.resCode === '0000') {
            this.getProjectFlow(this.selectCode, false)
          }
        })
      }).catch(() => {
        return false
      })
    }
  }
}
</script>
<style lang="less">
  #cloud_process{
    .process_top{
      padding: 0 20px;
    }
    .bidtable{
      width: 100%;
      padding: 10px 0;
    }
    .bidtable tr td{
      padding: 10px 0;
      text-align: left;
      color: #111111;
    }
    .bidtable tr td.tit{
      width: 80px;
      color: #666666;
      display: inline-block;
    }
    .bidtable tr td span{
      width: 480px;
      line-height: 20px;
      display: inline-block;
    }
    .process ul{
      overflow: hidden;
    }
    .process ul li{
      overflow: hidden;
      float: left;
      padding-right: 29px;
      margin: 10px 0;
      background: url("../../../../static/images/jt.png") right 3px center no-repeat;
    }
    .process ul li .el-button{
      width: 102px;
      height: 48px;
      background: #ffffff;
      border-color: #3f63f7;
      color: #3f63f7;
      padding: 0;
    }
    .process ul li.active .el-button{
      background: #c5d0fc;
      border-color: #c5d0fc;
      color: #333333;
    }
    .process ul li:last-child{
      background: none;
      padding-right: 0px;
    }
  }
</style>
