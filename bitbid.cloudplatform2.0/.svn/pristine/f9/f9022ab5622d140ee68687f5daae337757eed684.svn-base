<template>
  <div class="cloudcontent" id="cloud_registProject">
    <div class="topmain">
      <div class="seacher_box advancedsearch_box">
        <span>项目名称：</span>
        <el-input class="search" placeholder="请输入项目名称关键字" style="vertical-align: top"  v-model="searchForm.tenderProjectNameLike"></el-input>
        <span>项目编号：</span>
        <el-input class="search" placeholder="请输入项目编号关键字" style="vertical-align: top"  v-model="searchForm.tenderProjectCodeLike"></el-input>
        <div class="handBtn" v-if="!showselect">
          <el-button  type="primary" class="search" @click="search">查询</el-button>
          <el-button  @click="reset">重置</el-button>
          <span @click="showselect = true" class="more">展开搜索条件</span>
        </div>
        <div class="advancedsearch" v-if="showselect">
          <el-form :model="searchForm" ref="searchForm" label-width="90px" :validate-on-rule-change="true">
            <el-row>
              <el-col :span="24">
                <el-form-item label="项目类型：">
                  <span :class="isTypeSelectAll ? 'all selectall': 'all'" @click="conditionCancel('项目类型')">不限</span>
                  <el-radio-group v-model="searchForm.projectType" @change="conditionSelect($event, '项目类型')">
                    <el-radio v-for="item in proTypeOption" :label="item.code" :key="item.code" :checked="projectTypeFlag">{{item.name}}</el-radio>
                  </el-radio-group>
                </el-form-item>
              </el-col>
            </el-row>
            <el-row>
              <el-col :span="24">
                <el-form-item label="招标方式：">
                  <span :class="isBidMethodSelectAll ? 'all selectall': 'all'" @click="conditionCancel('招标方式')">不限</span>
                  <el-radio-group v-model="searchForm.bidMethod" @change="conditionSelect($event, '招标方式')">
                    <el-radio v-for="item in bidMethodOption" :label="item.code" :key="item.code" :checked="bidMethodFlag">{{item.name}}</el-radio>
                  </el-radio-group>
                </el-form-item>
              </el-col>
            </el-row>
            <el-row>
              <el-col :span="24">
                <el-form-item label="资金来源：">
                  <span :class="isCapitalSourceSelectAll ? 'all selectall': 'all'" @click="conditionCancel('资金来源')">不限</span>
                  <el-radio-group v-model="searchForm.capitalSource" @change="conditionSelect($event, '资金来源')">
                    <el-radio v-for="item in capitalSourceOption" :label="item.code" :key="item.code" :checked="capitalSourceFlag">{{item.name}}</el-radio>
                  </el-radio-group>
                </el-form-item>
              </el-col>
            </el-row>
            <el-row>
              <el-col :span="24">
                <el-form-item label="项目状态：">
                  <span :class="isProjectStatusSelectAll ? 'all selectall': 'all'" @click="conditionCancel('项目状态')">不限</span>
                  <el-radio-group v-model="searchForm.projectStatus" @change="conditionSelect($event, '项目状态')">
                    <el-radio v-for="item in projectStatusOption" :label="item.code" :key="item.code" :checked="projectStatusFlag">{{item.name}}</el-radio>
                  </el-radio-group>
                </el-form-item>
              </el-col>
            </el-row>
            <el-row>
              <el-col :span="24">
                <el-form-item label="项目时间：" style="float: left; margin-right: 20px;">
                  <span :class="isProjectTimeSelectAll ? 'all selectall': 'all'" @click="conditionCancel('项目时间')">不限</span>
                  <el-radio-group v-model="searchForm.projectTime" @change="conditionSelect($event, '项目时间')">
                    <el-radio v-for="item in projectTimeOption" :label="item.code" :key="item.code" :checked="projectTimeFlag">{{item.name}}</el-radio>
                  </el-radio-group>
                </el-form-item>
                <el-date-picker
                  v-model="searchForm.projectCustomTime"
                  v-if="searchForm.projectTime === 6"
                  type="daterange"
                  range-separator="至"
                  start-placeholder="开始日期"
                  end-placeholder="结束日期">
                </el-date-picker>
              </el-col>
            </el-row>
            <el-row>
              <el-col :span="9" class="region">
                <el-form-item label="所在地区：">
                  <el-select v-model="searchForm.region"  @change="getCityNode()" placeholder="请选择">
                    <el-option
                      v-for="item in regionOptions"
                      :key="item.value"
                      :label="item.label"
                      :value="item.value">
                    </el-option>
                  </el-select>
                  <el-select v-model="searchForm.regionTwo" @change="getAreaNode()" placeholder="请选择">
                    <el-option
                      v-for="item in regionTwoOptions"
                      :key="item.value"
                      :label="item.label"
                      :value="item.value">
                    </el-option>
                  </el-select>
                  <el-select v-model="searchForm.regionThree" placeholder="请选择">
                    <el-option
                      v-for="item in regionThreeOptions"
                      :key="item.value"
                      :label="item.label"
                      :value="item.value">
                    </el-option>
                  </el-select>
                </el-form-item>
              </el-col>
              <el-col :span="9" class="bigWidth">
                <el-form-item label="项目经理：">
                  <el-input v-model="searchForm.userName" placeholder="请输入项目经理" readonly>
                    <el-button type="primary" slot="append" @click="showUserDialog">选择</el-button>
                  </el-input>
                </el-form-item>
              </el-col>
            </el-row>
            <el-row>
              <el-col :span="9" class="bigWidth">
                <el-form-item label="招标人：">
                  <el-input v-model="searchForm.bidderName" placeholder="请输入招标人">
                  </el-input>
                </el-form-item>
              </el-col>
              <el-col :span="9" class="bigWidth">
                <el-form-item label="所属部门：">
                  <el-input class="deptInput" v-model="searchForm.departmentName" auto-complete="off" placeholder="请选择" readonly="readonly" clearable @click.native="showDepartmentTree">
                    <i slot="suffix" class="el-input__icon el-icon-arrow-down"></i>
                  </el-input>
                  <tree-options :initData="searchForm.departmentId" @selectSuccess="selectedDepatment" :isShowOptions="isShowDptTree"></tree-options>
                </el-form-item>
              </el-col>
            </el-row>
          </el-form >
          <div class="handBtn">
            <el-button  type="primary" class="search" @click="search">查询</el-button>
            <el-button  @click="reset">重置</el-button>
            <span @click="showselect = false" class="more">收起搜索条件</span>
          </div>
        </div>
      </div>
    </div>
    <div class="main">
      <el-table
        :data="projectData"
        border
        style="width: 100%" header-cell-class-name="tableheader">
        <el-table-column
          type="index"
          label="序号"
          width="60"
          :index='indexMethod'
          align="center">
        </el-table-column>
        <el-table-column
          prop="projectCode"
          label="项目编号"
          show-overflow-tooltip>
          <template slot-scope="scope">
            <div class="tender-project-name">
              <img src="../../../assets/lishi_b.png" v-if="Number(scope.row.dataSource) === 1" title="历史项目">{{scope.row.projectCode}}
            </div>
          </template>
        </el-table-column>
        <el-table-column
          prop="tenderProjectName"
          label="项目名称"
          show-overflow-tooltip>
        </el-table-column>
        <el-table-column
          prop="tenderProjectAddress"
          label="项目地址"
          show-overflow-tooltip>
        </el-table-column>
        <el-table-column
          prop="tendererName"
          label="招标人"
          show-overflow-tooltip>
        </el-table-column>
        <el-table-column
          prop="status"
          label="提交状态"
          width="100"
          :formatter="filterStatus"
          show-overflow-tooltip>
        </el-table-column>
        <el-table-column
          prop="createDate"
          label="创建时间"
          width="160"
          :formatter="formatDate"
          show-overflow-tooltip>
        </el-table-column>
        <el-table-column
          label="操作" align="center" width="120">
          <template slot-scope="scope">
            <el-button type="text" size="small" @click="lookBtn(scope)">查看</el-button>
            <el-button type="text" size="small" @click="addBtn(scope)" v-if="Number(scope.row.status) !== 1 && $store.getters.permissions.includes('1010502')">项目总结</el-button>
          </template>
        </el-table-column>
      </el-table>
      <!--分页-->
      <el-pagination
        background
        layout="prev, pager, next"
        :total="total"
        :page-size='pageSize'
        :current-page.sync="currentPage"
        @current-change="handleCurrentChange">
      </el-pagination>
      <!--分页-->
    </div>
    <select-user-dialog :showVisible="showUserVisible" @selected="selectedUser" @showDialog="showUserDialog"></select-user-dialog>
  </div>
</template>
<script>
import * as region from '@/assets/js/region'
import * as industry from '@/assets/js/industry_two'
import {tenderProject} from '@/api/project'
import {dateFormat} from '@/assets/js/common'
import selectUserDialog from '@/pages/system/users/search_user_radio'
import TreeOptions from '@/pages/system/department/tree/tree_options'
export default {
  components: {
    selectUserDialog,
    TreeOptions
  },
  data () {
    return {
      searchForm: {
        tenderProjectCodeLike: '',
        projectType: '',
        projectCustomTime: '',
        region: '',
        regionTwo: '',
        regionThree: '',
        departmentId: null
      },
      projectData: [],
      // 当前页
      currentPage: 1,
      pageNo: 0,
      total: 0, // 总条数
      pageSize: 10, // 每页展示条数
      dataIndex: 1,
      showselect: false, // 高级搜索显示隐藏
      // 项目类型
      isTypeSelectAll: true,
      proTypeOption: [
        {
          name: '工程',
          code: 1
        },
        {
          name: '货物',
          code: 2
        },
        {
          name: '服务',
          code: 3
        }
      ],
      projectTypeFlag: true,
      // 招标方式
      isBidMethodSelectAll: true,
      bidMethodOption: [
        {
          name: '公开招标',
          code: 1
        },
        {
          name: '邀请招标',
          code: 2
        },
        {
          name: '竞争性谈判',
          code: 3
        },
        {
          name: '竞争性磋商',
          code: 4
        },
        {
          name: '单一来源采购',
          code: 5
        },
        {
          name: '询价采购',
          code: 6
        }
      ],
      bidMethodFlag: true,
      // 资金来源
      isCapitalSourceSelectAll: true,
      capitalSourceOption: [
        {
          name: '自有资金',
          code: 1
        },
        {
          name: '吸收资金',
          code: 2
        },
        {
          name: '专项资金',
          code: 3
        },
        {
          name: '其他资金',
          code: 4
        }
      ],
      capitalSourceFlag: true,
      // 项目状态
      isProjectStatusSelectAll: true,
      projectStatusOption: [
        {
          name: '未开始',
          code: 1
        },
        {
          name: '进行中',
          code: 2
        },
        {
          name: '已完成',
          code: 3
        }
      ],
      projectStatusFlag: true,
      // 项目时间
      isProjectTimeSelectAll: true,
      projectTimeOption: [
        {
          name: '近一周',
          code: 1
        },
        {
          name: '近一月',
          code: 2
        },
        {
          name: '近三月',
          code: 3
        },
        {
          name: '近半年',
          code: 4
        },
        {
          name: '近一年',
          code: 5
        },
        {
          name: '自定义',
          code: 6
        }
      ],
      projectTimeFlag: true,
      // 所在地区
      regionOptions: region.CityInfo,
      regionTwoOptions: [],
      regionThreeOptions: [],
      // 项目经理
      showUserVisible: false,
      // 所属部门
      // 是否展示部门树
      isShowDptTree: false
    }
  },
  watch: {
    '$route': 'getTableData'
  },
  created () {
    this.getTableData()
  },
  methods: {
    // 格式化时间
    formatDate (row, col, cellValue) {
      return cellValue ? dateFormat(cellValue, 'yyyy-MM-dd') : '---'
    },
    /** 状态(0.未提交；1.已提交)  */
    filterStatus (row) {
      if (row.status === 0) {
        return '未提交'
      } else if (row.status === 1) {
        return '已提交'
      } else {
        return ''
      }
    },
    /** 获取列表数据 */
    getTableData () {
      tenderProject.getListInProjectSum({
        pageNo: this.pageNo,
        pageSize: this.pageSize,
        enterpriseId: this.$store.getters.authUser.enterpriseId,
        status: 12,
        messageLike: this.searchForm.tenderProjectNameLike || null
      }).then((res) => {
        if (res.data.tenderProjectList && res.data.tenderProjectList.list) {
          this.total = res.data.tenderProjectList.total
          this.projectData = res.data.tenderProjectList.list
          // 获取项目地址信息
          this.projectData.map(item => {
            item.tenderProjectAddress = this.getTenderExpandsInfo(item.tenderExpandsInfo, 'address')
            if (item.tenderProjectSummary) {
              item.checkSummaryAndAndEvaluate = 1 // 当前选中的项目是否存在项目总结信息（0.不存在 1.存在）
              item.status = item.tenderProjectSummary.status
              item.createDate = item.tenderProjectSummary.createDate
            } else {
              item.checkSummaryAndAndEvaluate = 0
            }
          })
        }
      })
    },
    getTenderExpandsInfo (tenderExpandsInfo, type) {
      let str = ''
      if (Object.is(type, 'address')) {
        let provinceId = this.getLabelName(region.CityInfo, tenderExpandsInfo.provinceId)
        let cityId = this.getLabelName(region.CityInfo, tenderExpandsInfo.cityId)
        let countyId = this.getLabelName(region.CityInfo, tenderExpandsInfo.countyId)
        if (provinceId.node) {
          str += `${provinceId.node.label}`
          str += `/`
        }
        if (cityId.node) {
          str += `${cityId.node.label}`
          str += `/`
        }
        if (countyId.node) {
          str += `${countyId.node.label}`
        }
      } else if (Object.is(type, 'industry')) {
        let industryTypeFirst = this.getLabelName(industry.industry, tenderExpandsInfo.provinceId)
        let industryTypeSecond = this.getLabelName(industry.industry, tenderExpandsInfo.cityId)
        if (industryTypeFirst.node) {
          str += `${industryTypeFirst.node.label}`
          str += `/`
        }
        if (industryTypeSecond.node) {
          str += `${industryTypeSecond.node.label}`
        }
      }
      return str
    },
    /** treeData [原始数据集]， key 传入的key值 */
    getLabelName (treeData, key) {
      let parentNode = null
      let node = null
      function getTreeDeepArr (treeData, key) {
        for (let i = 0; i < treeData.length; i++) {
          // 1.如果没有子节点 beark
          if (node) {
            break
          }
          // 定义需要操作的数据
          let obj = treeData[i]
          // 没有节点就下一个
          if (!obj || !obj.value) {
            continue
          }
          // 2.有节点就继续找，一直递归
          if (obj.value === key) {
            node = obj
            break
          } else {
            // 3.如果有子节点就继续找
            if (obj.children) {
              // 4.递归前，记录当前节点，作为parentNode
              parentNode = obj
              // 递归
              getTreeDeepArr(obj.children, key)
            } else {
              // 跳出当前递归
              continue
            }
          }
        }
        // 如果没有找到父节点，置为null
        if (!node) {
          parentNode = null
        }
        // 返回结果
        return {
          node: node,
          parentNode: parentNode
        }
      }
      return getTreeDeepArr(treeData, key)
    },
    /** 模糊查询方法 */
    search () {
      this.getTableData()
    },
    reset () {
      this.searchForm.tenderProjectNameLike = ''
      this.getTableData()
    },
    // 查看
    lookBtn (scope) {
      sessionStorage.setItem('checkSummaryAndAndEvaluate', scope.row.checkSummaryAndAndEvaluate)
      this.$router.push({path: `/project/projectSum/detail/${scope.row.objectId}`, query: {tenderSystemCode: scope.row.code}})
    },
    // 查看
    addBtn (scope) {
      sessionStorage.setItem('checkSummaryAndAndEvaluate', scope.row.checkSummaryAndAndEvaluate)
      this.$router.push({path: `/project/projectSum/add`, query: {tenderSystemCode: scope.row.code}})
    },
    // 表单分页
    indexMethod (index) {
      return index + (this.currentPage - 1) * 10 + 1
    },
    handleCurrentChange (nowNum) {
      this.currentPage = nowNum
      this.pageNo = (nowNum - 1) * this.pageSize
      this.getTableData()
    },
    // 高级搜索-搜索条件选择
    conditionSelect (value, label) {
      switch (label) {
        case '项目类型':
          this.searchForm.projectType = value
          this.isTypeSelectAll = false
          break
        case '招标方式':
          this.searchForm.bidMethod = value
          this.isBidMethodSelectAll = false
          break
        case '资金来源':
          this.searchForm.capitalSource = value
          this.isCapitalSourceSelectAll = false
          break
        case '项目状态':
          this.searchForm.projectStatus = value
          this.isProjectStatusSelectAll = false
          break
        case '项目时间':
          this.searchForm.projectTime = value
          this.isProjectTimeSelectAll = false
          break
        default:
          break
      }
    },
    // 高级搜索-取消条件
    conditionCancel (label) {
      switch (label) {
        case '项目类型':
          this.projectTypeFlag = false
          this.searchForm.projectType = null
          this.isTypeSelectAll = true
          break
        case '招标方式':
          this.bidMethodFlag = false
          this.searchForm.bidMethod = null
          this.isBidMethodSelectAll = true
          break
        case '资金来源':
          this.capitalSourceFlag = false
          this.searchForm.capitalSource = null
          this.isCapitalSourceSelectAll = true
          break
        case '项目状态':
          this.projectStatusFlag = false
          this.searchForm.projectStatus = null
          this.isProjectStatusSelectAll = true
          break
        case '项目时间':
          this.projectTimeFlag = false
          this.searchForm.projectTime = null
          this.isProjectTimeSelectAll = true
          break
        default:
          break
      }
    },
    // 所在地区 3级联动  获取市信息
    getCityNode () {
      this.searchForm.regionTwo = ''
      this.searchForm.regionThree = ''
      this.regionOptions.map((item) => {
        if (item.value === this.searchForm.region) {
          this.regionTwoOptions = item.children
        }
      })
    },
    // 所在地区 3级联动  获取区信息
    getAreaNode () {
      this.searchForm.regionThree = ''
      this.regionOptions.map((item) => {
        if (item.value === this.searchForm.region) {
          item.children.map((ite) => {
            if (ite.value === this.searchForm.regionTwo) {
              this.regionThreeOptions = ite.children
            }
          })
        }
      })
    },
    // 项目经理 - 选择用户
    selectedUser (obj) {
      this.searchForm.userName = obj.name
      // this.addForm.tendererCode = obj.code
      // this.addForm.tendererName = obj.name
      // this.addForm.customerManagementCode = obj.code
      // this.addForm.tendererUnitAddress = this.wrapRegionText(obj)
    },
    // 选择人员弹框打开
    showUserDialog () {
      this.showUserVisible = !this.showUserVisible
    },
    // 部门树展开/关闭
    showDepartmentTree () {
      this.isShowDptTree = !this.isShowDptTree
    },
    // 选择部门
    selectedDepatment (deptTreeNode) {
      this.searchForm.departmentName = deptTreeNode.label
      this.searchForm.departmentId = deptTreeNode.id
      this.isShowDptTree = false
    }
  }
}
</script>
<style lang="less">
  #cloud_registProject {
    .tabletitles{
      background:#f7f8fa!important;
    }
  }
</style>
