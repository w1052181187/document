<template>
  <div>
    <el-dialog title="选择人员" :before-close="cancel" :visible.sync="showVisible">
      <div class="lefttree">
        <tree @handleNodeClick="clickDeparment" :filterText="filterDepartment"></tree>
      </div>
      <div class="rightselect">
        <el-row style="margin-bottom: 10px;">
          <el-col :span="24">
            <span style="display: inline-block;">姓名：</span>
            <el-input class="search" placeholder="请输入姓名关键字" v-model="queryModel.nameLike" style="display: inline-block; width: 200px;"></el-input>
            <el-button  type="primary" class="search" @click="search">查询</el-button>
          </el-col>
        </el-row>
        <el-table
          :data="selectData"
          v-loading="loading"
          border
          style="width: 100%" header-cell-class-name="tableheader">
          <el-table-column
            prop="name"
            label="名称"
            show-overflow-tooltip>
          </el-table-column>
          <el-table-column
            prop="department.name"
            label="部门"
            show-overflow-tooltip>
          </el-table-column>
          <el-table-column
            prop="radio"
            label="操作"
            align="center"
            width="90">
            <template slot-scope="scope">
              <el-button type="text" size="small" @click="selected(scope.row)">选择</el-button>
            </template>
          </el-table-column>
        </el-table>
        <!--分页-->
        <el-pagination
          background
          layout="prev, pager, next"
          :total="page.total"
          :page-size='page.pageSize'
          :current-page.sync="page.currentPage"
          @current-change="handlePage"
          @next-click="handlePage">
        </el-pagination>
        <!--分页-->
      </div>
      <div class="select_user_box">
        <p><span>已选人员：</span></p>
        <ul v-show="selectedUser.length">
          <li  v-for="item in selectedUser" :key="item.objectId"><span>{{item.name}}</span><i @click="delAssessor(item.objectId)"></i></li>
        </ul>
      </div>
      <div class="submit-radio" style="text-align: center">
        <el-button type="primary" @click="submit" v-loading="submitLoading">确认</el-button>
        <el-button type="primary" @click="cancel">取消</el-button>
      </div>
    </el-dialog>
  </div>
</template>
<script>
import tree from '@/pages/system/department/tree/tree_detail'
import {user} from '@/api/system'
export default {
  components: {
    tree
  },
  data () {
    return {
      page: {
        pageSize: 10,
        pageNo: 1,
        total: 0, // 总条数
        currentPage: 1
      },
      selectData: [],
      departmentId: null,
      filterDepartment: '',
      selectedUser: [],
      submitLoading: false,
      queryModel: {
        enterpriseId: this.$store.getters.authUser.enterpriseId,
        isDelete: 0,
        type: 2,
        nameLike: '',
        account: ''
      },
      loading: false
    }
  },
  props: ['showVisible', 'selectedCode', 'saveSelectedUser'],
  methods: {
    // 获取部门ID
    clickDeparment (id) {
      this.page.pageNo = 1
      this.page.currentPage = 1
      this.departmentId = id
    },
    // 获取列表数据,稍作延迟(部门树获取)
    getTableData () {
      this.loading = true
      let queryModel = {
        enterpriseId: this.$store.getters.authUser.enterpriseId,
        isDelete: 0,
        pageNum: this.page.pageNo,
        pageSize: this.page.pageSize,
        departmentId: this.departmentId,
        type: 2,
        treeMode: 1
      }
      user.queryList(queryModel).then((res) => {
        this.loading = false
        this.selectData = res.data.data
        this.page.total = res.data.page.totalRows
      })
    },
    // 用户列表数据(查询)
    queryUserList () {
      this.queryModel.pageNum = this.page.pageNo
      this.queryModel.pageSize = this.page.pageSize
      user.queryList(this.queryModel).then((res) => {
        this.selectData = res.data.data
        this.page.total = res.data.page.totalRows
      })
    },
    // 普通格式化数据，空的时候展示"---"
    simpleFormatData (row, col, cellValue) {
      return cellValue || '---'
    },
    // 表单分页
    handlePage (nowNum) {
      this.page.currentPage = nowNum
      this.page.pageNo = nowNum
      this.getTableData()
    },
    search () {
      this.queryUserList()
    },
    // 选择
    selected (obj) {
      let isContinue = true
      for (let i = 0; i < this.selectedUser.length; i++) {
        if (Number(this.selectedUser[i].objectId) === Number(obj.objectId)) {
          isContinue = false
          break
        }
      }
      if (isContinue) {
        this.selectedUser.push(obj)
      }
      // this.selectedUser = Array.from(new Set(this.selectedUser))
    },
    // 提交
    submit () {
      if (this.selectedUser.length) {
        this.$emit('selected', this.selectedUser)
        this.cancel()
        this.submitLoading = false
      } else {
        this.$message({
          message: '请选择人员',
          type: 'error',
          duration: 5 * 1000
        })
      }
    },
    // 取消
    cancel () {
      this.$emit('showDialog')
      this.queryModel.nameLike = ''
    },
    // 已选人员删除
    delAssessor (objectId) {
      this.selectedUser = this.selectedUser.filter(item => item.objectId !== objectId)
    }
  },
  mounted () {
    // 列表初始化
    this.getTableData()
  },
  watch: {
    departmentId () {
      this.getTableData()
    },
    saveSelectedUser () {
      this.selectedUser = this.saveSelectedUser
    }
  }
}
</script>
<style scoped>
  .selectbox{
    background: #f7f8f9;
    padding: 10px 0;
    margin-bottom: 0px;
  }
  .el-dialog__body{
    /*overflow: hidden;*/
  }
  .el-dialog__body:after {
    display: block;
    content: "";
    clear: both;
  }
  .lefttree{
    width: 30%;
    float: left;
    /*padding: 10px 0;*/
    /*border: 1px solid #dcdfe6;*/
  }
  .lefttree .el-tree{
    margin-top: 0;
  }
  .rightselect{
    width: 67%;
    float: right;
  }
  .rightselect .el-table{
    margin-top: 0px;
  }
  .select_user_box{
    width: 100%;
    overflow: hidden;
    margin: 30px 10px;
  }
  .select_user_box p{
    width: 100%;
    height: 30px;
    line-height: 30px;
    border-bottom: 1px solid #dedede;
  }
  .select_user_box p span{
    color: #409EFF;
    border-bottom: 2px solid #409EFF;
    display: inline-block;
    padding: 0 10px;
    font-weight: bold;
  }
  .select_user_box ul{
    width: 100%;
    padding: 10px;
    border: 1px solid #dedede;
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
    overflow: hidden;
    margin-top: 10px;
  }
  .select_user_box ul li{
    width: 66px;
    height: 30px;
    line-height: 30px;
    float: left;
    margin: 8px;
    position: relative;
  }
  .select_user_box ul li span{
    display: block;
    width: 100%;
    height: 30px;
    text-align: center;
    background: #e9f8d8;
    -webkit-border-radius: 5px;
    -moz-border-radius: 5px;
    border-radius: 5px;
    overflow: hidden;
  }
  .select_user_box ul li i{
    width: 18px;
    height: 18px;
    position: absolute;
    top: -6px;
    right: -6px;
    display: inline-block;
    cursor: pointer;
    background: url("../../../../static/images/close.png") center center no-repeat;
  }
  .select_user_box ul.jc li span{
    background: #d8f8f8;
  }
</style>
